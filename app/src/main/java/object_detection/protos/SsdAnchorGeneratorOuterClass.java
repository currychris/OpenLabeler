/*
 * Copyright (c) 2020. Kin-Hong Wong. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/ssd_anchor_generator.proto

package object_detection.protos;

public final class SsdAnchorGeneratorOuterClass {
  private SsdAnchorGeneratorOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SsdAnchorGeneratorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.SsdAnchorGenerator)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Number of grid layers to create anchors for.
     * </pre>
     *
     * <code>optional int32 num_layers = 1 [default = 6];</code>
     * @return Whether the numLayers field is set.
     */
    boolean hasNumLayers();
    /**
     * <pre>
     * Number of grid layers to create anchors for.
     * </pre>
     *
     * <code>optional int32 num_layers = 1 [default = 6];</code>
     * @return The numLayers.
     */
    int getNumLayers();

    /**
     * <pre>
     * Scale of anchors corresponding to finest resolution.
     * </pre>
     *
     * <code>optional float min_scale = 2 [default = 0.2];</code>
     * @return Whether the minScale field is set.
     */
    boolean hasMinScale();
    /**
     * <pre>
     * Scale of anchors corresponding to finest resolution.
     * </pre>
     *
     * <code>optional float min_scale = 2 [default = 0.2];</code>
     * @return The minScale.
     */
    float getMinScale();

    /**
     * <pre>
     * Scale of anchors corresponding to coarsest resolution
     * </pre>
     *
     * <code>optional float max_scale = 3 [default = 0.95];</code>
     * @return Whether the maxScale field is set.
     */
    boolean hasMaxScale();
    /**
     * <pre>
     * Scale of anchors corresponding to coarsest resolution
     * </pre>
     *
     * <code>optional float max_scale = 3 [default = 0.95];</code>
     * @return The maxScale.
     */
    float getMaxScale();

    /**
     * <pre>
     * Can be used to override min_scale-&gt;max_scale, with an explicitly defined
     * set of scales.  If empty, then min_scale-&gt;max_scale is used.
     * </pre>
     *
     * <code>repeated float scales = 12;</code>
     * @return A list containing the scales.
     */
    java.util.List<java.lang.Float> getScalesList();
    /**
     * <pre>
     * Can be used to override min_scale-&gt;max_scale, with an explicitly defined
     * set of scales.  If empty, then min_scale-&gt;max_scale is used.
     * </pre>
     *
     * <code>repeated float scales = 12;</code>
     * @return The count of scales.
     */
    int getScalesCount();
    /**
     * <pre>
     * Can be used to override min_scale-&gt;max_scale, with an explicitly defined
     * set of scales.  If empty, then min_scale-&gt;max_scale is used.
     * </pre>
     *
     * <code>repeated float scales = 12;</code>
     * @param index The index of the element to return.
     * @return The scales at the given index.
     */
    float getScales(int index);

    /**
     * <pre>
     * Aspect ratios for anchors at each grid point.
     * </pre>
     *
     * <code>repeated float aspect_ratios = 4;</code>
     * @return A list containing the aspectRatios.
     */
    java.util.List<java.lang.Float> getAspectRatiosList();
    /**
     * <pre>
     * Aspect ratios for anchors at each grid point.
     * </pre>
     *
     * <code>repeated float aspect_ratios = 4;</code>
     * @return The count of aspectRatios.
     */
    int getAspectRatiosCount();
    /**
     * <pre>
     * Aspect ratios for anchors at each grid point.
     * </pre>
     *
     * <code>repeated float aspect_ratios = 4;</code>
     * @param index The index of the element to return.
     * @return The aspectRatios at the given index.
     */
    float getAspectRatios(int index);

    /**
     * <pre>
     * When this aspect ratio is greater than 0, then an additional
     * anchor, with an interpolated scale is added with this aspect ratio.
     * </pre>
     *
     * <code>optional float interpolated_scale_aspect_ratio = 13 [default = 1];</code>
     * @return Whether the interpolatedScaleAspectRatio field is set.
     */
    boolean hasInterpolatedScaleAspectRatio();
    /**
     * <pre>
     * When this aspect ratio is greater than 0, then an additional
     * anchor, with an interpolated scale is added with this aspect ratio.
     * </pre>
     *
     * <code>optional float interpolated_scale_aspect_ratio = 13 [default = 1];</code>
     * @return The interpolatedScaleAspectRatio.
     */
    float getInterpolatedScaleAspectRatio();

    /**
     * <pre>
     * Whether to use the following aspect ratio and scale combination for the
     * layer with the finest resolution : (scale=0.1, aspect_ratio=1.0),
     * (scale=min_scale, aspect_ration=2.0), (scale=min_scale, aspect_ratio=0.5).
     * </pre>
     *
     * <code>optional bool reduce_boxes_in_lowest_layer = 5 [default = true];</code>
     * @return Whether the reduceBoxesInLowestLayer field is set.
     */
    boolean hasReduceBoxesInLowestLayer();
    /**
     * <pre>
     * Whether to use the following aspect ratio and scale combination for the
     * layer with the finest resolution : (scale=0.1, aspect_ratio=1.0),
     * (scale=min_scale, aspect_ration=2.0), (scale=min_scale, aspect_ratio=0.5).
     * </pre>
     *
     * <code>optional bool reduce_boxes_in_lowest_layer = 5 [default = true];</code>
     * @return The reduceBoxesInLowestLayer.
     */
    boolean getReduceBoxesInLowestLayer();

    /**
     * <pre>
     * The base anchor size in height dimension.
     * </pre>
     *
     * <code>optional float base_anchor_height = 6 [default = 1];</code>
     * @return Whether the baseAnchorHeight field is set.
     */
    boolean hasBaseAnchorHeight();
    /**
     * <pre>
     * The base anchor size in height dimension.
     * </pre>
     *
     * <code>optional float base_anchor_height = 6 [default = 1];</code>
     * @return The baseAnchorHeight.
     */
    float getBaseAnchorHeight();

    /**
     * <pre>
     * The base anchor size in width dimension.
     * </pre>
     *
     * <code>optional float base_anchor_width = 7 [default = 1];</code>
     * @return Whether the baseAnchorWidth field is set.
     */
    boolean hasBaseAnchorWidth();
    /**
     * <pre>
     * The base anchor size in width dimension.
     * </pre>
     *
     * <code>optional float base_anchor_width = 7 [default = 1];</code>
     * @return The baseAnchorWidth.
     */
    float getBaseAnchorWidth();

    /**
     * <pre>
     * Anchor stride in height dimension in pixels for each layer. The length of
     * this field is expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 height_stride = 8;</code>
     * @return A list containing the heightStride.
     */
    java.util.List<java.lang.Integer> getHeightStrideList();
    /**
     * <pre>
     * Anchor stride in height dimension in pixels for each layer. The length of
     * this field is expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 height_stride = 8;</code>
     * @return The count of heightStride.
     */
    int getHeightStrideCount();
    /**
     * <pre>
     * Anchor stride in height dimension in pixels for each layer. The length of
     * this field is expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 height_stride = 8;</code>
     * @param index The index of the element to return.
     * @return The heightStride at the given index.
     */
    int getHeightStride(int index);

    /**
     * <pre>
     * Anchor stride in width dimension in pixels for each layer. The length of
     * this field is expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 width_stride = 9;</code>
     * @return A list containing the widthStride.
     */
    java.util.List<java.lang.Integer> getWidthStrideList();
    /**
     * <pre>
     * Anchor stride in width dimension in pixels for each layer. The length of
     * this field is expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 width_stride = 9;</code>
     * @return The count of widthStride.
     */
    int getWidthStrideCount();
    /**
     * <pre>
     * Anchor stride in width dimension in pixels for each layer. The length of
     * this field is expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 width_stride = 9;</code>
     * @param index The index of the element to return.
     * @return The widthStride at the given index.
     */
    int getWidthStride(int index);

    /**
     * <pre>
     * Anchor height offset in pixels for each layer. The length of this field is
     * expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 height_offset = 10;</code>
     * @return A list containing the heightOffset.
     */
    java.util.List<java.lang.Integer> getHeightOffsetList();
    /**
     * <pre>
     * Anchor height offset in pixels for each layer. The length of this field is
     * expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 height_offset = 10;</code>
     * @return The count of heightOffset.
     */
    int getHeightOffsetCount();
    /**
     * <pre>
     * Anchor height offset in pixels for each layer. The length of this field is
     * expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 height_offset = 10;</code>
     * @param index The index of the element to return.
     * @return The heightOffset at the given index.
     */
    int getHeightOffset(int index);

    /**
     * <pre>
     * Anchor width offset in pixels for each layer. The length of this field is
     * expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 width_offset = 11;</code>
     * @return A list containing the widthOffset.
     */
    java.util.List<java.lang.Integer> getWidthOffsetList();
    /**
     * <pre>
     * Anchor width offset in pixels for each layer. The length of this field is
     * expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 width_offset = 11;</code>
     * @return The count of widthOffset.
     */
    int getWidthOffsetCount();
    /**
     * <pre>
     * Anchor width offset in pixels for each layer. The length of this field is
     * expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 width_offset = 11;</code>
     * @param index The index of the element to return.
     * @return The widthOffset at the given index.
     */
    int getWidthOffset(int index);
  }
  /**
   * <pre>
   * Configuration proto for SSD anchor generator described in
   * https://arxiv.org/abs/1512.02325. See
   * anchor_generators/multiple_grid_anchor_generator.py for details.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.SsdAnchorGenerator}
   */
  public static final class SsdAnchorGenerator extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.SsdAnchorGenerator)
      SsdAnchorGeneratorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SsdAnchorGenerator.newBuilder() to construct.
    private SsdAnchorGenerator(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SsdAnchorGenerator() {
      numLayers_ = 6;
      minScale_ = 0.2F;
      maxScale_ = 0.95F;
      scales_ = emptyFloatList();
      aspectRatios_ = emptyFloatList();
      interpolatedScaleAspectRatio_ = 1F;
      reduceBoxesInLowestLayer_ = true;
      baseAnchorHeight_ = 1F;
      baseAnchorWidth_ = 1F;
      heightStride_ = emptyIntList();
      widthStride_ = emptyIntList();
      heightOffset_ = emptyIntList();
      widthOffset_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SsdAnchorGenerator();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SsdAnchorGenerator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              numLayers_ = input.readInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              minScale_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              maxScale_ = input.readFloat();
              break;
            }
            case 37: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                aspectRatios_ = newFloatList();
                mutable_bitField0_ |= 0x00000010;
              }
              aspectRatios_.addFloat(input.readFloat());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                aspectRatios_ = newFloatList();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                aspectRatios_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              reduceBoxesInLowestLayer_ = input.readBool();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              baseAnchorHeight_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              baseAnchorWidth_ = input.readFloat();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                heightStride_ = newIntList();
                mutable_bitField0_ |= 0x00000200;
              }
              heightStride_.addInt(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) != 0) && input.getBytesUntilLimit() > 0) {
                heightStride_ = newIntList();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                heightStride_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000400) != 0)) {
                widthStride_ = newIntList();
                mutable_bitField0_ |= 0x00000400;
              }
              widthStride_.addInt(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) != 0) && input.getBytesUntilLimit() > 0) {
                widthStride_ = newIntList();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                widthStride_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000800) != 0)) {
                heightOffset_ = newIntList();
                mutable_bitField0_ |= 0x00000800;
              }
              heightOffset_.addInt(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) != 0) && input.getBytesUntilLimit() > 0) {
                heightOffset_ = newIntList();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                heightOffset_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00001000) != 0)) {
                widthOffset_ = newIntList();
                mutable_bitField0_ |= 0x00001000;
              }
              widthOffset_.addInt(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) != 0) && input.getBytesUntilLimit() > 0) {
                widthOffset_ = newIntList();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                widthOffset_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 101: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                scales_ = newFloatList();
                mutable_bitField0_ |= 0x00000008;
              }
              scales_.addFloat(input.readFloat());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                scales_ = newFloatList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                scales_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 109: {
              bitField0_ |= 0x00000008;
              interpolatedScaleAspectRatio_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          aspectRatios_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000200) != 0)) {
          heightStride_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000400) != 0)) {
          widthStride_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000800) != 0)) {
          heightOffset_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00001000) != 0)) {
          widthOffset_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          scales_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.SsdAnchorGeneratorOuterClass.internal_static_object_detection_protos_SsdAnchorGenerator_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.SsdAnchorGeneratorOuterClass.internal_static_object_detection_protos_SsdAnchorGenerator_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator.class, object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator.Builder.class);
    }

    private int bitField0_;
    public static final int NUM_LAYERS_FIELD_NUMBER = 1;
    private int numLayers_;
    /**
     * <pre>
     * Number of grid layers to create anchors for.
     * </pre>
     *
     * <code>optional int32 num_layers = 1 [default = 6];</code>
     * @return Whether the numLayers field is set.
     */
    @java.lang.Override
    public boolean hasNumLayers() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Number of grid layers to create anchors for.
     * </pre>
     *
     * <code>optional int32 num_layers = 1 [default = 6];</code>
     * @return The numLayers.
     */
    @java.lang.Override
    public int getNumLayers() {
      return numLayers_;
    }

    public static final int MIN_SCALE_FIELD_NUMBER = 2;
    private float minScale_;
    /**
     * <pre>
     * Scale of anchors corresponding to finest resolution.
     * </pre>
     *
     * <code>optional float min_scale = 2 [default = 0.2];</code>
     * @return Whether the minScale field is set.
     */
    @java.lang.Override
    public boolean hasMinScale() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Scale of anchors corresponding to finest resolution.
     * </pre>
     *
     * <code>optional float min_scale = 2 [default = 0.2];</code>
     * @return The minScale.
     */
    @java.lang.Override
    public float getMinScale() {
      return minScale_;
    }

    public static final int MAX_SCALE_FIELD_NUMBER = 3;
    private float maxScale_;
    /**
     * <pre>
     * Scale of anchors corresponding to coarsest resolution
     * </pre>
     *
     * <code>optional float max_scale = 3 [default = 0.95];</code>
     * @return Whether the maxScale field is set.
     */
    @java.lang.Override
    public boolean hasMaxScale() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Scale of anchors corresponding to coarsest resolution
     * </pre>
     *
     * <code>optional float max_scale = 3 [default = 0.95];</code>
     * @return The maxScale.
     */
    @java.lang.Override
    public float getMaxScale() {
      return maxScale_;
    }

    public static final int SCALES_FIELD_NUMBER = 12;
    private com.google.protobuf.Internal.FloatList scales_;
    /**
     * <pre>
     * Can be used to override min_scale-&gt;max_scale, with an explicitly defined
     * set of scales.  If empty, then min_scale-&gt;max_scale is used.
     * </pre>
     *
     * <code>repeated float scales = 12;</code>
     * @return A list containing the scales.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getScalesList() {
      return scales_;
    }
    /**
     * <pre>
     * Can be used to override min_scale-&gt;max_scale, with an explicitly defined
     * set of scales.  If empty, then min_scale-&gt;max_scale is used.
     * </pre>
     *
     * <code>repeated float scales = 12;</code>
     * @return The count of scales.
     */
    public int getScalesCount() {
      return scales_.size();
    }
    /**
     * <pre>
     * Can be used to override min_scale-&gt;max_scale, with an explicitly defined
     * set of scales.  If empty, then min_scale-&gt;max_scale is used.
     * </pre>
     *
     * <code>repeated float scales = 12;</code>
     * @param index The index of the element to return.
     * @return The scales at the given index.
     */
    public float getScales(int index) {
      return scales_.getFloat(index);
    }

    public static final int ASPECT_RATIOS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.FloatList aspectRatios_;
    /**
     * <pre>
     * Aspect ratios for anchors at each grid point.
     * </pre>
     *
     * <code>repeated float aspect_ratios = 4;</code>
     * @return A list containing the aspectRatios.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getAspectRatiosList() {
      return aspectRatios_;
    }
    /**
     * <pre>
     * Aspect ratios for anchors at each grid point.
     * </pre>
     *
     * <code>repeated float aspect_ratios = 4;</code>
     * @return The count of aspectRatios.
     */
    public int getAspectRatiosCount() {
      return aspectRatios_.size();
    }
    /**
     * <pre>
     * Aspect ratios for anchors at each grid point.
     * </pre>
     *
     * <code>repeated float aspect_ratios = 4;</code>
     * @param index The index of the element to return.
     * @return The aspectRatios at the given index.
     */
    public float getAspectRatios(int index) {
      return aspectRatios_.getFloat(index);
    }

    public static final int INTERPOLATED_SCALE_ASPECT_RATIO_FIELD_NUMBER = 13;
    private float interpolatedScaleAspectRatio_;
    /**
     * <pre>
     * When this aspect ratio is greater than 0, then an additional
     * anchor, with an interpolated scale is added with this aspect ratio.
     * </pre>
     *
     * <code>optional float interpolated_scale_aspect_ratio = 13 [default = 1];</code>
     * @return Whether the interpolatedScaleAspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasInterpolatedScaleAspectRatio() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * When this aspect ratio is greater than 0, then an additional
     * anchor, with an interpolated scale is added with this aspect ratio.
     * </pre>
     *
     * <code>optional float interpolated_scale_aspect_ratio = 13 [default = 1];</code>
     * @return The interpolatedScaleAspectRatio.
     */
    @java.lang.Override
    public float getInterpolatedScaleAspectRatio() {
      return interpolatedScaleAspectRatio_;
    }

    public static final int REDUCE_BOXES_IN_LOWEST_LAYER_FIELD_NUMBER = 5;
    private boolean reduceBoxesInLowestLayer_;
    /**
     * <pre>
     * Whether to use the following aspect ratio and scale combination for the
     * layer with the finest resolution : (scale=0.1, aspect_ratio=1.0),
     * (scale=min_scale, aspect_ration=2.0), (scale=min_scale, aspect_ratio=0.5).
     * </pre>
     *
     * <code>optional bool reduce_boxes_in_lowest_layer = 5 [default = true];</code>
     * @return Whether the reduceBoxesInLowestLayer field is set.
     */
    @java.lang.Override
    public boolean hasReduceBoxesInLowestLayer() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Whether to use the following aspect ratio and scale combination for the
     * layer with the finest resolution : (scale=0.1, aspect_ratio=1.0),
     * (scale=min_scale, aspect_ration=2.0), (scale=min_scale, aspect_ratio=0.5).
     * </pre>
     *
     * <code>optional bool reduce_boxes_in_lowest_layer = 5 [default = true];</code>
     * @return The reduceBoxesInLowestLayer.
     */
    @java.lang.Override
    public boolean getReduceBoxesInLowestLayer() {
      return reduceBoxesInLowestLayer_;
    }

    public static final int BASE_ANCHOR_HEIGHT_FIELD_NUMBER = 6;
    private float baseAnchorHeight_;
    /**
     * <pre>
     * The base anchor size in height dimension.
     * </pre>
     *
     * <code>optional float base_anchor_height = 6 [default = 1];</code>
     * @return Whether the baseAnchorHeight field is set.
     */
    @java.lang.Override
    public boolean hasBaseAnchorHeight() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The base anchor size in height dimension.
     * </pre>
     *
     * <code>optional float base_anchor_height = 6 [default = 1];</code>
     * @return The baseAnchorHeight.
     */
    @java.lang.Override
    public float getBaseAnchorHeight() {
      return baseAnchorHeight_;
    }

    public static final int BASE_ANCHOR_WIDTH_FIELD_NUMBER = 7;
    private float baseAnchorWidth_;
    /**
     * <pre>
     * The base anchor size in width dimension.
     * </pre>
     *
     * <code>optional float base_anchor_width = 7 [default = 1];</code>
     * @return Whether the baseAnchorWidth field is set.
     */
    @java.lang.Override
    public boolean hasBaseAnchorWidth() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * The base anchor size in width dimension.
     * </pre>
     *
     * <code>optional float base_anchor_width = 7 [default = 1];</code>
     * @return The baseAnchorWidth.
     */
    @java.lang.Override
    public float getBaseAnchorWidth() {
      return baseAnchorWidth_;
    }

    public static final int HEIGHT_STRIDE_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.IntList heightStride_;
    /**
     * <pre>
     * Anchor stride in height dimension in pixels for each layer. The length of
     * this field is expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 height_stride = 8;</code>
     * @return A list containing the heightStride.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getHeightStrideList() {
      return heightStride_;
    }
    /**
     * <pre>
     * Anchor stride in height dimension in pixels for each layer. The length of
     * this field is expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 height_stride = 8;</code>
     * @return The count of heightStride.
     */
    public int getHeightStrideCount() {
      return heightStride_.size();
    }
    /**
     * <pre>
     * Anchor stride in height dimension in pixels for each layer. The length of
     * this field is expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 height_stride = 8;</code>
     * @param index The index of the element to return.
     * @return The heightStride at the given index.
     */
    public int getHeightStride(int index) {
      return heightStride_.getInt(index);
    }

    public static final int WIDTH_STRIDE_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.IntList widthStride_;
    /**
     * <pre>
     * Anchor stride in width dimension in pixels for each layer. The length of
     * this field is expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 width_stride = 9;</code>
     * @return A list containing the widthStride.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getWidthStrideList() {
      return widthStride_;
    }
    /**
     * <pre>
     * Anchor stride in width dimension in pixels for each layer. The length of
     * this field is expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 width_stride = 9;</code>
     * @return The count of widthStride.
     */
    public int getWidthStrideCount() {
      return widthStride_.size();
    }
    /**
     * <pre>
     * Anchor stride in width dimension in pixels for each layer. The length of
     * this field is expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 width_stride = 9;</code>
     * @param index The index of the element to return.
     * @return The widthStride at the given index.
     */
    public int getWidthStride(int index) {
      return widthStride_.getInt(index);
    }

    public static final int HEIGHT_OFFSET_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.IntList heightOffset_;
    /**
     * <pre>
     * Anchor height offset in pixels for each layer. The length of this field is
     * expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 height_offset = 10;</code>
     * @return A list containing the heightOffset.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getHeightOffsetList() {
      return heightOffset_;
    }
    /**
     * <pre>
     * Anchor height offset in pixels for each layer. The length of this field is
     * expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 height_offset = 10;</code>
     * @return The count of heightOffset.
     */
    public int getHeightOffsetCount() {
      return heightOffset_.size();
    }
    /**
     * <pre>
     * Anchor height offset in pixels for each layer. The length of this field is
     * expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 height_offset = 10;</code>
     * @param index The index of the element to return.
     * @return The heightOffset at the given index.
     */
    public int getHeightOffset(int index) {
      return heightOffset_.getInt(index);
    }

    public static final int WIDTH_OFFSET_FIELD_NUMBER = 11;
    private com.google.protobuf.Internal.IntList widthOffset_;
    /**
     * <pre>
     * Anchor width offset in pixels for each layer. The length of this field is
     * expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 width_offset = 11;</code>
     * @return A list containing the widthOffset.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getWidthOffsetList() {
      return widthOffset_;
    }
    /**
     * <pre>
     * Anchor width offset in pixels for each layer. The length of this field is
     * expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 width_offset = 11;</code>
     * @return The count of widthOffset.
     */
    public int getWidthOffsetCount() {
      return widthOffset_.size();
    }
    /**
     * <pre>
     * Anchor width offset in pixels for each layer. The length of this field is
     * expected to be equal to the value of num_layers.
     * </pre>
     *
     * <code>repeated int32 width_offset = 11;</code>
     * @param index The index of the element to return.
     * @return The widthOffset at the given index.
     */
    public int getWidthOffset(int index) {
      return widthOffset_.getInt(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, numLayers_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, minScale_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, maxScale_);
      }
      for (int i = 0; i < aspectRatios_.size(); i++) {
        output.writeFloat(4, aspectRatios_.getFloat(i));
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBool(5, reduceBoxesInLowestLayer_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFloat(6, baseAnchorHeight_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeFloat(7, baseAnchorWidth_);
      }
      for (int i = 0; i < heightStride_.size(); i++) {
        output.writeInt32(8, heightStride_.getInt(i));
      }
      for (int i = 0; i < widthStride_.size(); i++) {
        output.writeInt32(9, widthStride_.getInt(i));
      }
      for (int i = 0; i < heightOffset_.size(); i++) {
        output.writeInt32(10, heightOffset_.getInt(i));
      }
      for (int i = 0; i < widthOffset_.size(); i++) {
        output.writeInt32(11, widthOffset_.getInt(i));
      }
      for (int i = 0; i < scales_.size(); i++) {
        output.writeFloat(12, scales_.getFloat(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(13, interpolatedScaleAspectRatio_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, numLayers_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, minScale_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, maxScale_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getAspectRatiosList().size();
        size += dataSize;
        size += 1 * getAspectRatiosList().size();
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, reduceBoxesInLowestLayer_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, baseAnchorHeight_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, baseAnchorWidth_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < heightStride_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(heightStride_.getInt(i));
        }
        size += dataSize;
        size += 1 * getHeightStrideList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < widthStride_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(widthStride_.getInt(i));
        }
        size += dataSize;
        size += 1 * getWidthStrideList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < heightOffset_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(heightOffset_.getInt(i));
        }
        size += dataSize;
        size += 1 * getHeightOffsetList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < widthOffset_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(widthOffset_.getInt(i));
        }
        size += dataSize;
        size += 1 * getWidthOffsetList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getScalesList().size();
        size += dataSize;
        size += 1 * getScalesList().size();
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, interpolatedScaleAspectRatio_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator)) {
        return super.equals(obj);
      }
      object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator other = (object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator) obj;

      if (hasNumLayers() != other.hasNumLayers()) return false;
      if (hasNumLayers()) {
        if (getNumLayers()
            != other.getNumLayers()) return false;
      }
      if (hasMinScale() != other.hasMinScale()) return false;
      if (hasMinScale()) {
        if (java.lang.Float.floatToIntBits(getMinScale())
            != java.lang.Float.floatToIntBits(
                other.getMinScale())) return false;
      }
      if (hasMaxScale() != other.hasMaxScale()) return false;
      if (hasMaxScale()) {
        if (java.lang.Float.floatToIntBits(getMaxScale())
            != java.lang.Float.floatToIntBits(
                other.getMaxScale())) return false;
      }
      if (!getScalesList()
          .equals(other.getScalesList())) return false;
      if (!getAspectRatiosList()
          .equals(other.getAspectRatiosList())) return false;
      if (hasInterpolatedScaleAspectRatio() != other.hasInterpolatedScaleAspectRatio()) return false;
      if (hasInterpolatedScaleAspectRatio()) {
        if (java.lang.Float.floatToIntBits(getInterpolatedScaleAspectRatio())
            != java.lang.Float.floatToIntBits(
                other.getInterpolatedScaleAspectRatio())) return false;
      }
      if (hasReduceBoxesInLowestLayer() != other.hasReduceBoxesInLowestLayer()) return false;
      if (hasReduceBoxesInLowestLayer()) {
        if (getReduceBoxesInLowestLayer()
            != other.getReduceBoxesInLowestLayer()) return false;
      }
      if (hasBaseAnchorHeight() != other.hasBaseAnchorHeight()) return false;
      if (hasBaseAnchorHeight()) {
        if (java.lang.Float.floatToIntBits(getBaseAnchorHeight())
            != java.lang.Float.floatToIntBits(
                other.getBaseAnchorHeight())) return false;
      }
      if (hasBaseAnchorWidth() != other.hasBaseAnchorWidth()) return false;
      if (hasBaseAnchorWidth()) {
        if (java.lang.Float.floatToIntBits(getBaseAnchorWidth())
            != java.lang.Float.floatToIntBits(
                other.getBaseAnchorWidth())) return false;
      }
      if (!getHeightStrideList()
          .equals(other.getHeightStrideList())) return false;
      if (!getWidthStrideList()
          .equals(other.getWidthStrideList())) return false;
      if (!getHeightOffsetList()
          .equals(other.getHeightOffsetList())) return false;
      if (!getWidthOffsetList()
          .equals(other.getWidthOffsetList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNumLayers()) {
        hash = (37 * hash) + NUM_LAYERS_FIELD_NUMBER;
        hash = (53 * hash) + getNumLayers();
      }
      if (hasMinScale()) {
        hash = (37 * hash) + MIN_SCALE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinScale());
      }
      if (hasMaxScale()) {
        hash = (37 * hash) + MAX_SCALE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxScale());
      }
      if (getScalesCount() > 0) {
        hash = (37 * hash) + SCALES_FIELD_NUMBER;
        hash = (53 * hash) + getScalesList().hashCode();
      }
      if (getAspectRatiosCount() > 0) {
        hash = (37 * hash) + ASPECT_RATIOS_FIELD_NUMBER;
        hash = (53 * hash) + getAspectRatiosList().hashCode();
      }
      if (hasInterpolatedScaleAspectRatio()) {
        hash = (37 * hash) + INTERPOLATED_SCALE_ASPECT_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getInterpolatedScaleAspectRatio());
      }
      if (hasReduceBoxesInLowestLayer()) {
        hash = (37 * hash) + REDUCE_BOXES_IN_LOWEST_LAYER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getReduceBoxesInLowestLayer());
      }
      if (hasBaseAnchorHeight()) {
        hash = (37 * hash) + BASE_ANCHOR_HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getBaseAnchorHeight());
      }
      if (hasBaseAnchorWidth()) {
        hash = (37 * hash) + BASE_ANCHOR_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getBaseAnchorWidth());
      }
      if (getHeightStrideCount() > 0) {
        hash = (37 * hash) + HEIGHT_STRIDE_FIELD_NUMBER;
        hash = (53 * hash) + getHeightStrideList().hashCode();
      }
      if (getWidthStrideCount() > 0) {
        hash = (37 * hash) + WIDTH_STRIDE_FIELD_NUMBER;
        hash = (53 * hash) + getWidthStrideList().hashCode();
      }
      if (getHeightOffsetCount() > 0) {
        hash = (37 * hash) + HEIGHT_OFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getHeightOffsetList().hashCode();
      }
      if (getWidthOffsetCount() > 0) {
        hash = (37 * hash) + WIDTH_OFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getWidthOffsetList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Configuration proto for SSD anchor generator described in
     * https://arxiv.org/abs/1512.02325. See
     * anchor_generators/multiple_grid_anchor_generator.py for details.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.SsdAnchorGenerator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.SsdAnchorGenerator)
        object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGeneratorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.SsdAnchorGeneratorOuterClass.internal_static_object_detection_protos_SsdAnchorGenerator_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.SsdAnchorGeneratorOuterClass.internal_static_object_detection_protos_SsdAnchorGenerator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator.class, object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator.Builder.class);
      }

      // Construct using object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        numLayers_ = 6;
        bitField0_ = (bitField0_ & ~0x00000001);
        minScale_ = 0.2F;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxScale_ = 0.95F;
        bitField0_ = (bitField0_ & ~0x00000004);
        scales_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000008);
        aspectRatios_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000010);
        interpolatedScaleAspectRatio_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000020);
        reduceBoxesInLowestLayer_ = true;
        bitField0_ = (bitField0_ & ~0x00000040);
        baseAnchorHeight_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000080);
        baseAnchorWidth_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000100);
        heightStride_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000200);
        widthStride_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000400);
        heightOffset_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000800);
        widthOffset_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.SsdAnchorGeneratorOuterClass.internal_static_object_detection_protos_SsdAnchorGenerator_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator getDefaultInstanceForType() {
        return object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator build() {
        object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator buildPartial() {
        object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator result = new object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.numLayers_ = numLayers_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minScale_ = minScale_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxScale_ = maxScale_;
        if (((bitField0_ & 0x00000008) != 0)) {
          scales_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.scales_ = scales_;
        if (((bitField0_ & 0x00000010) != 0)) {
          aspectRatios_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.aspectRatios_ = aspectRatios_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.interpolatedScaleAspectRatio_ = interpolatedScaleAspectRatio_;
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.reduceBoxesInLowestLayer_ = reduceBoxesInLowestLayer_;
        if (((from_bitField0_ & 0x00000080) != 0)) {
          to_bitField0_ |= 0x00000020;
        }
        result.baseAnchorHeight_ = baseAnchorHeight_;
        if (((from_bitField0_ & 0x00000100) != 0)) {
          to_bitField0_ |= 0x00000040;
        }
        result.baseAnchorWidth_ = baseAnchorWidth_;
        if (((bitField0_ & 0x00000200) != 0)) {
          heightStride_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.heightStride_ = heightStride_;
        if (((bitField0_ & 0x00000400) != 0)) {
          widthStride_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.widthStride_ = widthStride_;
        if (((bitField0_ & 0x00000800) != 0)) {
          heightOffset_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.heightOffset_ = heightOffset_;
        if (((bitField0_ & 0x00001000) != 0)) {
          widthOffset_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.widthOffset_ = widthOffset_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator) {
          return mergeFrom((object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator other) {
        if (other == object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator.getDefaultInstance()) return this;
        if (other.hasNumLayers()) {
          setNumLayers(other.getNumLayers());
        }
        if (other.hasMinScale()) {
          setMinScale(other.getMinScale());
        }
        if (other.hasMaxScale()) {
          setMaxScale(other.getMaxScale());
        }
        if (!other.scales_.isEmpty()) {
          if (scales_.isEmpty()) {
            scales_ = other.scales_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureScalesIsMutable();
            scales_.addAll(other.scales_);
          }
          onChanged();
        }
        if (!other.aspectRatios_.isEmpty()) {
          if (aspectRatios_.isEmpty()) {
            aspectRatios_ = other.aspectRatios_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureAspectRatiosIsMutable();
            aspectRatios_.addAll(other.aspectRatios_);
          }
          onChanged();
        }
        if (other.hasInterpolatedScaleAspectRatio()) {
          setInterpolatedScaleAspectRatio(other.getInterpolatedScaleAspectRatio());
        }
        if (other.hasReduceBoxesInLowestLayer()) {
          setReduceBoxesInLowestLayer(other.getReduceBoxesInLowestLayer());
        }
        if (other.hasBaseAnchorHeight()) {
          setBaseAnchorHeight(other.getBaseAnchorHeight());
        }
        if (other.hasBaseAnchorWidth()) {
          setBaseAnchorWidth(other.getBaseAnchorWidth());
        }
        if (!other.heightStride_.isEmpty()) {
          if (heightStride_.isEmpty()) {
            heightStride_ = other.heightStride_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureHeightStrideIsMutable();
            heightStride_.addAll(other.heightStride_);
          }
          onChanged();
        }
        if (!other.widthStride_.isEmpty()) {
          if (widthStride_.isEmpty()) {
            widthStride_ = other.widthStride_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureWidthStrideIsMutable();
            widthStride_.addAll(other.widthStride_);
          }
          onChanged();
        }
        if (!other.heightOffset_.isEmpty()) {
          if (heightOffset_.isEmpty()) {
            heightOffset_ = other.heightOffset_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureHeightOffsetIsMutable();
            heightOffset_.addAll(other.heightOffset_);
          }
          onChanged();
        }
        if (!other.widthOffset_.isEmpty()) {
          if (widthOffset_.isEmpty()) {
            widthOffset_ = other.widthOffset_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureWidthOffsetIsMutable();
            widthOffset_.addAll(other.widthOffset_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int numLayers_ = 6;
      /**
       * <pre>
       * Number of grid layers to create anchors for.
       * </pre>
       *
       * <code>optional int32 num_layers = 1 [default = 6];</code>
       * @return Whether the numLayers field is set.
       */
      @java.lang.Override
      public boolean hasNumLayers() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Number of grid layers to create anchors for.
       * </pre>
       *
       * <code>optional int32 num_layers = 1 [default = 6];</code>
       * @return The numLayers.
       */
      @java.lang.Override
      public int getNumLayers() {
        return numLayers_;
      }
      /**
       * <pre>
       * Number of grid layers to create anchors for.
       * </pre>
       *
       * <code>optional int32 num_layers = 1 [default = 6];</code>
       * @param value The numLayers to set.
       * @return This builder for chaining.
       */
      public Builder setNumLayers(int value) {
        bitField0_ |= 0x00000001;
        numLayers_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of grid layers to create anchors for.
       * </pre>
       *
       * <code>optional int32 num_layers = 1 [default = 6];</code>
       * @return This builder for chaining.
       */
      public Builder clearNumLayers() {
        bitField0_ = (bitField0_ & ~0x00000001);
        numLayers_ = 6;
        onChanged();
        return this;
      }

      private float minScale_ = 0.2F;
      /**
       * <pre>
       * Scale of anchors corresponding to finest resolution.
       * </pre>
       *
       * <code>optional float min_scale = 2 [default = 0.2];</code>
       * @return Whether the minScale field is set.
       */
      @java.lang.Override
      public boolean hasMinScale() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Scale of anchors corresponding to finest resolution.
       * </pre>
       *
       * <code>optional float min_scale = 2 [default = 0.2];</code>
       * @return The minScale.
       */
      @java.lang.Override
      public float getMinScale() {
        return minScale_;
      }
      /**
       * <pre>
       * Scale of anchors corresponding to finest resolution.
       * </pre>
       *
       * <code>optional float min_scale = 2 [default = 0.2];</code>
       * @param value The minScale to set.
       * @return This builder for chaining.
       */
      public Builder setMinScale(float value) {
        bitField0_ |= 0x00000002;
        minScale_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Scale of anchors corresponding to finest resolution.
       * </pre>
       *
       * <code>optional float min_scale = 2 [default = 0.2];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinScale() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minScale_ = 0.2F;
        onChanged();
        return this;
      }

      private float maxScale_ = 0.95F;
      /**
       * <pre>
       * Scale of anchors corresponding to coarsest resolution
       * </pre>
       *
       * <code>optional float max_scale = 3 [default = 0.95];</code>
       * @return Whether the maxScale field is set.
       */
      @java.lang.Override
      public boolean hasMaxScale() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Scale of anchors corresponding to coarsest resolution
       * </pre>
       *
       * <code>optional float max_scale = 3 [default = 0.95];</code>
       * @return The maxScale.
       */
      @java.lang.Override
      public float getMaxScale() {
        return maxScale_;
      }
      /**
       * <pre>
       * Scale of anchors corresponding to coarsest resolution
       * </pre>
       *
       * <code>optional float max_scale = 3 [default = 0.95];</code>
       * @param value The maxScale to set.
       * @return This builder for chaining.
       */
      public Builder setMaxScale(float value) {
        bitField0_ |= 0x00000004;
        maxScale_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Scale of anchors corresponding to coarsest resolution
       * </pre>
       *
       * <code>optional float max_scale = 3 [default = 0.95];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxScale() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxScale_ = 0.95F;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList scales_ = emptyFloatList();
      private void ensureScalesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          scales_ = mutableCopy(scales_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * Can be used to override min_scale-&gt;max_scale, with an explicitly defined
       * set of scales.  If empty, then min_scale-&gt;max_scale is used.
       * </pre>
       *
       * <code>repeated float scales = 12;</code>
       * @return A list containing the scales.
       */
      public java.util.List<java.lang.Float>
          getScalesList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(scales_) : scales_;
      }
      /**
       * <pre>
       * Can be used to override min_scale-&gt;max_scale, with an explicitly defined
       * set of scales.  If empty, then min_scale-&gt;max_scale is used.
       * </pre>
       *
       * <code>repeated float scales = 12;</code>
       * @return The count of scales.
       */
      public int getScalesCount() {
        return scales_.size();
      }
      /**
       * <pre>
       * Can be used to override min_scale-&gt;max_scale, with an explicitly defined
       * set of scales.  If empty, then min_scale-&gt;max_scale is used.
       * </pre>
       *
       * <code>repeated float scales = 12;</code>
       * @param index The index of the element to return.
       * @return The scales at the given index.
       */
      public float getScales(int index) {
        return scales_.getFloat(index);
      }
      /**
       * <pre>
       * Can be used to override min_scale-&gt;max_scale, with an explicitly defined
       * set of scales.  If empty, then min_scale-&gt;max_scale is used.
       * </pre>
       *
       * <code>repeated float scales = 12;</code>
       * @param index The index to set the value at.
       * @param value The scales to set.
       * @return This builder for chaining.
       */
      public Builder setScales(
          int index, float value) {
        ensureScalesIsMutable();
        scales_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Can be used to override min_scale-&gt;max_scale, with an explicitly defined
       * set of scales.  If empty, then min_scale-&gt;max_scale is used.
       * </pre>
       *
       * <code>repeated float scales = 12;</code>
       * @param value The scales to add.
       * @return This builder for chaining.
       */
      public Builder addScales(float value) {
        ensureScalesIsMutable();
        scales_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Can be used to override min_scale-&gt;max_scale, with an explicitly defined
       * set of scales.  If empty, then min_scale-&gt;max_scale is used.
       * </pre>
       *
       * <code>repeated float scales = 12;</code>
       * @param values The scales to add.
       * @return This builder for chaining.
       */
      public Builder addAllScales(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureScalesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, scales_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Can be used to override min_scale-&gt;max_scale, with an explicitly defined
       * set of scales.  If empty, then min_scale-&gt;max_scale is used.
       * </pre>
       *
       * <code>repeated float scales = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearScales() {
        scales_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList aspectRatios_ = emptyFloatList();
      private void ensureAspectRatiosIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          aspectRatios_ = mutableCopy(aspectRatios_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       * Aspect ratios for anchors at each grid point.
       * </pre>
       *
       * <code>repeated float aspect_ratios = 4;</code>
       * @return A list containing the aspectRatios.
       */
      public java.util.List<java.lang.Float>
          getAspectRatiosList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(aspectRatios_) : aspectRatios_;
      }
      /**
       * <pre>
       * Aspect ratios for anchors at each grid point.
       * </pre>
       *
       * <code>repeated float aspect_ratios = 4;</code>
       * @return The count of aspectRatios.
       */
      public int getAspectRatiosCount() {
        return aspectRatios_.size();
      }
      /**
       * <pre>
       * Aspect ratios for anchors at each grid point.
       * </pre>
       *
       * <code>repeated float aspect_ratios = 4;</code>
       * @param index The index of the element to return.
       * @return The aspectRatios at the given index.
       */
      public float getAspectRatios(int index) {
        return aspectRatios_.getFloat(index);
      }
      /**
       * <pre>
       * Aspect ratios for anchors at each grid point.
       * </pre>
       *
       * <code>repeated float aspect_ratios = 4;</code>
       * @param index The index to set the value at.
       * @param value The aspectRatios to set.
       * @return This builder for chaining.
       */
      public Builder setAspectRatios(
          int index, float value) {
        ensureAspectRatiosIsMutable();
        aspectRatios_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Aspect ratios for anchors at each grid point.
       * </pre>
       *
       * <code>repeated float aspect_ratios = 4;</code>
       * @param value The aspectRatios to add.
       * @return This builder for chaining.
       */
      public Builder addAspectRatios(float value) {
        ensureAspectRatiosIsMutable();
        aspectRatios_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Aspect ratios for anchors at each grid point.
       * </pre>
       *
       * <code>repeated float aspect_ratios = 4;</code>
       * @param values The aspectRatios to add.
       * @return This builder for chaining.
       */
      public Builder addAllAspectRatios(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureAspectRatiosIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, aspectRatios_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Aspect ratios for anchors at each grid point.
       * </pre>
       *
       * <code>repeated float aspect_ratios = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAspectRatios() {
        aspectRatios_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private float interpolatedScaleAspectRatio_ = 1F;
      /**
       * <pre>
       * When this aspect ratio is greater than 0, then an additional
       * anchor, with an interpolated scale is added with this aspect ratio.
       * </pre>
       *
       * <code>optional float interpolated_scale_aspect_ratio = 13 [default = 1];</code>
       * @return Whether the interpolatedScaleAspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasInterpolatedScaleAspectRatio() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * When this aspect ratio is greater than 0, then an additional
       * anchor, with an interpolated scale is added with this aspect ratio.
       * </pre>
       *
       * <code>optional float interpolated_scale_aspect_ratio = 13 [default = 1];</code>
       * @return The interpolatedScaleAspectRatio.
       */
      @java.lang.Override
      public float getInterpolatedScaleAspectRatio() {
        return interpolatedScaleAspectRatio_;
      }
      /**
       * <pre>
       * When this aspect ratio is greater than 0, then an additional
       * anchor, with an interpolated scale is added with this aspect ratio.
       * </pre>
       *
       * <code>optional float interpolated_scale_aspect_ratio = 13 [default = 1];</code>
       * @param value The interpolatedScaleAspectRatio to set.
       * @return This builder for chaining.
       */
      public Builder setInterpolatedScaleAspectRatio(float value) {
        bitField0_ |= 0x00000020;
        interpolatedScaleAspectRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * When this aspect ratio is greater than 0, then an additional
       * anchor, with an interpolated scale is added with this aspect ratio.
       * </pre>
       *
       * <code>optional float interpolated_scale_aspect_ratio = 13 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearInterpolatedScaleAspectRatio() {
        bitField0_ = (bitField0_ & ~0x00000020);
        interpolatedScaleAspectRatio_ = 1F;
        onChanged();
        return this;
      }

      private boolean reduceBoxesInLowestLayer_ = true;
      /**
       * <pre>
       * Whether to use the following aspect ratio and scale combination for the
       * layer with the finest resolution : (scale=0.1, aspect_ratio=1.0),
       * (scale=min_scale, aspect_ration=2.0), (scale=min_scale, aspect_ratio=0.5).
       * </pre>
       *
       * <code>optional bool reduce_boxes_in_lowest_layer = 5 [default = true];</code>
       * @return Whether the reduceBoxesInLowestLayer field is set.
       */
      @java.lang.Override
      public boolean hasReduceBoxesInLowestLayer() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Whether to use the following aspect ratio and scale combination for the
       * layer with the finest resolution : (scale=0.1, aspect_ratio=1.0),
       * (scale=min_scale, aspect_ration=2.0), (scale=min_scale, aspect_ratio=0.5).
       * </pre>
       *
       * <code>optional bool reduce_boxes_in_lowest_layer = 5 [default = true];</code>
       * @return The reduceBoxesInLowestLayer.
       */
      @java.lang.Override
      public boolean getReduceBoxesInLowestLayer() {
        return reduceBoxesInLowestLayer_;
      }
      /**
       * <pre>
       * Whether to use the following aspect ratio and scale combination for the
       * layer with the finest resolution : (scale=0.1, aspect_ratio=1.0),
       * (scale=min_scale, aspect_ration=2.0), (scale=min_scale, aspect_ratio=0.5).
       * </pre>
       *
       * <code>optional bool reduce_boxes_in_lowest_layer = 5 [default = true];</code>
       * @param value The reduceBoxesInLowestLayer to set.
       * @return This builder for chaining.
       */
      public Builder setReduceBoxesInLowestLayer(boolean value) {
        bitField0_ |= 0x00000040;
        reduceBoxesInLowestLayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to use the following aspect ratio and scale combination for the
       * layer with the finest resolution : (scale=0.1, aspect_ratio=1.0),
       * (scale=min_scale, aspect_ration=2.0), (scale=min_scale, aspect_ratio=0.5).
       * </pre>
       *
       * <code>optional bool reduce_boxes_in_lowest_layer = 5 [default = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearReduceBoxesInLowestLayer() {
        bitField0_ = (bitField0_ & ~0x00000040);
        reduceBoxesInLowestLayer_ = true;
        onChanged();
        return this;
      }

      private float baseAnchorHeight_ = 1F;
      /**
       * <pre>
       * The base anchor size in height dimension.
       * </pre>
       *
       * <code>optional float base_anchor_height = 6 [default = 1];</code>
       * @return Whether the baseAnchorHeight field is set.
       */
      @java.lang.Override
      public boolean hasBaseAnchorHeight() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * The base anchor size in height dimension.
       * </pre>
       *
       * <code>optional float base_anchor_height = 6 [default = 1];</code>
       * @return The baseAnchorHeight.
       */
      @java.lang.Override
      public float getBaseAnchorHeight() {
        return baseAnchorHeight_;
      }
      /**
       * <pre>
       * The base anchor size in height dimension.
       * </pre>
       *
       * <code>optional float base_anchor_height = 6 [default = 1];</code>
       * @param value The baseAnchorHeight to set.
       * @return This builder for chaining.
       */
      public Builder setBaseAnchorHeight(float value) {
        bitField0_ |= 0x00000080;
        baseAnchorHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The base anchor size in height dimension.
       * </pre>
       *
       * <code>optional float base_anchor_height = 6 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearBaseAnchorHeight() {
        bitField0_ = (bitField0_ & ~0x00000080);
        baseAnchorHeight_ = 1F;
        onChanged();
        return this;
      }

      private float baseAnchorWidth_ = 1F;
      /**
       * <pre>
       * The base anchor size in width dimension.
       * </pre>
       *
       * <code>optional float base_anchor_width = 7 [default = 1];</code>
       * @return Whether the baseAnchorWidth field is set.
       */
      @java.lang.Override
      public boolean hasBaseAnchorWidth() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * The base anchor size in width dimension.
       * </pre>
       *
       * <code>optional float base_anchor_width = 7 [default = 1];</code>
       * @return The baseAnchorWidth.
       */
      @java.lang.Override
      public float getBaseAnchorWidth() {
        return baseAnchorWidth_;
      }
      /**
       * <pre>
       * The base anchor size in width dimension.
       * </pre>
       *
       * <code>optional float base_anchor_width = 7 [default = 1];</code>
       * @param value The baseAnchorWidth to set.
       * @return This builder for chaining.
       */
      public Builder setBaseAnchorWidth(float value) {
        bitField0_ |= 0x00000100;
        baseAnchorWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The base anchor size in width dimension.
       * </pre>
       *
       * <code>optional float base_anchor_width = 7 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearBaseAnchorWidth() {
        bitField0_ = (bitField0_ & ~0x00000100);
        baseAnchorWidth_ = 1F;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList heightStride_ = emptyIntList();
      private void ensureHeightStrideIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          heightStride_ = mutableCopy(heightStride_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <pre>
       * Anchor stride in height dimension in pixels for each layer. The length of
       * this field is expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 height_stride = 8;</code>
       * @return A list containing the heightStride.
       */
      public java.util.List<java.lang.Integer>
          getHeightStrideList() {
        return ((bitField0_ & 0x00000200) != 0) ?
                 java.util.Collections.unmodifiableList(heightStride_) : heightStride_;
      }
      /**
       * <pre>
       * Anchor stride in height dimension in pixels for each layer. The length of
       * this field is expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 height_stride = 8;</code>
       * @return The count of heightStride.
       */
      public int getHeightStrideCount() {
        return heightStride_.size();
      }
      /**
       * <pre>
       * Anchor stride in height dimension in pixels for each layer. The length of
       * this field is expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 height_stride = 8;</code>
       * @param index The index of the element to return.
       * @return The heightStride at the given index.
       */
      public int getHeightStride(int index) {
        return heightStride_.getInt(index);
      }
      /**
       * <pre>
       * Anchor stride in height dimension in pixels for each layer. The length of
       * this field is expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 height_stride = 8;</code>
       * @param index The index to set the value at.
       * @param value The heightStride to set.
       * @return This builder for chaining.
       */
      public Builder setHeightStride(
          int index, int value) {
        ensureHeightStrideIsMutable();
        heightStride_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Anchor stride in height dimension in pixels for each layer. The length of
       * this field is expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 height_stride = 8;</code>
       * @param value The heightStride to add.
       * @return This builder for chaining.
       */
      public Builder addHeightStride(int value) {
        ensureHeightStrideIsMutable();
        heightStride_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Anchor stride in height dimension in pixels for each layer. The length of
       * this field is expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 height_stride = 8;</code>
       * @param values The heightStride to add.
       * @return This builder for chaining.
       */
      public Builder addAllHeightStride(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHeightStrideIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, heightStride_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Anchor stride in height dimension in pixels for each layer. The length of
       * this field is expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 height_stride = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeightStride() {
        heightStride_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList widthStride_ = emptyIntList();
      private void ensureWidthStrideIsMutable() {
        if (!((bitField0_ & 0x00000400) != 0)) {
          widthStride_ = mutableCopy(widthStride_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <pre>
       * Anchor stride in width dimension in pixels for each layer. The length of
       * this field is expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 width_stride = 9;</code>
       * @return A list containing the widthStride.
       */
      public java.util.List<java.lang.Integer>
          getWidthStrideList() {
        return ((bitField0_ & 0x00000400) != 0) ?
                 java.util.Collections.unmodifiableList(widthStride_) : widthStride_;
      }
      /**
       * <pre>
       * Anchor stride in width dimension in pixels for each layer. The length of
       * this field is expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 width_stride = 9;</code>
       * @return The count of widthStride.
       */
      public int getWidthStrideCount() {
        return widthStride_.size();
      }
      /**
       * <pre>
       * Anchor stride in width dimension in pixels for each layer. The length of
       * this field is expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 width_stride = 9;</code>
       * @param index The index of the element to return.
       * @return The widthStride at the given index.
       */
      public int getWidthStride(int index) {
        return widthStride_.getInt(index);
      }
      /**
       * <pre>
       * Anchor stride in width dimension in pixels for each layer. The length of
       * this field is expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 width_stride = 9;</code>
       * @param index The index to set the value at.
       * @param value The widthStride to set.
       * @return This builder for chaining.
       */
      public Builder setWidthStride(
          int index, int value) {
        ensureWidthStrideIsMutable();
        widthStride_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Anchor stride in width dimension in pixels for each layer. The length of
       * this field is expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 width_stride = 9;</code>
       * @param value The widthStride to add.
       * @return This builder for chaining.
       */
      public Builder addWidthStride(int value) {
        ensureWidthStrideIsMutable();
        widthStride_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Anchor stride in width dimension in pixels for each layer. The length of
       * this field is expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 width_stride = 9;</code>
       * @param values The widthStride to add.
       * @return This builder for chaining.
       */
      public Builder addAllWidthStride(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWidthStrideIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, widthStride_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Anchor stride in width dimension in pixels for each layer. The length of
       * this field is expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 width_stride = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidthStride() {
        widthStride_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList heightOffset_ = emptyIntList();
      private void ensureHeightOffsetIsMutable() {
        if (!((bitField0_ & 0x00000800) != 0)) {
          heightOffset_ = mutableCopy(heightOffset_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <pre>
       * Anchor height offset in pixels for each layer. The length of this field is
       * expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 height_offset = 10;</code>
       * @return A list containing the heightOffset.
       */
      public java.util.List<java.lang.Integer>
          getHeightOffsetList() {
        return ((bitField0_ & 0x00000800) != 0) ?
                 java.util.Collections.unmodifiableList(heightOffset_) : heightOffset_;
      }
      /**
       * <pre>
       * Anchor height offset in pixels for each layer. The length of this field is
       * expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 height_offset = 10;</code>
       * @return The count of heightOffset.
       */
      public int getHeightOffsetCount() {
        return heightOffset_.size();
      }
      /**
       * <pre>
       * Anchor height offset in pixels for each layer. The length of this field is
       * expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 height_offset = 10;</code>
       * @param index The index of the element to return.
       * @return The heightOffset at the given index.
       */
      public int getHeightOffset(int index) {
        return heightOffset_.getInt(index);
      }
      /**
       * <pre>
       * Anchor height offset in pixels for each layer. The length of this field is
       * expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 height_offset = 10;</code>
       * @param index The index to set the value at.
       * @param value The heightOffset to set.
       * @return This builder for chaining.
       */
      public Builder setHeightOffset(
          int index, int value) {
        ensureHeightOffsetIsMutable();
        heightOffset_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Anchor height offset in pixels for each layer. The length of this field is
       * expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 height_offset = 10;</code>
       * @param value The heightOffset to add.
       * @return This builder for chaining.
       */
      public Builder addHeightOffset(int value) {
        ensureHeightOffsetIsMutable();
        heightOffset_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Anchor height offset in pixels for each layer. The length of this field is
       * expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 height_offset = 10;</code>
       * @param values The heightOffset to add.
       * @return This builder for chaining.
       */
      public Builder addAllHeightOffset(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHeightOffsetIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, heightOffset_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Anchor height offset in pixels for each layer. The length of this field is
       * expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 height_offset = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeightOffset() {
        heightOffset_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList widthOffset_ = emptyIntList();
      private void ensureWidthOffsetIsMutable() {
        if (!((bitField0_ & 0x00001000) != 0)) {
          widthOffset_ = mutableCopy(widthOffset_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <pre>
       * Anchor width offset in pixels for each layer. The length of this field is
       * expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 width_offset = 11;</code>
       * @return A list containing the widthOffset.
       */
      public java.util.List<java.lang.Integer>
          getWidthOffsetList() {
        return ((bitField0_ & 0x00001000) != 0) ?
                 java.util.Collections.unmodifiableList(widthOffset_) : widthOffset_;
      }
      /**
       * <pre>
       * Anchor width offset in pixels for each layer. The length of this field is
       * expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 width_offset = 11;</code>
       * @return The count of widthOffset.
       */
      public int getWidthOffsetCount() {
        return widthOffset_.size();
      }
      /**
       * <pre>
       * Anchor width offset in pixels for each layer. The length of this field is
       * expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 width_offset = 11;</code>
       * @param index The index of the element to return.
       * @return The widthOffset at the given index.
       */
      public int getWidthOffset(int index) {
        return widthOffset_.getInt(index);
      }
      /**
       * <pre>
       * Anchor width offset in pixels for each layer. The length of this field is
       * expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 width_offset = 11;</code>
       * @param index The index to set the value at.
       * @param value The widthOffset to set.
       * @return This builder for chaining.
       */
      public Builder setWidthOffset(
          int index, int value) {
        ensureWidthOffsetIsMutable();
        widthOffset_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Anchor width offset in pixels for each layer. The length of this field is
       * expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 width_offset = 11;</code>
       * @param value The widthOffset to add.
       * @return This builder for chaining.
       */
      public Builder addWidthOffset(int value) {
        ensureWidthOffsetIsMutable();
        widthOffset_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Anchor width offset in pixels for each layer. The length of this field is
       * expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 width_offset = 11;</code>
       * @param values The widthOffset to add.
       * @return This builder for chaining.
       */
      public Builder addAllWidthOffset(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWidthOffsetIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, widthOffset_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Anchor width offset in pixels for each layer. The length of this field is
       * expected to be equal to the value of num_layers.
       * </pre>
       *
       * <code>repeated int32 width_offset = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidthOffset() {
        widthOffset_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.SsdAnchorGenerator)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.SsdAnchorGenerator)
    private static final object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator();
    }

    public static object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SsdAnchorGenerator>
        PARSER = new com.google.protobuf.AbstractParser<SsdAnchorGenerator>() {
      @java.lang.Override
      public SsdAnchorGenerator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SsdAnchorGenerator(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SsdAnchorGenerator> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SsdAnchorGenerator> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.SsdAnchorGeneratorOuterClass.SsdAnchorGenerator getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_SsdAnchorGenerator_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_SsdAnchorGenerator_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n2object_detection/protos/ssd_anchor_gen" +
      "erator.proto\022\027object_detection.protos\"\362\002" +
      "\n\022SsdAnchorGenerator\022\025\n\nnum_layers\030\001 \001(\005" +
      ":\0016\022\026\n\tmin_scale\030\002 \001(\002:\0030.2\022\027\n\tmax_scale" +
      "\030\003 \001(\002:\0040.95\022\016\n\006scales\030\014 \003(\002\022\025\n\raspect_r" +
      "atios\030\004 \003(\002\022*\n\037interpolated_scale_aspect" +
      "_ratio\030\r \001(\002:\0011\022*\n\034reduce_boxes_in_lowes" +
      "t_layer\030\005 \001(\010:\004true\022\035\n\022base_anchor_heigh" +
      "t\030\006 \001(\002:\0011\022\034\n\021base_anchor_width\030\007 \001(\002:\0011" +
      "\022\025\n\rheight_stride\030\010 \003(\005\022\024\n\014width_stride\030" +
      "\t \003(\005\022\025\n\rheight_offset\030\n \003(\005\022\024\n\014width_of" +
      "fset\030\013 \003(\005"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_object_detection_protos_SsdAnchorGenerator_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_object_detection_protos_SsdAnchorGenerator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_SsdAnchorGenerator_descriptor,
        new java.lang.String[] { "NumLayers", "MinScale", "MaxScale", "Scales", "AspectRatios", "InterpolatedScaleAspectRatio", "ReduceBoxesInLowestLayer", "BaseAnchorHeight", "BaseAnchorWidth", "HeightStride", "WidthStride", "HeightOffset", "WidthOffset", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
