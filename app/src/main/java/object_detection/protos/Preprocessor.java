/*
 * Copyright (c) 2020. Kin-Hong Wong. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/preprocessor.proto

package object_detection.protos;

public final class Preprocessor {
  private Preprocessor() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PreprocessingStepOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.PreprocessingStep)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.object_detection.protos.NormalizeImage normalize_image = 1;</code>
     * @return Whether the normalizeImage field is set.
     */
    boolean hasNormalizeImage();
    /**
     * <code>.object_detection.protos.NormalizeImage normalize_image = 1;</code>
     * @return The normalizeImage.
     */
    object_detection.protos.Preprocessor.NormalizeImage getNormalizeImage();
    /**
     * <code>.object_detection.protos.NormalizeImage normalize_image = 1;</code>
     */
    object_detection.protos.Preprocessor.NormalizeImageOrBuilder getNormalizeImageOrBuilder();

    /**
     * <code>.object_detection.protos.RandomHorizontalFlip random_horizontal_flip = 2;</code>
     * @return Whether the randomHorizontalFlip field is set.
     */
    boolean hasRandomHorizontalFlip();
    /**
     * <code>.object_detection.protos.RandomHorizontalFlip random_horizontal_flip = 2;</code>
     * @return The randomHorizontalFlip.
     */
    object_detection.protos.Preprocessor.RandomHorizontalFlip getRandomHorizontalFlip();
    /**
     * <code>.object_detection.protos.RandomHorizontalFlip random_horizontal_flip = 2;</code>
     */
    object_detection.protos.Preprocessor.RandomHorizontalFlipOrBuilder getRandomHorizontalFlipOrBuilder();

    /**
     * <code>.object_detection.protos.RandomPixelValueScale random_pixel_value_scale = 3;</code>
     * @return Whether the randomPixelValueScale field is set.
     */
    boolean hasRandomPixelValueScale();
    /**
     * <code>.object_detection.protos.RandomPixelValueScale random_pixel_value_scale = 3;</code>
     * @return The randomPixelValueScale.
     */
    object_detection.protos.Preprocessor.RandomPixelValueScale getRandomPixelValueScale();
    /**
     * <code>.object_detection.protos.RandomPixelValueScale random_pixel_value_scale = 3;</code>
     */
    object_detection.protos.Preprocessor.RandomPixelValueScaleOrBuilder getRandomPixelValueScaleOrBuilder();

    /**
     * <code>.object_detection.protos.RandomImageScale random_image_scale = 4;</code>
     * @return Whether the randomImageScale field is set.
     */
    boolean hasRandomImageScale();
    /**
     * <code>.object_detection.protos.RandomImageScale random_image_scale = 4;</code>
     * @return The randomImageScale.
     */
    object_detection.protos.Preprocessor.RandomImageScale getRandomImageScale();
    /**
     * <code>.object_detection.protos.RandomImageScale random_image_scale = 4;</code>
     */
    object_detection.protos.Preprocessor.RandomImageScaleOrBuilder getRandomImageScaleOrBuilder();

    /**
     * <code>.object_detection.protos.RandomRGBtoGray random_rgb_to_gray = 5;</code>
     * @return Whether the randomRgbToGray field is set.
     */
    boolean hasRandomRgbToGray();
    /**
     * <code>.object_detection.protos.RandomRGBtoGray random_rgb_to_gray = 5;</code>
     * @return The randomRgbToGray.
     */
    object_detection.protos.Preprocessor.RandomRGBtoGray getRandomRgbToGray();
    /**
     * <code>.object_detection.protos.RandomRGBtoGray random_rgb_to_gray = 5;</code>
     */
    object_detection.protos.Preprocessor.RandomRGBtoGrayOrBuilder getRandomRgbToGrayOrBuilder();

    /**
     * <code>.object_detection.protos.RandomAdjustBrightness random_adjust_brightness = 6;</code>
     * @return Whether the randomAdjustBrightness field is set.
     */
    boolean hasRandomAdjustBrightness();
    /**
     * <code>.object_detection.protos.RandomAdjustBrightness random_adjust_brightness = 6;</code>
     * @return The randomAdjustBrightness.
     */
    object_detection.protos.Preprocessor.RandomAdjustBrightness getRandomAdjustBrightness();
    /**
     * <code>.object_detection.protos.RandomAdjustBrightness random_adjust_brightness = 6;</code>
     */
    object_detection.protos.Preprocessor.RandomAdjustBrightnessOrBuilder getRandomAdjustBrightnessOrBuilder();

    /**
     * <code>.object_detection.protos.RandomAdjustContrast random_adjust_contrast = 7;</code>
     * @return Whether the randomAdjustContrast field is set.
     */
    boolean hasRandomAdjustContrast();
    /**
     * <code>.object_detection.protos.RandomAdjustContrast random_adjust_contrast = 7;</code>
     * @return The randomAdjustContrast.
     */
    object_detection.protos.Preprocessor.RandomAdjustContrast getRandomAdjustContrast();
    /**
     * <code>.object_detection.protos.RandomAdjustContrast random_adjust_contrast = 7;</code>
     */
    object_detection.protos.Preprocessor.RandomAdjustContrastOrBuilder getRandomAdjustContrastOrBuilder();

    /**
     * <code>.object_detection.protos.RandomAdjustHue random_adjust_hue = 8;</code>
     * @return Whether the randomAdjustHue field is set.
     */
    boolean hasRandomAdjustHue();
    /**
     * <code>.object_detection.protos.RandomAdjustHue random_adjust_hue = 8;</code>
     * @return The randomAdjustHue.
     */
    object_detection.protos.Preprocessor.RandomAdjustHue getRandomAdjustHue();
    /**
     * <code>.object_detection.protos.RandomAdjustHue random_adjust_hue = 8;</code>
     */
    object_detection.protos.Preprocessor.RandomAdjustHueOrBuilder getRandomAdjustHueOrBuilder();

    /**
     * <code>.object_detection.protos.RandomAdjustSaturation random_adjust_saturation = 9;</code>
     * @return Whether the randomAdjustSaturation field is set.
     */
    boolean hasRandomAdjustSaturation();
    /**
     * <code>.object_detection.protos.RandomAdjustSaturation random_adjust_saturation = 9;</code>
     * @return The randomAdjustSaturation.
     */
    object_detection.protos.Preprocessor.RandomAdjustSaturation getRandomAdjustSaturation();
    /**
     * <code>.object_detection.protos.RandomAdjustSaturation random_adjust_saturation = 9;</code>
     */
    object_detection.protos.Preprocessor.RandomAdjustSaturationOrBuilder getRandomAdjustSaturationOrBuilder();

    /**
     * <code>.object_detection.protos.RandomDistortColor random_distort_color = 10;</code>
     * @return Whether the randomDistortColor field is set.
     */
    boolean hasRandomDistortColor();
    /**
     * <code>.object_detection.protos.RandomDistortColor random_distort_color = 10;</code>
     * @return The randomDistortColor.
     */
    object_detection.protos.Preprocessor.RandomDistortColor getRandomDistortColor();
    /**
     * <code>.object_detection.protos.RandomDistortColor random_distort_color = 10;</code>
     */
    object_detection.protos.Preprocessor.RandomDistortColorOrBuilder getRandomDistortColorOrBuilder();

    /**
     * <code>.object_detection.protos.RandomJitterBoxes random_jitter_boxes = 11;</code>
     * @return Whether the randomJitterBoxes field is set.
     */
    boolean hasRandomJitterBoxes();
    /**
     * <code>.object_detection.protos.RandomJitterBoxes random_jitter_boxes = 11;</code>
     * @return The randomJitterBoxes.
     */
    object_detection.protos.Preprocessor.RandomJitterBoxes getRandomJitterBoxes();
    /**
     * <code>.object_detection.protos.RandomJitterBoxes random_jitter_boxes = 11;</code>
     */
    object_detection.protos.Preprocessor.RandomJitterBoxesOrBuilder getRandomJitterBoxesOrBuilder();

    /**
     * <code>.object_detection.protos.RandomCropImage random_crop_image = 12;</code>
     * @return Whether the randomCropImage field is set.
     */
    boolean hasRandomCropImage();
    /**
     * <code>.object_detection.protos.RandomCropImage random_crop_image = 12;</code>
     * @return The randomCropImage.
     */
    object_detection.protos.Preprocessor.RandomCropImage getRandomCropImage();
    /**
     * <code>.object_detection.protos.RandomCropImage random_crop_image = 12;</code>
     */
    object_detection.protos.Preprocessor.RandomCropImageOrBuilder getRandomCropImageOrBuilder();

    /**
     * <code>.object_detection.protos.RandomPadImage random_pad_image = 13;</code>
     * @return Whether the randomPadImage field is set.
     */
    boolean hasRandomPadImage();
    /**
     * <code>.object_detection.protos.RandomPadImage random_pad_image = 13;</code>
     * @return The randomPadImage.
     */
    object_detection.protos.Preprocessor.RandomPadImage getRandomPadImage();
    /**
     * <code>.object_detection.protos.RandomPadImage random_pad_image = 13;</code>
     */
    object_detection.protos.Preprocessor.RandomPadImageOrBuilder getRandomPadImageOrBuilder();

    /**
     * <code>.object_detection.protos.RandomCropPadImage random_crop_pad_image = 14;</code>
     * @return Whether the randomCropPadImage field is set.
     */
    boolean hasRandomCropPadImage();
    /**
     * <code>.object_detection.protos.RandomCropPadImage random_crop_pad_image = 14;</code>
     * @return The randomCropPadImage.
     */
    object_detection.protos.Preprocessor.RandomCropPadImage getRandomCropPadImage();
    /**
     * <code>.object_detection.protos.RandomCropPadImage random_crop_pad_image = 14;</code>
     */
    object_detection.protos.Preprocessor.RandomCropPadImageOrBuilder getRandomCropPadImageOrBuilder();

    /**
     * <code>.object_detection.protos.RandomCropToAspectRatio random_crop_to_aspect_ratio = 15;</code>
     * @return Whether the randomCropToAspectRatio field is set.
     */
    boolean hasRandomCropToAspectRatio();
    /**
     * <code>.object_detection.protos.RandomCropToAspectRatio random_crop_to_aspect_ratio = 15;</code>
     * @return The randomCropToAspectRatio.
     */
    object_detection.protos.Preprocessor.RandomCropToAspectRatio getRandomCropToAspectRatio();
    /**
     * <code>.object_detection.protos.RandomCropToAspectRatio random_crop_to_aspect_ratio = 15;</code>
     */
    object_detection.protos.Preprocessor.RandomCropToAspectRatioOrBuilder getRandomCropToAspectRatioOrBuilder();

    /**
     * <code>.object_detection.protos.RandomBlackPatches random_black_patches = 16;</code>
     * @return Whether the randomBlackPatches field is set.
     */
    boolean hasRandomBlackPatches();
    /**
     * <code>.object_detection.protos.RandomBlackPatches random_black_patches = 16;</code>
     * @return The randomBlackPatches.
     */
    object_detection.protos.Preprocessor.RandomBlackPatches getRandomBlackPatches();
    /**
     * <code>.object_detection.protos.RandomBlackPatches random_black_patches = 16;</code>
     */
    object_detection.protos.Preprocessor.RandomBlackPatchesOrBuilder getRandomBlackPatchesOrBuilder();

    /**
     * <code>.object_detection.protos.RandomResizeMethod random_resize_method = 17;</code>
     * @return Whether the randomResizeMethod field is set.
     */
    boolean hasRandomResizeMethod();
    /**
     * <code>.object_detection.protos.RandomResizeMethod random_resize_method = 17;</code>
     * @return The randomResizeMethod.
     */
    object_detection.protos.Preprocessor.RandomResizeMethod getRandomResizeMethod();
    /**
     * <code>.object_detection.protos.RandomResizeMethod random_resize_method = 17;</code>
     */
    object_detection.protos.Preprocessor.RandomResizeMethodOrBuilder getRandomResizeMethodOrBuilder();

    /**
     * <code>.object_detection.protos.ScaleBoxesToPixelCoordinates scale_boxes_to_pixel_coordinates = 18;</code>
     * @return Whether the scaleBoxesToPixelCoordinates field is set.
     */
    boolean hasScaleBoxesToPixelCoordinates();
    /**
     * <code>.object_detection.protos.ScaleBoxesToPixelCoordinates scale_boxes_to_pixel_coordinates = 18;</code>
     * @return The scaleBoxesToPixelCoordinates.
     */
    object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates getScaleBoxesToPixelCoordinates();
    /**
     * <code>.object_detection.protos.ScaleBoxesToPixelCoordinates scale_boxes_to_pixel_coordinates = 18;</code>
     */
    object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinatesOrBuilder getScaleBoxesToPixelCoordinatesOrBuilder();

    /**
     * <code>.object_detection.protos.ResizeImage resize_image = 19;</code>
     * @return Whether the resizeImage field is set.
     */
    boolean hasResizeImage();
    /**
     * <code>.object_detection.protos.ResizeImage resize_image = 19;</code>
     * @return The resizeImage.
     */
    object_detection.protos.Preprocessor.ResizeImage getResizeImage();
    /**
     * <code>.object_detection.protos.ResizeImage resize_image = 19;</code>
     */
    object_detection.protos.Preprocessor.ResizeImageOrBuilder getResizeImageOrBuilder();

    /**
     * <code>.object_detection.protos.SubtractChannelMean subtract_channel_mean = 20;</code>
     * @return Whether the subtractChannelMean field is set.
     */
    boolean hasSubtractChannelMean();
    /**
     * <code>.object_detection.protos.SubtractChannelMean subtract_channel_mean = 20;</code>
     * @return The subtractChannelMean.
     */
    object_detection.protos.Preprocessor.SubtractChannelMean getSubtractChannelMean();
    /**
     * <code>.object_detection.protos.SubtractChannelMean subtract_channel_mean = 20;</code>
     */
    object_detection.protos.Preprocessor.SubtractChannelMeanOrBuilder getSubtractChannelMeanOrBuilder();

    /**
     * <code>.object_detection.protos.SSDRandomCrop ssd_random_crop = 21;</code>
     * @return Whether the ssdRandomCrop field is set.
     */
    boolean hasSsdRandomCrop();
    /**
     * <code>.object_detection.protos.SSDRandomCrop ssd_random_crop = 21;</code>
     * @return The ssdRandomCrop.
     */
    object_detection.protos.Preprocessor.SSDRandomCrop getSsdRandomCrop();
    /**
     * <code>.object_detection.protos.SSDRandomCrop ssd_random_crop = 21;</code>
     */
    object_detection.protos.Preprocessor.SSDRandomCropOrBuilder getSsdRandomCropOrBuilder();

    /**
     * <code>.object_detection.protos.SSDRandomCropPad ssd_random_crop_pad = 22;</code>
     * @return Whether the ssdRandomCropPad field is set.
     */
    boolean hasSsdRandomCropPad();
    /**
     * <code>.object_detection.protos.SSDRandomCropPad ssd_random_crop_pad = 22;</code>
     * @return The ssdRandomCropPad.
     */
    object_detection.protos.Preprocessor.SSDRandomCropPad getSsdRandomCropPad();
    /**
     * <code>.object_detection.protos.SSDRandomCropPad ssd_random_crop_pad = 22;</code>
     */
    object_detection.protos.Preprocessor.SSDRandomCropPadOrBuilder getSsdRandomCropPadOrBuilder();

    /**
     * <code>.object_detection.protos.SSDRandomCropFixedAspectRatio ssd_random_crop_fixed_aspect_ratio = 23;</code>
     * @return Whether the ssdRandomCropFixedAspectRatio field is set.
     */
    boolean hasSsdRandomCropFixedAspectRatio();
    /**
     * <code>.object_detection.protos.SSDRandomCropFixedAspectRatio ssd_random_crop_fixed_aspect_ratio = 23;</code>
     * @return The ssdRandomCropFixedAspectRatio.
     */
    object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio getSsdRandomCropFixedAspectRatio();
    /**
     * <code>.object_detection.protos.SSDRandomCropFixedAspectRatio ssd_random_crop_fixed_aspect_ratio = 23;</code>
     */
    object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOrBuilder getSsdRandomCropFixedAspectRatioOrBuilder();

    /**
     * <code>.object_detection.protos.SSDRandomCropPadFixedAspectRatio ssd_random_crop_pad_fixed_aspect_ratio = 24;</code>
     * @return Whether the ssdRandomCropPadFixedAspectRatio field is set.
     */
    boolean hasSsdRandomCropPadFixedAspectRatio();
    /**
     * <code>.object_detection.protos.SSDRandomCropPadFixedAspectRatio ssd_random_crop_pad_fixed_aspect_ratio = 24;</code>
     * @return The ssdRandomCropPadFixedAspectRatio.
     */
    object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio getSsdRandomCropPadFixedAspectRatio();
    /**
     * <code>.object_detection.protos.SSDRandomCropPadFixedAspectRatio ssd_random_crop_pad_fixed_aspect_ratio = 24;</code>
     */
    object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOrBuilder getSsdRandomCropPadFixedAspectRatioOrBuilder();

    /**
     * <code>.object_detection.protos.RandomVerticalFlip random_vertical_flip = 25;</code>
     * @return Whether the randomVerticalFlip field is set.
     */
    boolean hasRandomVerticalFlip();
    /**
     * <code>.object_detection.protos.RandomVerticalFlip random_vertical_flip = 25;</code>
     * @return The randomVerticalFlip.
     */
    object_detection.protos.Preprocessor.RandomVerticalFlip getRandomVerticalFlip();
    /**
     * <code>.object_detection.protos.RandomVerticalFlip random_vertical_flip = 25;</code>
     */
    object_detection.protos.Preprocessor.RandomVerticalFlipOrBuilder getRandomVerticalFlipOrBuilder();

    /**
     * <code>.object_detection.protos.RandomRotation90 random_rotation90 = 26;</code>
     * @return Whether the randomRotation90 field is set.
     */
    boolean hasRandomRotation90();
    /**
     * <code>.object_detection.protos.RandomRotation90 random_rotation90 = 26;</code>
     * @return The randomRotation90.
     */
    object_detection.protos.Preprocessor.RandomRotation90 getRandomRotation90();
    /**
     * <code>.object_detection.protos.RandomRotation90 random_rotation90 = 26;</code>
     */
    object_detection.protos.Preprocessor.RandomRotation90OrBuilder getRandomRotation90OrBuilder();

    /**
     * <code>.object_detection.protos.RGBtoGray rgb_to_gray = 27;</code>
     * @return Whether the rgbToGray field is set.
     */
    boolean hasRgbToGray();
    /**
     * <code>.object_detection.protos.RGBtoGray rgb_to_gray = 27;</code>
     * @return The rgbToGray.
     */
    object_detection.protos.Preprocessor.RGBtoGray getRgbToGray();
    /**
     * <code>.object_detection.protos.RGBtoGray rgb_to_gray = 27;</code>
     */
    object_detection.protos.Preprocessor.RGBtoGrayOrBuilder getRgbToGrayOrBuilder();

    /**
     * <code>.object_detection.protos.ConvertClassLogitsToSoftmax convert_class_logits_to_softmax = 28;</code>
     * @return Whether the convertClassLogitsToSoftmax field is set.
     */
    boolean hasConvertClassLogitsToSoftmax();
    /**
     * <code>.object_detection.protos.ConvertClassLogitsToSoftmax convert_class_logits_to_softmax = 28;</code>
     * @return The convertClassLogitsToSoftmax.
     */
    object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax getConvertClassLogitsToSoftmax();
    /**
     * <code>.object_detection.protos.ConvertClassLogitsToSoftmax convert_class_logits_to_softmax = 28;</code>
     */
    object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmaxOrBuilder getConvertClassLogitsToSoftmaxOrBuilder();

    /**
     * <code>.object_detection.protos.RandomAbsolutePadImage random_absolute_pad_image = 29;</code>
     * @return Whether the randomAbsolutePadImage field is set.
     */
    boolean hasRandomAbsolutePadImage();
    /**
     * <code>.object_detection.protos.RandomAbsolutePadImage random_absolute_pad_image = 29;</code>
     * @return The randomAbsolutePadImage.
     */
    object_detection.protos.Preprocessor.RandomAbsolutePadImage getRandomAbsolutePadImage();
    /**
     * <code>.object_detection.protos.RandomAbsolutePadImage random_absolute_pad_image = 29;</code>
     */
    object_detection.protos.Preprocessor.RandomAbsolutePadImageOrBuilder getRandomAbsolutePadImageOrBuilder();

    /**
     * <code>.object_detection.protos.RandomSelfConcatImage random_self_concat_image = 30;</code>
     * @return Whether the randomSelfConcatImage field is set.
     */
    boolean hasRandomSelfConcatImage();
    /**
     * <code>.object_detection.protos.RandomSelfConcatImage random_self_concat_image = 30;</code>
     * @return The randomSelfConcatImage.
     */
    object_detection.protos.Preprocessor.RandomSelfConcatImage getRandomSelfConcatImage();
    /**
     * <code>.object_detection.protos.RandomSelfConcatImage random_self_concat_image = 30;</code>
     */
    object_detection.protos.Preprocessor.RandomSelfConcatImageOrBuilder getRandomSelfConcatImageOrBuilder();

    /**
     * <code>.object_detection.protos.AutoAugmentImage autoaugment_image = 31;</code>
     * @return Whether the autoaugmentImage field is set.
     */
    boolean hasAutoaugmentImage();
    /**
     * <code>.object_detection.protos.AutoAugmentImage autoaugment_image = 31;</code>
     * @return The autoaugmentImage.
     */
    object_detection.protos.Preprocessor.AutoAugmentImage getAutoaugmentImage();
    /**
     * <code>.object_detection.protos.AutoAugmentImage autoaugment_image = 31;</code>
     */
    object_detection.protos.Preprocessor.AutoAugmentImageOrBuilder getAutoaugmentImageOrBuilder();

    /**
     * <code>.object_detection.protos.DropLabelProbabilistically drop_label_probabilistically = 32;</code>
     * @return Whether the dropLabelProbabilistically field is set.
     */
    boolean hasDropLabelProbabilistically();
    /**
     * <code>.object_detection.protos.DropLabelProbabilistically drop_label_probabilistically = 32;</code>
     * @return The dropLabelProbabilistically.
     */
    object_detection.protos.Preprocessor.DropLabelProbabilistically getDropLabelProbabilistically();
    /**
     * <code>.object_detection.protos.DropLabelProbabilistically drop_label_probabilistically = 32;</code>
     */
    object_detection.protos.Preprocessor.DropLabelProbabilisticallyOrBuilder getDropLabelProbabilisticallyOrBuilder();

    /**
     * <code>.object_detection.protos.RemapLabels remap_labels = 33;</code>
     * @return Whether the remapLabels field is set.
     */
    boolean hasRemapLabels();
    /**
     * <code>.object_detection.protos.RemapLabels remap_labels = 33;</code>
     * @return The remapLabels.
     */
    object_detection.protos.Preprocessor.RemapLabels getRemapLabels();
    /**
     * <code>.object_detection.protos.RemapLabels remap_labels = 33;</code>
     */
    object_detection.protos.Preprocessor.RemapLabelsOrBuilder getRemapLabelsOrBuilder();

    /**
     * <code>.object_detection.protos.RandomJpegQuality random_jpeg_quality = 34;</code>
     * @return Whether the randomJpegQuality field is set.
     */
    boolean hasRandomJpegQuality();
    /**
     * <code>.object_detection.protos.RandomJpegQuality random_jpeg_quality = 34;</code>
     * @return The randomJpegQuality.
     */
    object_detection.protos.Preprocessor.RandomJpegQuality getRandomJpegQuality();
    /**
     * <code>.object_detection.protos.RandomJpegQuality random_jpeg_quality = 34;</code>
     */
    object_detection.protos.Preprocessor.RandomJpegQualityOrBuilder getRandomJpegQualityOrBuilder();

    /**
     * <code>.object_detection.protos.RandomDownscaleToTargetPixels random_downscale_to_target_pixels = 35;</code>
     * @return Whether the randomDownscaleToTargetPixels field is set.
     */
    boolean hasRandomDownscaleToTargetPixels();
    /**
     * <code>.object_detection.protos.RandomDownscaleToTargetPixels random_downscale_to_target_pixels = 35;</code>
     * @return The randomDownscaleToTargetPixels.
     */
    object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels getRandomDownscaleToTargetPixels();
    /**
     * <code>.object_detection.protos.RandomDownscaleToTargetPixels random_downscale_to_target_pixels = 35;</code>
     */
    object_detection.protos.Preprocessor.RandomDownscaleToTargetPixelsOrBuilder getRandomDownscaleToTargetPixelsOrBuilder();

    /**
     * <code>.object_detection.protos.RandomPatchGaussian random_patch_gaussian = 36;</code>
     * @return Whether the randomPatchGaussian field is set.
     */
    boolean hasRandomPatchGaussian();
    /**
     * <code>.object_detection.protos.RandomPatchGaussian random_patch_gaussian = 36;</code>
     * @return The randomPatchGaussian.
     */
    object_detection.protos.Preprocessor.RandomPatchGaussian getRandomPatchGaussian();
    /**
     * <code>.object_detection.protos.RandomPatchGaussian random_patch_gaussian = 36;</code>
     */
    object_detection.protos.Preprocessor.RandomPatchGaussianOrBuilder getRandomPatchGaussianOrBuilder();

    /**
     * <code>.object_detection.protos.RandomSquareCropByScale random_square_crop_by_scale = 37;</code>
     * @return Whether the randomSquareCropByScale field is set.
     */
    boolean hasRandomSquareCropByScale();
    /**
     * <code>.object_detection.protos.RandomSquareCropByScale random_square_crop_by_scale = 37;</code>
     * @return The randomSquareCropByScale.
     */
    object_detection.protos.Preprocessor.RandomSquareCropByScale getRandomSquareCropByScale();
    /**
     * <code>.object_detection.protos.RandomSquareCropByScale random_square_crop_by_scale = 37;</code>
     */
    object_detection.protos.Preprocessor.RandomSquareCropByScaleOrBuilder getRandomSquareCropByScaleOrBuilder();

    /**
     * <code>.object_detection.protos.RandomScaleCropAndPadToSquare random_scale_crop_and_pad_to_square = 38;</code>
     * @return Whether the randomScaleCropAndPadToSquare field is set.
     */
    boolean hasRandomScaleCropAndPadToSquare();
    /**
     * <code>.object_detection.protos.RandomScaleCropAndPadToSquare random_scale_crop_and_pad_to_square = 38;</code>
     * @return The randomScaleCropAndPadToSquare.
     */
    object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare getRandomScaleCropAndPadToSquare();
    /**
     * <code>.object_detection.protos.RandomScaleCropAndPadToSquare random_scale_crop_and_pad_to_square = 38;</code>
     */
    object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquareOrBuilder getRandomScaleCropAndPadToSquareOrBuilder();

    /**
     * <code>.object_detection.protos.AdjustGamma adjust_gamma = 39;</code>
     * @return Whether the adjustGamma field is set.
     */
    boolean hasAdjustGamma();
    /**
     * <code>.object_detection.protos.AdjustGamma adjust_gamma = 39;</code>
     * @return The adjustGamma.
     */
    object_detection.protos.Preprocessor.AdjustGamma getAdjustGamma();
    /**
     * <code>.object_detection.protos.AdjustGamma adjust_gamma = 39;</code>
     */
    object_detection.protos.Preprocessor.AdjustGammaOrBuilder getAdjustGammaOrBuilder();

    public object_detection.protos.Preprocessor.PreprocessingStep.PreprocessingStepCase getPreprocessingStepCase();
  }
  /**
   * <pre>
   * Message for defining a preprocessing operation on input data.
   * See: //third_party/tensorflow_models/object_detection/core/preprocessor.py
   * Next ID: 40
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.PreprocessingStep}
   */
  public static final class PreprocessingStep extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.PreprocessingStep)
      PreprocessingStepOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PreprocessingStep.newBuilder() to construct.
    private PreprocessingStep(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PreprocessingStep() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PreprocessingStep();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PreprocessingStep(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              object_detection.protos.Preprocessor.NormalizeImage.Builder subBuilder = null;
              if (preprocessingStepCase_ == 1) {
                subBuilder = ((object_detection.protos.Preprocessor.NormalizeImage) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.NormalizeImage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.NormalizeImage) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 1;
              break;
            }
            case 18: {
              object_detection.protos.Preprocessor.RandomHorizontalFlip.Builder subBuilder = null;
              if (preprocessingStepCase_ == 2) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomHorizontalFlip) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomHorizontalFlip.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomHorizontalFlip) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 2;
              break;
            }
            case 26: {
              object_detection.protos.Preprocessor.RandomPixelValueScale.Builder subBuilder = null;
              if (preprocessingStepCase_ == 3) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomPixelValueScale) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomPixelValueScale.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomPixelValueScale) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 3;
              break;
            }
            case 34: {
              object_detection.protos.Preprocessor.RandomImageScale.Builder subBuilder = null;
              if (preprocessingStepCase_ == 4) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomImageScale) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomImageScale.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomImageScale) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 4;
              break;
            }
            case 42: {
              object_detection.protos.Preprocessor.RandomRGBtoGray.Builder subBuilder = null;
              if (preprocessingStepCase_ == 5) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomRGBtoGray) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomRGBtoGray.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomRGBtoGray) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 5;
              break;
            }
            case 50: {
              object_detection.protos.Preprocessor.RandomAdjustBrightness.Builder subBuilder = null;
              if (preprocessingStepCase_ == 6) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomAdjustBrightness) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomAdjustBrightness.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomAdjustBrightness) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 6;
              break;
            }
            case 58: {
              object_detection.protos.Preprocessor.RandomAdjustContrast.Builder subBuilder = null;
              if (preprocessingStepCase_ == 7) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomAdjustContrast) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomAdjustContrast.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomAdjustContrast) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 7;
              break;
            }
            case 66: {
              object_detection.protos.Preprocessor.RandomAdjustHue.Builder subBuilder = null;
              if (preprocessingStepCase_ == 8) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomAdjustHue) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomAdjustHue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomAdjustHue) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 8;
              break;
            }
            case 74: {
              object_detection.protos.Preprocessor.RandomAdjustSaturation.Builder subBuilder = null;
              if (preprocessingStepCase_ == 9) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomAdjustSaturation) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomAdjustSaturation.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomAdjustSaturation) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 9;
              break;
            }
            case 82: {
              object_detection.protos.Preprocessor.RandomDistortColor.Builder subBuilder = null;
              if (preprocessingStepCase_ == 10) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomDistortColor) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomDistortColor.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomDistortColor) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 10;
              break;
            }
            case 90: {
              object_detection.protos.Preprocessor.RandomJitterBoxes.Builder subBuilder = null;
              if (preprocessingStepCase_ == 11) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomJitterBoxes) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomJitterBoxes.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomJitterBoxes) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 11;
              break;
            }
            case 98: {
              object_detection.protos.Preprocessor.RandomCropImage.Builder subBuilder = null;
              if (preprocessingStepCase_ == 12) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomCropImage) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomCropImage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomCropImage) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 12;
              break;
            }
            case 106: {
              object_detection.protos.Preprocessor.RandomPadImage.Builder subBuilder = null;
              if (preprocessingStepCase_ == 13) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomPadImage) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomPadImage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomPadImage) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 13;
              break;
            }
            case 114: {
              object_detection.protos.Preprocessor.RandomCropPadImage.Builder subBuilder = null;
              if (preprocessingStepCase_ == 14) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomCropPadImage) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomCropPadImage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomCropPadImage) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 14;
              break;
            }
            case 122: {
              object_detection.protos.Preprocessor.RandomCropToAspectRatio.Builder subBuilder = null;
              if (preprocessingStepCase_ == 15) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomCropToAspectRatio) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomCropToAspectRatio.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomCropToAspectRatio) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 15;
              break;
            }
            case 130: {
              object_detection.protos.Preprocessor.RandomBlackPatches.Builder subBuilder = null;
              if (preprocessingStepCase_ == 16) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomBlackPatches) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomBlackPatches.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomBlackPatches) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 16;
              break;
            }
            case 138: {
              object_detection.protos.Preprocessor.RandomResizeMethod.Builder subBuilder = null;
              if (preprocessingStepCase_ == 17) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomResizeMethod) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomResizeMethod.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomResizeMethod) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 17;
              break;
            }
            case 146: {
              object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.Builder subBuilder = null;
              if (preprocessingStepCase_ == 18) {
                subBuilder = ((object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 18;
              break;
            }
            case 154: {
              object_detection.protos.Preprocessor.ResizeImage.Builder subBuilder = null;
              if (preprocessingStepCase_ == 19) {
                subBuilder = ((object_detection.protos.Preprocessor.ResizeImage) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.ResizeImage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.ResizeImage) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 19;
              break;
            }
            case 162: {
              object_detection.protos.Preprocessor.SubtractChannelMean.Builder subBuilder = null;
              if (preprocessingStepCase_ == 20) {
                subBuilder = ((object_detection.protos.Preprocessor.SubtractChannelMean) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.SubtractChannelMean.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.SubtractChannelMean) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 20;
              break;
            }
            case 170: {
              object_detection.protos.Preprocessor.SSDRandomCrop.Builder subBuilder = null;
              if (preprocessingStepCase_ == 21) {
                subBuilder = ((object_detection.protos.Preprocessor.SSDRandomCrop) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.SSDRandomCrop.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.SSDRandomCrop) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 21;
              break;
            }
            case 178: {
              object_detection.protos.Preprocessor.SSDRandomCropPad.Builder subBuilder = null;
              if (preprocessingStepCase_ == 22) {
                subBuilder = ((object_detection.protos.Preprocessor.SSDRandomCropPad) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.SSDRandomCropPad.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.SSDRandomCropPad) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 22;
              break;
            }
            case 186: {
              object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.Builder subBuilder = null;
              if (preprocessingStepCase_ == 23) {
                subBuilder = ((object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 23;
              break;
            }
            case 194: {
              object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.Builder subBuilder = null;
              if (preprocessingStepCase_ == 24) {
                subBuilder = ((object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 24;
              break;
            }
            case 202: {
              object_detection.protos.Preprocessor.RandomVerticalFlip.Builder subBuilder = null;
              if (preprocessingStepCase_ == 25) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomVerticalFlip) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomVerticalFlip.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomVerticalFlip) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 25;
              break;
            }
            case 210: {
              object_detection.protos.Preprocessor.RandomRotation90.Builder subBuilder = null;
              if (preprocessingStepCase_ == 26) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomRotation90) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomRotation90.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomRotation90) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 26;
              break;
            }
            case 218: {
              object_detection.protos.Preprocessor.RGBtoGray.Builder subBuilder = null;
              if (preprocessingStepCase_ == 27) {
                subBuilder = ((object_detection.protos.Preprocessor.RGBtoGray) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RGBtoGray.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RGBtoGray) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 27;
              break;
            }
            case 226: {
              object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.Builder subBuilder = null;
              if (preprocessingStepCase_ == 28) {
                subBuilder = ((object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 28;
              break;
            }
            case 234: {
              object_detection.protos.Preprocessor.RandomAbsolutePadImage.Builder subBuilder = null;
              if (preprocessingStepCase_ == 29) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomAbsolutePadImage) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomAbsolutePadImage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomAbsolutePadImage) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 29;
              break;
            }
            case 242: {
              object_detection.protos.Preprocessor.RandomSelfConcatImage.Builder subBuilder = null;
              if (preprocessingStepCase_ == 30) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomSelfConcatImage) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomSelfConcatImage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomSelfConcatImage) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 30;
              break;
            }
            case 250: {
              object_detection.protos.Preprocessor.AutoAugmentImage.Builder subBuilder = null;
              if (preprocessingStepCase_ == 31) {
                subBuilder = ((object_detection.protos.Preprocessor.AutoAugmentImage) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.AutoAugmentImage.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.AutoAugmentImage) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 31;
              break;
            }
            case 258: {
              object_detection.protos.Preprocessor.DropLabelProbabilistically.Builder subBuilder = null;
              if (preprocessingStepCase_ == 32) {
                subBuilder = ((object_detection.protos.Preprocessor.DropLabelProbabilistically) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.DropLabelProbabilistically.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.DropLabelProbabilistically) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 32;
              break;
            }
            case 266: {
              object_detection.protos.Preprocessor.RemapLabels.Builder subBuilder = null;
              if (preprocessingStepCase_ == 33) {
                subBuilder = ((object_detection.protos.Preprocessor.RemapLabels) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RemapLabels.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RemapLabels) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 33;
              break;
            }
            case 274: {
              object_detection.protos.Preprocessor.RandomJpegQuality.Builder subBuilder = null;
              if (preprocessingStepCase_ == 34) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomJpegQuality) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomJpegQuality.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomJpegQuality) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 34;
              break;
            }
            case 282: {
              object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.Builder subBuilder = null;
              if (preprocessingStepCase_ == 35) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 35;
              break;
            }
            case 290: {
              object_detection.protos.Preprocessor.RandomPatchGaussian.Builder subBuilder = null;
              if (preprocessingStepCase_ == 36) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomPatchGaussian) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomPatchGaussian.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomPatchGaussian) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 36;
              break;
            }
            case 298: {
              object_detection.protos.Preprocessor.RandomSquareCropByScale.Builder subBuilder = null;
              if (preprocessingStepCase_ == 37) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomSquareCropByScale) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomSquareCropByScale.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomSquareCropByScale) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 37;
              break;
            }
            case 306: {
              object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.Builder subBuilder = null;
              if (preprocessingStepCase_ == 38) {
                subBuilder = ((object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 38;
              break;
            }
            case 314: {
              object_detection.protos.Preprocessor.AdjustGamma.Builder subBuilder = null;
              if (preprocessingStepCase_ == 39) {
                subBuilder = ((object_detection.protos.Preprocessor.AdjustGamma) preprocessingStep_).toBuilder();
              }
              preprocessingStep_ =
                  input.readMessage(object_detection.protos.Preprocessor.AdjustGamma.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((object_detection.protos.Preprocessor.AdjustGamma) preprocessingStep_);
                preprocessingStep_ = subBuilder.buildPartial();
              }
              preprocessingStepCase_ = 39;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_PreprocessingStep_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_PreprocessingStep_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.PreprocessingStep.class, object_detection.protos.Preprocessor.PreprocessingStep.Builder.class);
    }

    private int bitField0_;
    private int bitField1_;
    private int preprocessingStepCase_ = 0;
    private java.lang.Object preprocessingStep_;
    public enum PreprocessingStepCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      NORMALIZE_IMAGE(1),
      RANDOM_HORIZONTAL_FLIP(2),
      RANDOM_PIXEL_VALUE_SCALE(3),
      RANDOM_IMAGE_SCALE(4),
      RANDOM_RGB_TO_GRAY(5),
      RANDOM_ADJUST_BRIGHTNESS(6),
      RANDOM_ADJUST_CONTRAST(7),
      RANDOM_ADJUST_HUE(8),
      RANDOM_ADJUST_SATURATION(9),
      RANDOM_DISTORT_COLOR(10),
      RANDOM_JITTER_BOXES(11),
      RANDOM_CROP_IMAGE(12),
      RANDOM_PAD_IMAGE(13),
      RANDOM_CROP_PAD_IMAGE(14),
      RANDOM_CROP_TO_ASPECT_RATIO(15),
      RANDOM_BLACK_PATCHES(16),
      RANDOM_RESIZE_METHOD(17),
      SCALE_BOXES_TO_PIXEL_COORDINATES(18),
      RESIZE_IMAGE(19),
      SUBTRACT_CHANNEL_MEAN(20),
      SSD_RANDOM_CROP(21),
      SSD_RANDOM_CROP_PAD(22),
      SSD_RANDOM_CROP_FIXED_ASPECT_RATIO(23),
      SSD_RANDOM_CROP_PAD_FIXED_ASPECT_RATIO(24),
      RANDOM_VERTICAL_FLIP(25),
      RANDOM_ROTATION90(26),
      RGB_TO_GRAY(27),
      CONVERT_CLASS_LOGITS_TO_SOFTMAX(28),
      RANDOM_ABSOLUTE_PAD_IMAGE(29),
      RANDOM_SELF_CONCAT_IMAGE(30),
      AUTOAUGMENT_IMAGE(31),
      DROP_LABEL_PROBABILISTICALLY(32),
      REMAP_LABELS(33),
      RANDOM_JPEG_QUALITY(34),
      RANDOM_DOWNSCALE_TO_TARGET_PIXELS(35),
      RANDOM_PATCH_GAUSSIAN(36),
      RANDOM_SQUARE_CROP_BY_SCALE(37),
      RANDOM_SCALE_CROP_AND_PAD_TO_SQUARE(38),
      ADJUST_GAMMA(39),
      PREPROCESSINGSTEP_NOT_SET(0);
      private final int value;
      private PreprocessingStepCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PreprocessingStepCase valueOf(int value) {
        return forNumber(value);
      }

      public static PreprocessingStepCase forNumber(int value) {
        switch (value) {
          case 1: return NORMALIZE_IMAGE;
          case 2: return RANDOM_HORIZONTAL_FLIP;
          case 3: return RANDOM_PIXEL_VALUE_SCALE;
          case 4: return RANDOM_IMAGE_SCALE;
          case 5: return RANDOM_RGB_TO_GRAY;
          case 6: return RANDOM_ADJUST_BRIGHTNESS;
          case 7: return RANDOM_ADJUST_CONTRAST;
          case 8: return RANDOM_ADJUST_HUE;
          case 9: return RANDOM_ADJUST_SATURATION;
          case 10: return RANDOM_DISTORT_COLOR;
          case 11: return RANDOM_JITTER_BOXES;
          case 12: return RANDOM_CROP_IMAGE;
          case 13: return RANDOM_PAD_IMAGE;
          case 14: return RANDOM_CROP_PAD_IMAGE;
          case 15: return RANDOM_CROP_TO_ASPECT_RATIO;
          case 16: return RANDOM_BLACK_PATCHES;
          case 17: return RANDOM_RESIZE_METHOD;
          case 18: return SCALE_BOXES_TO_PIXEL_COORDINATES;
          case 19: return RESIZE_IMAGE;
          case 20: return SUBTRACT_CHANNEL_MEAN;
          case 21: return SSD_RANDOM_CROP;
          case 22: return SSD_RANDOM_CROP_PAD;
          case 23: return SSD_RANDOM_CROP_FIXED_ASPECT_RATIO;
          case 24: return SSD_RANDOM_CROP_PAD_FIXED_ASPECT_RATIO;
          case 25: return RANDOM_VERTICAL_FLIP;
          case 26: return RANDOM_ROTATION90;
          case 27: return RGB_TO_GRAY;
          case 28: return CONVERT_CLASS_LOGITS_TO_SOFTMAX;
          case 29: return RANDOM_ABSOLUTE_PAD_IMAGE;
          case 30: return RANDOM_SELF_CONCAT_IMAGE;
          case 31: return AUTOAUGMENT_IMAGE;
          case 32: return DROP_LABEL_PROBABILISTICALLY;
          case 33: return REMAP_LABELS;
          case 34: return RANDOM_JPEG_QUALITY;
          case 35: return RANDOM_DOWNSCALE_TO_TARGET_PIXELS;
          case 36: return RANDOM_PATCH_GAUSSIAN;
          case 37: return RANDOM_SQUARE_CROP_BY_SCALE;
          case 38: return RANDOM_SCALE_CROP_AND_PAD_TO_SQUARE;
          case 39: return ADJUST_GAMMA;
          case 0: return PREPROCESSINGSTEP_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PreprocessingStepCase
    getPreprocessingStepCase() {
      return PreprocessingStepCase.forNumber(
          preprocessingStepCase_);
    }

    public static final int NORMALIZE_IMAGE_FIELD_NUMBER = 1;
    /**
     * <code>.object_detection.protos.NormalizeImage normalize_image = 1;</code>
     * @return Whether the normalizeImage field is set.
     */
    @java.lang.Override
    public boolean hasNormalizeImage() {
      return preprocessingStepCase_ == 1;
    }
    /**
     * <code>.object_detection.protos.NormalizeImage normalize_image = 1;</code>
     * @return The normalizeImage.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.NormalizeImage getNormalizeImage() {
      if (preprocessingStepCase_ == 1) {
         return (object_detection.protos.Preprocessor.NormalizeImage) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.NormalizeImage.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.NormalizeImage normalize_image = 1;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.NormalizeImageOrBuilder getNormalizeImageOrBuilder() {
      if (preprocessingStepCase_ == 1) {
         return (object_detection.protos.Preprocessor.NormalizeImage) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.NormalizeImage.getDefaultInstance();
    }

    public static final int RANDOM_HORIZONTAL_FLIP_FIELD_NUMBER = 2;
    /**
     * <code>.object_detection.protos.RandomHorizontalFlip random_horizontal_flip = 2;</code>
     * @return Whether the randomHorizontalFlip field is set.
     */
    @java.lang.Override
    public boolean hasRandomHorizontalFlip() {
      return preprocessingStepCase_ == 2;
    }
    /**
     * <code>.object_detection.protos.RandomHorizontalFlip random_horizontal_flip = 2;</code>
     * @return The randomHorizontalFlip.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomHorizontalFlip getRandomHorizontalFlip() {
      if (preprocessingStepCase_ == 2) {
         return (object_detection.protos.Preprocessor.RandomHorizontalFlip) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomHorizontalFlip.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomHorizontalFlip random_horizontal_flip = 2;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomHorizontalFlipOrBuilder getRandomHorizontalFlipOrBuilder() {
      if (preprocessingStepCase_ == 2) {
         return (object_detection.protos.Preprocessor.RandomHorizontalFlip) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomHorizontalFlip.getDefaultInstance();
    }

    public static final int RANDOM_PIXEL_VALUE_SCALE_FIELD_NUMBER = 3;
    /**
     * <code>.object_detection.protos.RandomPixelValueScale random_pixel_value_scale = 3;</code>
     * @return Whether the randomPixelValueScale field is set.
     */
    @java.lang.Override
    public boolean hasRandomPixelValueScale() {
      return preprocessingStepCase_ == 3;
    }
    /**
     * <code>.object_detection.protos.RandomPixelValueScale random_pixel_value_scale = 3;</code>
     * @return The randomPixelValueScale.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomPixelValueScale getRandomPixelValueScale() {
      if (preprocessingStepCase_ == 3) {
         return (object_detection.protos.Preprocessor.RandomPixelValueScale) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomPixelValueScale.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomPixelValueScale random_pixel_value_scale = 3;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomPixelValueScaleOrBuilder getRandomPixelValueScaleOrBuilder() {
      if (preprocessingStepCase_ == 3) {
         return (object_detection.protos.Preprocessor.RandomPixelValueScale) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomPixelValueScale.getDefaultInstance();
    }

    public static final int RANDOM_IMAGE_SCALE_FIELD_NUMBER = 4;
    /**
     * <code>.object_detection.protos.RandomImageScale random_image_scale = 4;</code>
     * @return Whether the randomImageScale field is set.
     */
    @java.lang.Override
    public boolean hasRandomImageScale() {
      return preprocessingStepCase_ == 4;
    }
    /**
     * <code>.object_detection.protos.RandomImageScale random_image_scale = 4;</code>
     * @return The randomImageScale.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomImageScale getRandomImageScale() {
      if (preprocessingStepCase_ == 4) {
         return (object_detection.protos.Preprocessor.RandomImageScale) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomImageScale.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomImageScale random_image_scale = 4;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomImageScaleOrBuilder getRandomImageScaleOrBuilder() {
      if (preprocessingStepCase_ == 4) {
         return (object_detection.protos.Preprocessor.RandomImageScale) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomImageScale.getDefaultInstance();
    }

    public static final int RANDOM_RGB_TO_GRAY_FIELD_NUMBER = 5;
    /**
     * <code>.object_detection.protos.RandomRGBtoGray random_rgb_to_gray = 5;</code>
     * @return Whether the randomRgbToGray field is set.
     */
    @java.lang.Override
    public boolean hasRandomRgbToGray() {
      return preprocessingStepCase_ == 5;
    }
    /**
     * <code>.object_detection.protos.RandomRGBtoGray random_rgb_to_gray = 5;</code>
     * @return The randomRgbToGray.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomRGBtoGray getRandomRgbToGray() {
      if (preprocessingStepCase_ == 5) {
         return (object_detection.protos.Preprocessor.RandomRGBtoGray) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomRGBtoGray.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomRGBtoGray random_rgb_to_gray = 5;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomRGBtoGrayOrBuilder getRandomRgbToGrayOrBuilder() {
      if (preprocessingStepCase_ == 5) {
         return (object_detection.protos.Preprocessor.RandomRGBtoGray) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomRGBtoGray.getDefaultInstance();
    }

    public static final int RANDOM_ADJUST_BRIGHTNESS_FIELD_NUMBER = 6;
    /**
     * <code>.object_detection.protos.RandomAdjustBrightness random_adjust_brightness = 6;</code>
     * @return Whether the randomAdjustBrightness field is set.
     */
    @java.lang.Override
    public boolean hasRandomAdjustBrightness() {
      return preprocessingStepCase_ == 6;
    }
    /**
     * <code>.object_detection.protos.RandomAdjustBrightness random_adjust_brightness = 6;</code>
     * @return The randomAdjustBrightness.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomAdjustBrightness getRandomAdjustBrightness() {
      if (preprocessingStepCase_ == 6) {
         return (object_detection.protos.Preprocessor.RandomAdjustBrightness) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomAdjustBrightness.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomAdjustBrightness random_adjust_brightness = 6;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomAdjustBrightnessOrBuilder getRandomAdjustBrightnessOrBuilder() {
      if (preprocessingStepCase_ == 6) {
         return (object_detection.protos.Preprocessor.RandomAdjustBrightness) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomAdjustBrightness.getDefaultInstance();
    }

    public static final int RANDOM_ADJUST_CONTRAST_FIELD_NUMBER = 7;
    /**
     * <code>.object_detection.protos.RandomAdjustContrast random_adjust_contrast = 7;</code>
     * @return Whether the randomAdjustContrast field is set.
     */
    @java.lang.Override
    public boolean hasRandomAdjustContrast() {
      return preprocessingStepCase_ == 7;
    }
    /**
     * <code>.object_detection.protos.RandomAdjustContrast random_adjust_contrast = 7;</code>
     * @return The randomAdjustContrast.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomAdjustContrast getRandomAdjustContrast() {
      if (preprocessingStepCase_ == 7) {
         return (object_detection.protos.Preprocessor.RandomAdjustContrast) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomAdjustContrast.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomAdjustContrast random_adjust_contrast = 7;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomAdjustContrastOrBuilder getRandomAdjustContrastOrBuilder() {
      if (preprocessingStepCase_ == 7) {
         return (object_detection.protos.Preprocessor.RandomAdjustContrast) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomAdjustContrast.getDefaultInstance();
    }

    public static final int RANDOM_ADJUST_HUE_FIELD_NUMBER = 8;
    /**
     * <code>.object_detection.protos.RandomAdjustHue random_adjust_hue = 8;</code>
     * @return Whether the randomAdjustHue field is set.
     */
    @java.lang.Override
    public boolean hasRandomAdjustHue() {
      return preprocessingStepCase_ == 8;
    }
    /**
     * <code>.object_detection.protos.RandomAdjustHue random_adjust_hue = 8;</code>
     * @return The randomAdjustHue.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomAdjustHue getRandomAdjustHue() {
      if (preprocessingStepCase_ == 8) {
         return (object_detection.protos.Preprocessor.RandomAdjustHue) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomAdjustHue.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomAdjustHue random_adjust_hue = 8;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomAdjustHueOrBuilder getRandomAdjustHueOrBuilder() {
      if (preprocessingStepCase_ == 8) {
         return (object_detection.protos.Preprocessor.RandomAdjustHue) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomAdjustHue.getDefaultInstance();
    }

    public static final int RANDOM_ADJUST_SATURATION_FIELD_NUMBER = 9;
    /**
     * <code>.object_detection.protos.RandomAdjustSaturation random_adjust_saturation = 9;</code>
     * @return Whether the randomAdjustSaturation field is set.
     */
    @java.lang.Override
    public boolean hasRandomAdjustSaturation() {
      return preprocessingStepCase_ == 9;
    }
    /**
     * <code>.object_detection.protos.RandomAdjustSaturation random_adjust_saturation = 9;</code>
     * @return The randomAdjustSaturation.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomAdjustSaturation getRandomAdjustSaturation() {
      if (preprocessingStepCase_ == 9) {
         return (object_detection.protos.Preprocessor.RandomAdjustSaturation) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomAdjustSaturation.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomAdjustSaturation random_adjust_saturation = 9;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomAdjustSaturationOrBuilder getRandomAdjustSaturationOrBuilder() {
      if (preprocessingStepCase_ == 9) {
         return (object_detection.protos.Preprocessor.RandomAdjustSaturation) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomAdjustSaturation.getDefaultInstance();
    }

    public static final int RANDOM_DISTORT_COLOR_FIELD_NUMBER = 10;
    /**
     * <code>.object_detection.protos.RandomDistortColor random_distort_color = 10;</code>
     * @return Whether the randomDistortColor field is set.
     */
    @java.lang.Override
    public boolean hasRandomDistortColor() {
      return preprocessingStepCase_ == 10;
    }
    /**
     * <code>.object_detection.protos.RandomDistortColor random_distort_color = 10;</code>
     * @return The randomDistortColor.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomDistortColor getRandomDistortColor() {
      if (preprocessingStepCase_ == 10) {
         return (object_detection.protos.Preprocessor.RandomDistortColor) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomDistortColor.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomDistortColor random_distort_color = 10;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomDistortColorOrBuilder getRandomDistortColorOrBuilder() {
      if (preprocessingStepCase_ == 10) {
         return (object_detection.protos.Preprocessor.RandomDistortColor) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomDistortColor.getDefaultInstance();
    }

    public static final int RANDOM_JITTER_BOXES_FIELD_NUMBER = 11;
    /**
     * <code>.object_detection.protos.RandomJitterBoxes random_jitter_boxes = 11;</code>
     * @return Whether the randomJitterBoxes field is set.
     */
    @java.lang.Override
    public boolean hasRandomJitterBoxes() {
      return preprocessingStepCase_ == 11;
    }
    /**
     * <code>.object_detection.protos.RandomJitterBoxes random_jitter_boxes = 11;</code>
     * @return The randomJitterBoxes.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomJitterBoxes getRandomJitterBoxes() {
      if (preprocessingStepCase_ == 11) {
         return (object_detection.protos.Preprocessor.RandomJitterBoxes) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomJitterBoxes.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomJitterBoxes random_jitter_boxes = 11;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomJitterBoxesOrBuilder getRandomJitterBoxesOrBuilder() {
      if (preprocessingStepCase_ == 11) {
         return (object_detection.protos.Preprocessor.RandomJitterBoxes) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomJitterBoxes.getDefaultInstance();
    }

    public static final int RANDOM_CROP_IMAGE_FIELD_NUMBER = 12;
    /**
     * <code>.object_detection.protos.RandomCropImage random_crop_image = 12;</code>
     * @return Whether the randomCropImage field is set.
     */
    @java.lang.Override
    public boolean hasRandomCropImage() {
      return preprocessingStepCase_ == 12;
    }
    /**
     * <code>.object_detection.protos.RandomCropImage random_crop_image = 12;</code>
     * @return The randomCropImage.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomCropImage getRandomCropImage() {
      if (preprocessingStepCase_ == 12) {
         return (object_detection.protos.Preprocessor.RandomCropImage) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomCropImage.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomCropImage random_crop_image = 12;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomCropImageOrBuilder getRandomCropImageOrBuilder() {
      if (preprocessingStepCase_ == 12) {
         return (object_detection.protos.Preprocessor.RandomCropImage) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomCropImage.getDefaultInstance();
    }

    public static final int RANDOM_PAD_IMAGE_FIELD_NUMBER = 13;
    /**
     * <code>.object_detection.protos.RandomPadImage random_pad_image = 13;</code>
     * @return Whether the randomPadImage field is set.
     */
    @java.lang.Override
    public boolean hasRandomPadImage() {
      return preprocessingStepCase_ == 13;
    }
    /**
     * <code>.object_detection.protos.RandomPadImage random_pad_image = 13;</code>
     * @return The randomPadImage.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomPadImage getRandomPadImage() {
      if (preprocessingStepCase_ == 13) {
         return (object_detection.protos.Preprocessor.RandomPadImage) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomPadImage.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomPadImage random_pad_image = 13;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomPadImageOrBuilder getRandomPadImageOrBuilder() {
      if (preprocessingStepCase_ == 13) {
         return (object_detection.protos.Preprocessor.RandomPadImage) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomPadImage.getDefaultInstance();
    }

    public static final int RANDOM_CROP_PAD_IMAGE_FIELD_NUMBER = 14;
    /**
     * <code>.object_detection.protos.RandomCropPadImage random_crop_pad_image = 14;</code>
     * @return Whether the randomCropPadImage field is set.
     */
    @java.lang.Override
    public boolean hasRandomCropPadImage() {
      return preprocessingStepCase_ == 14;
    }
    /**
     * <code>.object_detection.protos.RandomCropPadImage random_crop_pad_image = 14;</code>
     * @return The randomCropPadImage.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomCropPadImage getRandomCropPadImage() {
      if (preprocessingStepCase_ == 14) {
         return (object_detection.protos.Preprocessor.RandomCropPadImage) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomCropPadImage.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomCropPadImage random_crop_pad_image = 14;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomCropPadImageOrBuilder getRandomCropPadImageOrBuilder() {
      if (preprocessingStepCase_ == 14) {
         return (object_detection.protos.Preprocessor.RandomCropPadImage) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomCropPadImage.getDefaultInstance();
    }

    public static final int RANDOM_CROP_TO_ASPECT_RATIO_FIELD_NUMBER = 15;
    /**
     * <code>.object_detection.protos.RandomCropToAspectRatio random_crop_to_aspect_ratio = 15;</code>
     * @return Whether the randomCropToAspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasRandomCropToAspectRatio() {
      return preprocessingStepCase_ == 15;
    }
    /**
     * <code>.object_detection.protos.RandomCropToAspectRatio random_crop_to_aspect_ratio = 15;</code>
     * @return The randomCropToAspectRatio.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomCropToAspectRatio getRandomCropToAspectRatio() {
      if (preprocessingStepCase_ == 15) {
         return (object_detection.protos.Preprocessor.RandomCropToAspectRatio) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomCropToAspectRatio.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomCropToAspectRatio random_crop_to_aspect_ratio = 15;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomCropToAspectRatioOrBuilder getRandomCropToAspectRatioOrBuilder() {
      if (preprocessingStepCase_ == 15) {
         return (object_detection.protos.Preprocessor.RandomCropToAspectRatio) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomCropToAspectRatio.getDefaultInstance();
    }

    public static final int RANDOM_BLACK_PATCHES_FIELD_NUMBER = 16;
    /**
     * <code>.object_detection.protos.RandomBlackPatches random_black_patches = 16;</code>
     * @return Whether the randomBlackPatches field is set.
     */
    @java.lang.Override
    public boolean hasRandomBlackPatches() {
      return preprocessingStepCase_ == 16;
    }
    /**
     * <code>.object_detection.protos.RandomBlackPatches random_black_patches = 16;</code>
     * @return The randomBlackPatches.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomBlackPatches getRandomBlackPatches() {
      if (preprocessingStepCase_ == 16) {
         return (object_detection.protos.Preprocessor.RandomBlackPatches) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomBlackPatches.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomBlackPatches random_black_patches = 16;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomBlackPatchesOrBuilder getRandomBlackPatchesOrBuilder() {
      if (preprocessingStepCase_ == 16) {
         return (object_detection.protos.Preprocessor.RandomBlackPatches) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomBlackPatches.getDefaultInstance();
    }

    public static final int RANDOM_RESIZE_METHOD_FIELD_NUMBER = 17;
    /**
     * <code>.object_detection.protos.RandomResizeMethod random_resize_method = 17;</code>
     * @return Whether the randomResizeMethod field is set.
     */
    @java.lang.Override
    public boolean hasRandomResizeMethod() {
      return preprocessingStepCase_ == 17;
    }
    /**
     * <code>.object_detection.protos.RandomResizeMethod random_resize_method = 17;</code>
     * @return The randomResizeMethod.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomResizeMethod getRandomResizeMethod() {
      if (preprocessingStepCase_ == 17) {
         return (object_detection.protos.Preprocessor.RandomResizeMethod) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomResizeMethod.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomResizeMethod random_resize_method = 17;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomResizeMethodOrBuilder getRandomResizeMethodOrBuilder() {
      if (preprocessingStepCase_ == 17) {
         return (object_detection.protos.Preprocessor.RandomResizeMethod) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomResizeMethod.getDefaultInstance();
    }

    public static final int SCALE_BOXES_TO_PIXEL_COORDINATES_FIELD_NUMBER = 18;
    /**
     * <code>.object_detection.protos.ScaleBoxesToPixelCoordinates scale_boxes_to_pixel_coordinates = 18;</code>
     * @return Whether the scaleBoxesToPixelCoordinates field is set.
     */
    @java.lang.Override
    public boolean hasScaleBoxesToPixelCoordinates() {
      return preprocessingStepCase_ == 18;
    }
    /**
     * <code>.object_detection.protos.ScaleBoxesToPixelCoordinates scale_boxes_to_pixel_coordinates = 18;</code>
     * @return The scaleBoxesToPixelCoordinates.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates getScaleBoxesToPixelCoordinates() {
      if (preprocessingStepCase_ == 18) {
         return (object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.ScaleBoxesToPixelCoordinates scale_boxes_to_pixel_coordinates = 18;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinatesOrBuilder getScaleBoxesToPixelCoordinatesOrBuilder() {
      if (preprocessingStepCase_ == 18) {
         return (object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.getDefaultInstance();
    }

    public static final int RESIZE_IMAGE_FIELD_NUMBER = 19;
    /**
     * <code>.object_detection.protos.ResizeImage resize_image = 19;</code>
     * @return Whether the resizeImage field is set.
     */
    @java.lang.Override
    public boolean hasResizeImage() {
      return preprocessingStepCase_ == 19;
    }
    /**
     * <code>.object_detection.protos.ResizeImage resize_image = 19;</code>
     * @return The resizeImage.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.ResizeImage getResizeImage() {
      if (preprocessingStepCase_ == 19) {
         return (object_detection.protos.Preprocessor.ResizeImage) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.ResizeImage.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.ResizeImage resize_image = 19;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.ResizeImageOrBuilder getResizeImageOrBuilder() {
      if (preprocessingStepCase_ == 19) {
         return (object_detection.protos.Preprocessor.ResizeImage) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.ResizeImage.getDefaultInstance();
    }

    public static final int SUBTRACT_CHANNEL_MEAN_FIELD_NUMBER = 20;
    /**
     * <code>.object_detection.protos.SubtractChannelMean subtract_channel_mean = 20;</code>
     * @return Whether the subtractChannelMean field is set.
     */
    @java.lang.Override
    public boolean hasSubtractChannelMean() {
      return preprocessingStepCase_ == 20;
    }
    /**
     * <code>.object_detection.protos.SubtractChannelMean subtract_channel_mean = 20;</code>
     * @return The subtractChannelMean.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SubtractChannelMean getSubtractChannelMean() {
      if (preprocessingStepCase_ == 20) {
         return (object_detection.protos.Preprocessor.SubtractChannelMean) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.SubtractChannelMean.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.SubtractChannelMean subtract_channel_mean = 20;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SubtractChannelMeanOrBuilder getSubtractChannelMeanOrBuilder() {
      if (preprocessingStepCase_ == 20) {
         return (object_detection.protos.Preprocessor.SubtractChannelMean) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.SubtractChannelMean.getDefaultInstance();
    }

    public static final int SSD_RANDOM_CROP_FIELD_NUMBER = 21;
    /**
     * <code>.object_detection.protos.SSDRandomCrop ssd_random_crop = 21;</code>
     * @return Whether the ssdRandomCrop field is set.
     */
    @java.lang.Override
    public boolean hasSsdRandomCrop() {
      return preprocessingStepCase_ == 21;
    }
    /**
     * <code>.object_detection.protos.SSDRandomCrop ssd_random_crop = 21;</code>
     * @return The ssdRandomCrop.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCrop getSsdRandomCrop() {
      if (preprocessingStepCase_ == 21) {
         return (object_detection.protos.Preprocessor.SSDRandomCrop) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.SSDRandomCrop.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.SSDRandomCrop ssd_random_crop = 21;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropOrBuilder getSsdRandomCropOrBuilder() {
      if (preprocessingStepCase_ == 21) {
         return (object_detection.protos.Preprocessor.SSDRandomCrop) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.SSDRandomCrop.getDefaultInstance();
    }

    public static final int SSD_RANDOM_CROP_PAD_FIELD_NUMBER = 22;
    /**
     * <code>.object_detection.protos.SSDRandomCropPad ssd_random_crop_pad = 22;</code>
     * @return Whether the ssdRandomCropPad field is set.
     */
    @java.lang.Override
    public boolean hasSsdRandomCropPad() {
      return preprocessingStepCase_ == 22;
    }
    /**
     * <code>.object_detection.protos.SSDRandomCropPad ssd_random_crop_pad = 22;</code>
     * @return The ssdRandomCropPad.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropPad getSsdRandomCropPad() {
      if (preprocessingStepCase_ == 22) {
         return (object_detection.protos.Preprocessor.SSDRandomCropPad) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.SSDRandomCropPad.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.SSDRandomCropPad ssd_random_crop_pad = 22;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropPadOrBuilder getSsdRandomCropPadOrBuilder() {
      if (preprocessingStepCase_ == 22) {
         return (object_detection.protos.Preprocessor.SSDRandomCropPad) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.SSDRandomCropPad.getDefaultInstance();
    }

    public static final int SSD_RANDOM_CROP_FIXED_ASPECT_RATIO_FIELD_NUMBER = 23;
    /**
     * <code>.object_detection.protos.SSDRandomCropFixedAspectRatio ssd_random_crop_fixed_aspect_ratio = 23;</code>
     * @return Whether the ssdRandomCropFixedAspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasSsdRandomCropFixedAspectRatio() {
      return preprocessingStepCase_ == 23;
    }
    /**
     * <code>.object_detection.protos.SSDRandomCropFixedAspectRatio ssd_random_crop_fixed_aspect_ratio = 23;</code>
     * @return The ssdRandomCropFixedAspectRatio.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio getSsdRandomCropFixedAspectRatio() {
      if (preprocessingStepCase_ == 23) {
         return (object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.SSDRandomCropFixedAspectRatio ssd_random_crop_fixed_aspect_ratio = 23;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOrBuilder getSsdRandomCropFixedAspectRatioOrBuilder() {
      if (preprocessingStepCase_ == 23) {
         return (object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.getDefaultInstance();
    }

    public static final int SSD_RANDOM_CROP_PAD_FIXED_ASPECT_RATIO_FIELD_NUMBER = 24;
    /**
     * <code>.object_detection.protos.SSDRandomCropPadFixedAspectRatio ssd_random_crop_pad_fixed_aspect_ratio = 24;</code>
     * @return Whether the ssdRandomCropPadFixedAspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasSsdRandomCropPadFixedAspectRatio() {
      return preprocessingStepCase_ == 24;
    }
    /**
     * <code>.object_detection.protos.SSDRandomCropPadFixedAspectRatio ssd_random_crop_pad_fixed_aspect_ratio = 24;</code>
     * @return The ssdRandomCropPadFixedAspectRatio.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio getSsdRandomCropPadFixedAspectRatio() {
      if (preprocessingStepCase_ == 24) {
         return (object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.SSDRandomCropPadFixedAspectRatio ssd_random_crop_pad_fixed_aspect_ratio = 24;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOrBuilder getSsdRandomCropPadFixedAspectRatioOrBuilder() {
      if (preprocessingStepCase_ == 24) {
         return (object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.getDefaultInstance();
    }

    public static final int RANDOM_VERTICAL_FLIP_FIELD_NUMBER = 25;
    /**
     * <code>.object_detection.protos.RandomVerticalFlip random_vertical_flip = 25;</code>
     * @return Whether the randomVerticalFlip field is set.
     */
    @java.lang.Override
    public boolean hasRandomVerticalFlip() {
      return preprocessingStepCase_ == 25;
    }
    /**
     * <code>.object_detection.protos.RandomVerticalFlip random_vertical_flip = 25;</code>
     * @return The randomVerticalFlip.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomVerticalFlip getRandomVerticalFlip() {
      if (preprocessingStepCase_ == 25) {
         return (object_detection.protos.Preprocessor.RandomVerticalFlip) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomVerticalFlip.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomVerticalFlip random_vertical_flip = 25;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomVerticalFlipOrBuilder getRandomVerticalFlipOrBuilder() {
      if (preprocessingStepCase_ == 25) {
         return (object_detection.protos.Preprocessor.RandomVerticalFlip) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomVerticalFlip.getDefaultInstance();
    }

    public static final int RANDOM_ROTATION90_FIELD_NUMBER = 26;
    /**
     * <code>.object_detection.protos.RandomRotation90 random_rotation90 = 26;</code>
     * @return Whether the randomRotation90 field is set.
     */
    @java.lang.Override
    public boolean hasRandomRotation90() {
      return preprocessingStepCase_ == 26;
    }
    /**
     * <code>.object_detection.protos.RandomRotation90 random_rotation90 = 26;</code>
     * @return The randomRotation90.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomRotation90 getRandomRotation90() {
      if (preprocessingStepCase_ == 26) {
         return (object_detection.protos.Preprocessor.RandomRotation90) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomRotation90.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomRotation90 random_rotation90 = 26;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomRotation90OrBuilder getRandomRotation90OrBuilder() {
      if (preprocessingStepCase_ == 26) {
         return (object_detection.protos.Preprocessor.RandomRotation90) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomRotation90.getDefaultInstance();
    }

    public static final int RGB_TO_GRAY_FIELD_NUMBER = 27;
    /**
     * <code>.object_detection.protos.RGBtoGray rgb_to_gray = 27;</code>
     * @return Whether the rgbToGray field is set.
     */
    @java.lang.Override
    public boolean hasRgbToGray() {
      return preprocessingStepCase_ == 27;
    }
    /**
     * <code>.object_detection.protos.RGBtoGray rgb_to_gray = 27;</code>
     * @return The rgbToGray.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RGBtoGray getRgbToGray() {
      if (preprocessingStepCase_ == 27) {
         return (object_detection.protos.Preprocessor.RGBtoGray) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RGBtoGray.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RGBtoGray rgb_to_gray = 27;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RGBtoGrayOrBuilder getRgbToGrayOrBuilder() {
      if (preprocessingStepCase_ == 27) {
         return (object_detection.protos.Preprocessor.RGBtoGray) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RGBtoGray.getDefaultInstance();
    }

    public static final int CONVERT_CLASS_LOGITS_TO_SOFTMAX_FIELD_NUMBER = 28;
    /**
     * <code>.object_detection.protos.ConvertClassLogitsToSoftmax convert_class_logits_to_softmax = 28;</code>
     * @return Whether the convertClassLogitsToSoftmax field is set.
     */
    @java.lang.Override
    public boolean hasConvertClassLogitsToSoftmax() {
      return preprocessingStepCase_ == 28;
    }
    /**
     * <code>.object_detection.protos.ConvertClassLogitsToSoftmax convert_class_logits_to_softmax = 28;</code>
     * @return The convertClassLogitsToSoftmax.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax getConvertClassLogitsToSoftmax() {
      if (preprocessingStepCase_ == 28) {
         return (object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.ConvertClassLogitsToSoftmax convert_class_logits_to_softmax = 28;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmaxOrBuilder getConvertClassLogitsToSoftmaxOrBuilder() {
      if (preprocessingStepCase_ == 28) {
         return (object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.getDefaultInstance();
    }

    public static final int RANDOM_ABSOLUTE_PAD_IMAGE_FIELD_NUMBER = 29;
    /**
     * <code>.object_detection.protos.RandomAbsolutePadImage random_absolute_pad_image = 29;</code>
     * @return Whether the randomAbsolutePadImage field is set.
     */
    @java.lang.Override
    public boolean hasRandomAbsolutePadImage() {
      return preprocessingStepCase_ == 29;
    }
    /**
     * <code>.object_detection.protos.RandomAbsolutePadImage random_absolute_pad_image = 29;</code>
     * @return The randomAbsolutePadImage.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomAbsolutePadImage getRandomAbsolutePadImage() {
      if (preprocessingStepCase_ == 29) {
         return (object_detection.protos.Preprocessor.RandomAbsolutePadImage) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomAbsolutePadImage.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomAbsolutePadImage random_absolute_pad_image = 29;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomAbsolutePadImageOrBuilder getRandomAbsolutePadImageOrBuilder() {
      if (preprocessingStepCase_ == 29) {
         return (object_detection.protos.Preprocessor.RandomAbsolutePadImage) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomAbsolutePadImage.getDefaultInstance();
    }

    public static final int RANDOM_SELF_CONCAT_IMAGE_FIELD_NUMBER = 30;
    /**
     * <code>.object_detection.protos.RandomSelfConcatImage random_self_concat_image = 30;</code>
     * @return Whether the randomSelfConcatImage field is set.
     */
    @java.lang.Override
    public boolean hasRandomSelfConcatImage() {
      return preprocessingStepCase_ == 30;
    }
    /**
     * <code>.object_detection.protos.RandomSelfConcatImage random_self_concat_image = 30;</code>
     * @return The randomSelfConcatImage.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomSelfConcatImage getRandomSelfConcatImage() {
      if (preprocessingStepCase_ == 30) {
         return (object_detection.protos.Preprocessor.RandomSelfConcatImage) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomSelfConcatImage.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomSelfConcatImage random_self_concat_image = 30;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomSelfConcatImageOrBuilder getRandomSelfConcatImageOrBuilder() {
      if (preprocessingStepCase_ == 30) {
         return (object_detection.protos.Preprocessor.RandomSelfConcatImage) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomSelfConcatImage.getDefaultInstance();
    }

    public static final int AUTOAUGMENT_IMAGE_FIELD_NUMBER = 31;
    /**
     * <code>.object_detection.protos.AutoAugmentImage autoaugment_image = 31;</code>
     * @return Whether the autoaugmentImage field is set.
     */
    @java.lang.Override
    public boolean hasAutoaugmentImage() {
      return preprocessingStepCase_ == 31;
    }
    /**
     * <code>.object_detection.protos.AutoAugmentImage autoaugment_image = 31;</code>
     * @return The autoaugmentImage.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.AutoAugmentImage getAutoaugmentImage() {
      if (preprocessingStepCase_ == 31) {
         return (object_detection.protos.Preprocessor.AutoAugmentImage) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.AutoAugmentImage.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.AutoAugmentImage autoaugment_image = 31;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.AutoAugmentImageOrBuilder getAutoaugmentImageOrBuilder() {
      if (preprocessingStepCase_ == 31) {
         return (object_detection.protos.Preprocessor.AutoAugmentImage) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.AutoAugmentImage.getDefaultInstance();
    }

    public static final int DROP_LABEL_PROBABILISTICALLY_FIELD_NUMBER = 32;
    /**
     * <code>.object_detection.protos.DropLabelProbabilistically drop_label_probabilistically = 32;</code>
     * @return Whether the dropLabelProbabilistically field is set.
     */
    @java.lang.Override
    public boolean hasDropLabelProbabilistically() {
      return preprocessingStepCase_ == 32;
    }
    /**
     * <code>.object_detection.protos.DropLabelProbabilistically drop_label_probabilistically = 32;</code>
     * @return The dropLabelProbabilistically.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.DropLabelProbabilistically getDropLabelProbabilistically() {
      if (preprocessingStepCase_ == 32) {
         return (object_detection.protos.Preprocessor.DropLabelProbabilistically) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.DropLabelProbabilistically.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.DropLabelProbabilistically drop_label_probabilistically = 32;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.DropLabelProbabilisticallyOrBuilder getDropLabelProbabilisticallyOrBuilder() {
      if (preprocessingStepCase_ == 32) {
         return (object_detection.protos.Preprocessor.DropLabelProbabilistically) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.DropLabelProbabilistically.getDefaultInstance();
    }

    public static final int REMAP_LABELS_FIELD_NUMBER = 33;
    /**
     * <code>.object_detection.protos.RemapLabels remap_labels = 33;</code>
     * @return Whether the remapLabels field is set.
     */
    @java.lang.Override
    public boolean hasRemapLabels() {
      return preprocessingStepCase_ == 33;
    }
    /**
     * <code>.object_detection.protos.RemapLabels remap_labels = 33;</code>
     * @return The remapLabels.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RemapLabels getRemapLabels() {
      if (preprocessingStepCase_ == 33) {
         return (object_detection.protos.Preprocessor.RemapLabels) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RemapLabels.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RemapLabels remap_labels = 33;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RemapLabelsOrBuilder getRemapLabelsOrBuilder() {
      if (preprocessingStepCase_ == 33) {
         return (object_detection.protos.Preprocessor.RemapLabels) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RemapLabels.getDefaultInstance();
    }

    public static final int RANDOM_JPEG_QUALITY_FIELD_NUMBER = 34;
    /**
     * <code>.object_detection.protos.RandomJpegQuality random_jpeg_quality = 34;</code>
     * @return Whether the randomJpegQuality field is set.
     */
    @java.lang.Override
    public boolean hasRandomJpegQuality() {
      return preprocessingStepCase_ == 34;
    }
    /**
     * <code>.object_detection.protos.RandomJpegQuality random_jpeg_quality = 34;</code>
     * @return The randomJpegQuality.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomJpegQuality getRandomJpegQuality() {
      if (preprocessingStepCase_ == 34) {
         return (object_detection.protos.Preprocessor.RandomJpegQuality) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomJpegQuality.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomJpegQuality random_jpeg_quality = 34;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomJpegQualityOrBuilder getRandomJpegQualityOrBuilder() {
      if (preprocessingStepCase_ == 34) {
         return (object_detection.protos.Preprocessor.RandomJpegQuality) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomJpegQuality.getDefaultInstance();
    }

    public static final int RANDOM_DOWNSCALE_TO_TARGET_PIXELS_FIELD_NUMBER = 35;
    /**
     * <code>.object_detection.protos.RandomDownscaleToTargetPixels random_downscale_to_target_pixels = 35;</code>
     * @return Whether the randomDownscaleToTargetPixels field is set.
     */
    @java.lang.Override
    public boolean hasRandomDownscaleToTargetPixels() {
      return preprocessingStepCase_ == 35;
    }
    /**
     * <code>.object_detection.protos.RandomDownscaleToTargetPixels random_downscale_to_target_pixels = 35;</code>
     * @return The randomDownscaleToTargetPixels.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels getRandomDownscaleToTargetPixels() {
      if (preprocessingStepCase_ == 35) {
         return (object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomDownscaleToTargetPixels random_downscale_to_target_pixels = 35;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomDownscaleToTargetPixelsOrBuilder getRandomDownscaleToTargetPixelsOrBuilder() {
      if (preprocessingStepCase_ == 35) {
         return (object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.getDefaultInstance();
    }

    public static final int RANDOM_PATCH_GAUSSIAN_FIELD_NUMBER = 36;
    /**
     * <code>.object_detection.protos.RandomPatchGaussian random_patch_gaussian = 36;</code>
     * @return Whether the randomPatchGaussian field is set.
     */
    @java.lang.Override
    public boolean hasRandomPatchGaussian() {
      return preprocessingStepCase_ == 36;
    }
    /**
     * <code>.object_detection.protos.RandomPatchGaussian random_patch_gaussian = 36;</code>
     * @return The randomPatchGaussian.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomPatchGaussian getRandomPatchGaussian() {
      if (preprocessingStepCase_ == 36) {
         return (object_detection.protos.Preprocessor.RandomPatchGaussian) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomPatchGaussian.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomPatchGaussian random_patch_gaussian = 36;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomPatchGaussianOrBuilder getRandomPatchGaussianOrBuilder() {
      if (preprocessingStepCase_ == 36) {
         return (object_detection.protos.Preprocessor.RandomPatchGaussian) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomPatchGaussian.getDefaultInstance();
    }

    public static final int RANDOM_SQUARE_CROP_BY_SCALE_FIELD_NUMBER = 37;
    /**
     * <code>.object_detection.protos.RandomSquareCropByScale random_square_crop_by_scale = 37;</code>
     * @return Whether the randomSquareCropByScale field is set.
     */
    @java.lang.Override
    public boolean hasRandomSquareCropByScale() {
      return preprocessingStepCase_ == 37;
    }
    /**
     * <code>.object_detection.protos.RandomSquareCropByScale random_square_crop_by_scale = 37;</code>
     * @return The randomSquareCropByScale.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomSquareCropByScale getRandomSquareCropByScale() {
      if (preprocessingStepCase_ == 37) {
         return (object_detection.protos.Preprocessor.RandomSquareCropByScale) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomSquareCropByScale.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomSquareCropByScale random_square_crop_by_scale = 37;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomSquareCropByScaleOrBuilder getRandomSquareCropByScaleOrBuilder() {
      if (preprocessingStepCase_ == 37) {
         return (object_detection.protos.Preprocessor.RandomSquareCropByScale) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomSquareCropByScale.getDefaultInstance();
    }

    public static final int RANDOM_SCALE_CROP_AND_PAD_TO_SQUARE_FIELD_NUMBER = 38;
    /**
     * <code>.object_detection.protos.RandomScaleCropAndPadToSquare random_scale_crop_and_pad_to_square = 38;</code>
     * @return Whether the randomScaleCropAndPadToSquare field is set.
     */
    @java.lang.Override
    public boolean hasRandomScaleCropAndPadToSquare() {
      return preprocessingStepCase_ == 38;
    }
    /**
     * <code>.object_detection.protos.RandomScaleCropAndPadToSquare random_scale_crop_and_pad_to_square = 38;</code>
     * @return The randomScaleCropAndPadToSquare.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare getRandomScaleCropAndPadToSquare() {
      if (preprocessingStepCase_ == 38) {
         return (object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.RandomScaleCropAndPadToSquare random_scale_crop_and_pad_to_square = 38;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquareOrBuilder getRandomScaleCropAndPadToSquareOrBuilder() {
      if (preprocessingStepCase_ == 38) {
         return (object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.getDefaultInstance();
    }

    public static final int ADJUST_GAMMA_FIELD_NUMBER = 39;
    /**
     * <code>.object_detection.protos.AdjustGamma adjust_gamma = 39;</code>
     * @return Whether the adjustGamma field is set.
     */
    @java.lang.Override
    public boolean hasAdjustGamma() {
      return preprocessingStepCase_ == 39;
    }
    /**
     * <code>.object_detection.protos.AdjustGamma adjust_gamma = 39;</code>
     * @return The adjustGamma.
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.AdjustGamma getAdjustGamma() {
      if (preprocessingStepCase_ == 39) {
         return (object_detection.protos.Preprocessor.AdjustGamma) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.AdjustGamma.getDefaultInstance();
    }
    /**
     * <code>.object_detection.protos.AdjustGamma adjust_gamma = 39;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.AdjustGammaOrBuilder getAdjustGammaOrBuilder() {
      if (preprocessingStepCase_ == 39) {
         return (object_detection.protos.Preprocessor.AdjustGamma) preprocessingStep_;
      }
      return object_detection.protos.Preprocessor.AdjustGamma.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (preprocessingStepCase_ == 1) {
        output.writeMessage(1, (object_detection.protos.Preprocessor.NormalizeImage) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 2) {
        output.writeMessage(2, (object_detection.protos.Preprocessor.RandomHorizontalFlip) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 3) {
        output.writeMessage(3, (object_detection.protos.Preprocessor.RandomPixelValueScale) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 4) {
        output.writeMessage(4, (object_detection.protos.Preprocessor.RandomImageScale) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 5) {
        output.writeMessage(5, (object_detection.protos.Preprocessor.RandomRGBtoGray) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 6) {
        output.writeMessage(6, (object_detection.protos.Preprocessor.RandomAdjustBrightness) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 7) {
        output.writeMessage(7, (object_detection.protos.Preprocessor.RandomAdjustContrast) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 8) {
        output.writeMessage(8, (object_detection.protos.Preprocessor.RandomAdjustHue) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 9) {
        output.writeMessage(9, (object_detection.protos.Preprocessor.RandomAdjustSaturation) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 10) {
        output.writeMessage(10, (object_detection.protos.Preprocessor.RandomDistortColor) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 11) {
        output.writeMessage(11, (object_detection.protos.Preprocessor.RandomJitterBoxes) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 12) {
        output.writeMessage(12, (object_detection.protos.Preprocessor.RandomCropImage) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 13) {
        output.writeMessage(13, (object_detection.protos.Preprocessor.RandomPadImage) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 14) {
        output.writeMessage(14, (object_detection.protos.Preprocessor.RandomCropPadImage) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 15) {
        output.writeMessage(15, (object_detection.protos.Preprocessor.RandomCropToAspectRatio) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 16) {
        output.writeMessage(16, (object_detection.protos.Preprocessor.RandomBlackPatches) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 17) {
        output.writeMessage(17, (object_detection.protos.Preprocessor.RandomResizeMethod) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 18) {
        output.writeMessage(18, (object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 19) {
        output.writeMessage(19, (object_detection.protos.Preprocessor.ResizeImage) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 20) {
        output.writeMessage(20, (object_detection.protos.Preprocessor.SubtractChannelMean) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 21) {
        output.writeMessage(21, (object_detection.protos.Preprocessor.SSDRandomCrop) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 22) {
        output.writeMessage(22, (object_detection.protos.Preprocessor.SSDRandomCropPad) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 23) {
        output.writeMessage(23, (object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 24) {
        output.writeMessage(24, (object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 25) {
        output.writeMessage(25, (object_detection.protos.Preprocessor.RandomVerticalFlip) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 26) {
        output.writeMessage(26, (object_detection.protos.Preprocessor.RandomRotation90) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 27) {
        output.writeMessage(27, (object_detection.protos.Preprocessor.RGBtoGray) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 28) {
        output.writeMessage(28, (object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 29) {
        output.writeMessage(29, (object_detection.protos.Preprocessor.RandomAbsolutePadImage) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 30) {
        output.writeMessage(30, (object_detection.protos.Preprocessor.RandomSelfConcatImage) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 31) {
        output.writeMessage(31, (object_detection.protos.Preprocessor.AutoAugmentImage) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 32) {
        output.writeMessage(32, (object_detection.protos.Preprocessor.DropLabelProbabilistically) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 33) {
        output.writeMessage(33, (object_detection.protos.Preprocessor.RemapLabels) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 34) {
        output.writeMessage(34, (object_detection.protos.Preprocessor.RandomJpegQuality) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 35) {
        output.writeMessage(35, (object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 36) {
        output.writeMessage(36, (object_detection.protos.Preprocessor.RandomPatchGaussian) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 37) {
        output.writeMessage(37, (object_detection.protos.Preprocessor.RandomSquareCropByScale) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 38) {
        output.writeMessage(38, (object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 39) {
        output.writeMessage(39, (object_detection.protos.Preprocessor.AdjustGamma) preprocessingStep_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (preprocessingStepCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (object_detection.protos.Preprocessor.NormalizeImage) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (object_detection.protos.Preprocessor.RandomHorizontalFlip) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (object_detection.protos.Preprocessor.RandomPixelValueScale) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (object_detection.protos.Preprocessor.RandomImageScale) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (object_detection.protos.Preprocessor.RandomRGBtoGray) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (object_detection.protos.Preprocessor.RandomAdjustBrightness) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (object_detection.protos.Preprocessor.RandomAdjustContrast) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (object_detection.protos.Preprocessor.RandomAdjustHue) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (object_detection.protos.Preprocessor.RandomAdjustSaturation) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (object_detection.protos.Preprocessor.RandomDistortColor) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (object_detection.protos.Preprocessor.RandomJitterBoxes) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (object_detection.protos.Preprocessor.RandomCropImage) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 13) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, (object_detection.protos.Preprocessor.RandomPadImage) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 14) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, (object_detection.protos.Preprocessor.RandomCropPadImage) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 15) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, (object_detection.protos.Preprocessor.RandomCropToAspectRatio) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 16) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, (object_detection.protos.Preprocessor.RandomBlackPatches) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 17) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, (object_detection.protos.Preprocessor.RandomResizeMethod) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 18) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, (object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 19) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, (object_detection.protos.Preprocessor.ResizeImage) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 20) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, (object_detection.protos.Preprocessor.SubtractChannelMean) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 21) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, (object_detection.protos.Preprocessor.SSDRandomCrop) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 22) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, (object_detection.protos.Preprocessor.SSDRandomCropPad) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 23) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, (object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 24) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, (object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 25) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, (object_detection.protos.Preprocessor.RandomVerticalFlip) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 26) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, (object_detection.protos.Preprocessor.RandomRotation90) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 27) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, (object_detection.protos.Preprocessor.RGBtoGray) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 28) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, (object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 29) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(29, (object_detection.protos.Preprocessor.RandomAbsolutePadImage) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 30) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, (object_detection.protos.Preprocessor.RandomSelfConcatImage) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 31) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(31, (object_detection.protos.Preprocessor.AutoAugmentImage) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 32) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, (object_detection.protos.Preprocessor.DropLabelProbabilistically) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 33) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, (object_detection.protos.Preprocessor.RemapLabels) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 34) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(34, (object_detection.protos.Preprocessor.RandomJpegQuality) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 35) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(35, (object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 36) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(36, (object_detection.protos.Preprocessor.RandomPatchGaussian) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 37) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(37, (object_detection.protos.Preprocessor.RandomSquareCropByScale) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 38) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(38, (object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare) preprocessingStep_);
      }
      if (preprocessingStepCase_ == 39) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(39, (object_detection.protos.Preprocessor.AdjustGamma) preprocessingStep_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.PreprocessingStep)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.PreprocessingStep other = (object_detection.protos.Preprocessor.PreprocessingStep) obj;

      if (!getPreprocessingStepCase().equals(other.getPreprocessingStepCase())) return false;
      switch (preprocessingStepCase_) {
        case 1:
          if (!getNormalizeImage()
              .equals(other.getNormalizeImage())) return false;
          break;
        case 2:
          if (!getRandomHorizontalFlip()
              .equals(other.getRandomHorizontalFlip())) return false;
          break;
        case 3:
          if (!getRandomPixelValueScale()
              .equals(other.getRandomPixelValueScale())) return false;
          break;
        case 4:
          if (!getRandomImageScale()
              .equals(other.getRandomImageScale())) return false;
          break;
        case 5:
          if (!getRandomRgbToGray()
              .equals(other.getRandomRgbToGray())) return false;
          break;
        case 6:
          if (!getRandomAdjustBrightness()
              .equals(other.getRandomAdjustBrightness())) return false;
          break;
        case 7:
          if (!getRandomAdjustContrast()
              .equals(other.getRandomAdjustContrast())) return false;
          break;
        case 8:
          if (!getRandomAdjustHue()
              .equals(other.getRandomAdjustHue())) return false;
          break;
        case 9:
          if (!getRandomAdjustSaturation()
              .equals(other.getRandomAdjustSaturation())) return false;
          break;
        case 10:
          if (!getRandomDistortColor()
              .equals(other.getRandomDistortColor())) return false;
          break;
        case 11:
          if (!getRandomJitterBoxes()
              .equals(other.getRandomJitterBoxes())) return false;
          break;
        case 12:
          if (!getRandomCropImage()
              .equals(other.getRandomCropImage())) return false;
          break;
        case 13:
          if (!getRandomPadImage()
              .equals(other.getRandomPadImage())) return false;
          break;
        case 14:
          if (!getRandomCropPadImage()
              .equals(other.getRandomCropPadImage())) return false;
          break;
        case 15:
          if (!getRandomCropToAspectRatio()
              .equals(other.getRandomCropToAspectRatio())) return false;
          break;
        case 16:
          if (!getRandomBlackPatches()
              .equals(other.getRandomBlackPatches())) return false;
          break;
        case 17:
          if (!getRandomResizeMethod()
              .equals(other.getRandomResizeMethod())) return false;
          break;
        case 18:
          if (!getScaleBoxesToPixelCoordinates()
              .equals(other.getScaleBoxesToPixelCoordinates())) return false;
          break;
        case 19:
          if (!getResizeImage()
              .equals(other.getResizeImage())) return false;
          break;
        case 20:
          if (!getSubtractChannelMean()
              .equals(other.getSubtractChannelMean())) return false;
          break;
        case 21:
          if (!getSsdRandomCrop()
              .equals(other.getSsdRandomCrop())) return false;
          break;
        case 22:
          if (!getSsdRandomCropPad()
              .equals(other.getSsdRandomCropPad())) return false;
          break;
        case 23:
          if (!getSsdRandomCropFixedAspectRatio()
              .equals(other.getSsdRandomCropFixedAspectRatio())) return false;
          break;
        case 24:
          if (!getSsdRandomCropPadFixedAspectRatio()
              .equals(other.getSsdRandomCropPadFixedAspectRatio())) return false;
          break;
        case 25:
          if (!getRandomVerticalFlip()
              .equals(other.getRandomVerticalFlip())) return false;
          break;
        case 26:
          if (!getRandomRotation90()
              .equals(other.getRandomRotation90())) return false;
          break;
        case 27:
          if (!getRgbToGray()
              .equals(other.getRgbToGray())) return false;
          break;
        case 28:
          if (!getConvertClassLogitsToSoftmax()
              .equals(other.getConvertClassLogitsToSoftmax())) return false;
          break;
        case 29:
          if (!getRandomAbsolutePadImage()
              .equals(other.getRandomAbsolutePadImage())) return false;
          break;
        case 30:
          if (!getRandomSelfConcatImage()
              .equals(other.getRandomSelfConcatImage())) return false;
          break;
        case 31:
          if (!getAutoaugmentImage()
              .equals(other.getAutoaugmentImage())) return false;
          break;
        case 32:
          if (!getDropLabelProbabilistically()
              .equals(other.getDropLabelProbabilistically())) return false;
          break;
        case 33:
          if (!getRemapLabels()
              .equals(other.getRemapLabels())) return false;
          break;
        case 34:
          if (!getRandomJpegQuality()
              .equals(other.getRandomJpegQuality())) return false;
          break;
        case 35:
          if (!getRandomDownscaleToTargetPixels()
              .equals(other.getRandomDownscaleToTargetPixels())) return false;
          break;
        case 36:
          if (!getRandomPatchGaussian()
              .equals(other.getRandomPatchGaussian())) return false;
          break;
        case 37:
          if (!getRandomSquareCropByScale()
              .equals(other.getRandomSquareCropByScale())) return false;
          break;
        case 38:
          if (!getRandomScaleCropAndPadToSquare()
              .equals(other.getRandomScaleCropAndPadToSquare())) return false;
          break;
        case 39:
          if (!getAdjustGamma()
              .equals(other.getAdjustGamma())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (preprocessingStepCase_) {
        case 1:
          hash = (37 * hash) + NORMALIZE_IMAGE_FIELD_NUMBER;
          hash = (53 * hash) + getNormalizeImage().hashCode();
          break;
        case 2:
          hash = (37 * hash) + RANDOM_HORIZONTAL_FLIP_FIELD_NUMBER;
          hash = (53 * hash) + getRandomHorizontalFlip().hashCode();
          break;
        case 3:
          hash = (37 * hash) + RANDOM_PIXEL_VALUE_SCALE_FIELD_NUMBER;
          hash = (53 * hash) + getRandomPixelValueScale().hashCode();
          break;
        case 4:
          hash = (37 * hash) + RANDOM_IMAGE_SCALE_FIELD_NUMBER;
          hash = (53 * hash) + getRandomImageScale().hashCode();
          break;
        case 5:
          hash = (37 * hash) + RANDOM_RGB_TO_GRAY_FIELD_NUMBER;
          hash = (53 * hash) + getRandomRgbToGray().hashCode();
          break;
        case 6:
          hash = (37 * hash) + RANDOM_ADJUST_BRIGHTNESS_FIELD_NUMBER;
          hash = (53 * hash) + getRandomAdjustBrightness().hashCode();
          break;
        case 7:
          hash = (37 * hash) + RANDOM_ADJUST_CONTRAST_FIELD_NUMBER;
          hash = (53 * hash) + getRandomAdjustContrast().hashCode();
          break;
        case 8:
          hash = (37 * hash) + RANDOM_ADJUST_HUE_FIELD_NUMBER;
          hash = (53 * hash) + getRandomAdjustHue().hashCode();
          break;
        case 9:
          hash = (37 * hash) + RANDOM_ADJUST_SATURATION_FIELD_NUMBER;
          hash = (53 * hash) + getRandomAdjustSaturation().hashCode();
          break;
        case 10:
          hash = (37 * hash) + RANDOM_DISTORT_COLOR_FIELD_NUMBER;
          hash = (53 * hash) + getRandomDistortColor().hashCode();
          break;
        case 11:
          hash = (37 * hash) + RANDOM_JITTER_BOXES_FIELD_NUMBER;
          hash = (53 * hash) + getRandomJitterBoxes().hashCode();
          break;
        case 12:
          hash = (37 * hash) + RANDOM_CROP_IMAGE_FIELD_NUMBER;
          hash = (53 * hash) + getRandomCropImage().hashCode();
          break;
        case 13:
          hash = (37 * hash) + RANDOM_PAD_IMAGE_FIELD_NUMBER;
          hash = (53 * hash) + getRandomPadImage().hashCode();
          break;
        case 14:
          hash = (37 * hash) + RANDOM_CROP_PAD_IMAGE_FIELD_NUMBER;
          hash = (53 * hash) + getRandomCropPadImage().hashCode();
          break;
        case 15:
          hash = (37 * hash) + RANDOM_CROP_TO_ASPECT_RATIO_FIELD_NUMBER;
          hash = (53 * hash) + getRandomCropToAspectRatio().hashCode();
          break;
        case 16:
          hash = (37 * hash) + RANDOM_BLACK_PATCHES_FIELD_NUMBER;
          hash = (53 * hash) + getRandomBlackPatches().hashCode();
          break;
        case 17:
          hash = (37 * hash) + RANDOM_RESIZE_METHOD_FIELD_NUMBER;
          hash = (53 * hash) + getRandomResizeMethod().hashCode();
          break;
        case 18:
          hash = (37 * hash) + SCALE_BOXES_TO_PIXEL_COORDINATES_FIELD_NUMBER;
          hash = (53 * hash) + getScaleBoxesToPixelCoordinates().hashCode();
          break;
        case 19:
          hash = (37 * hash) + RESIZE_IMAGE_FIELD_NUMBER;
          hash = (53 * hash) + getResizeImage().hashCode();
          break;
        case 20:
          hash = (37 * hash) + SUBTRACT_CHANNEL_MEAN_FIELD_NUMBER;
          hash = (53 * hash) + getSubtractChannelMean().hashCode();
          break;
        case 21:
          hash = (37 * hash) + SSD_RANDOM_CROP_FIELD_NUMBER;
          hash = (53 * hash) + getSsdRandomCrop().hashCode();
          break;
        case 22:
          hash = (37 * hash) + SSD_RANDOM_CROP_PAD_FIELD_NUMBER;
          hash = (53 * hash) + getSsdRandomCropPad().hashCode();
          break;
        case 23:
          hash = (37 * hash) + SSD_RANDOM_CROP_FIXED_ASPECT_RATIO_FIELD_NUMBER;
          hash = (53 * hash) + getSsdRandomCropFixedAspectRatio().hashCode();
          break;
        case 24:
          hash = (37 * hash) + SSD_RANDOM_CROP_PAD_FIXED_ASPECT_RATIO_FIELD_NUMBER;
          hash = (53 * hash) + getSsdRandomCropPadFixedAspectRatio().hashCode();
          break;
        case 25:
          hash = (37 * hash) + RANDOM_VERTICAL_FLIP_FIELD_NUMBER;
          hash = (53 * hash) + getRandomVerticalFlip().hashCode();
          break;
        case 26:
          hash = (37 * hash) + RANDOM_ROTATION90_FIELD_NUMBER;
          hash = (53 * hash) + getRandomRotation90().hashCode();
          break;
        case 27:
          hash = (37 * hash) + RGB_TO_GRAY_FIELD_NUMBER;
          hash = (53 * hash) + getRgbToGray().hashCode();
          break;
        case 28:
          hash = (37 * hash) + CONVERT_CLASS_LOGITS_TO_SOFTMAX_FIELD_NUMBER;
          hash = (53 * hash) + getConvertClassLogitsToSoftmax().hashCode();
          break;
        case 29:
          hash = (37 * hash) + RANDOM_ABSOLUTE_PAD_IMAGE_FIELD_NUMBER;
          hash = (53 * hash) + getRandomAbsolutePadImage().hashCode();
          break;
        case 30:
          hash = (37 * hash) + RANDOM_SELF_CONCAT_IMAGE_FIELD_NUMBER;
          hash = (53 * hash) + getRandomSelfConcatImage().hashCode();
          break;
        case 31:
          hash = (37 * hash) + AUTOAUGMENT_IMAGE_FIELD_NUMBER;
          hash = (53 * hash) + getAutoaugmentImage().hashCode();
          break;
        case 32:
          hash = (37 * hash) + DROP_LABEL_PROBABILISTICALLY_FIELD_NUMBER;
          hash = (53 * hash) + getDropLabelProbabilistically().hashCode();
          break;
        case 33:
          hash = (37 * hash) + REMAP_LABELS_FIELD_NUMBER;
          hash = (53 * hash) + getRemapLabels().hashCode();
          break;
        case 34:
          hash = (37 * hash) + RANDOM_JPEG_QUALITY_FIELD_NUMBER;
          hash = (53 * hash) + getRandomJpegQuality().hashCode();
          break;
        case 35:
          hash = (37 * hash) + RANDOM_DOWNSCALE_TO_TARGET_PIXELS_FIELD_NUMBER;
          hash = (53 * hash) + getRandomDownscaleToTargetPixels().hashCode();
          break;
        case 36:
          hash = (37 * hash) + RANDOM_PATCH_GAUSSIAN_FIELD_NUMBER;
          hash = (53 * hash) + getRandomPatchGaussian().hashCode();
          break;
        case 37:
          hash = (37 * hash) + RANDOM_SQUARE_CROP_BY_SCALE_FIELD_NUMBER;
          hash = (53 * hash) + getRandomSquareCropByScale().hashCode();
          break;
        case 38:
          hash = (37 * hash) + RANDOM_SCALE_CROP_AND_PAD_TO_SQUARE_FIELD_NUMBER;
          hash = (53 * hash) + getRandomScaleCropAndPadToSquare().hashCode();
          break;
        case 39:
          hash = (37 * hash) + ADJUST_GAMMA_FIELD_NUMBER;
          hash = (53 * hash) + getAdjustGamma().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.PreprocessingStep parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.PreprocessingStep parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.PreprocessingStep parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.PreprocessingStep parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.PreprocessingStep parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.PreprocessingStep parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.PreprocessingStep parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.PreprocessingStep parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.PreprocessingStep parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.PreprocessingStep parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.PreprocessingStep parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.PreprocessingStep parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.PreprocessingStep prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Message for defining a preprocessing operation on input data.
     * See: //third_party/tensorflow_models/object_detection/core/preprocessor.py
     * Next ID: 40
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.PreprocessingStep}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.PreprocessingStep)
        object_detection.protos.Preprocessor.PreprocessingStepOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_PreprocessingStep_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_PreprocessingStep_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.PreprocessingStep.class, object_detection.protos.Preprocessor.PreprocessingStep.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.PreprocessingStep.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        preprocessingStepCase_ = 0;
        preprocessingStep_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_PreprocessingStep_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.PreprocessingStep getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.PreprocessingStep.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.PreprocessingStep build() {
        object_detection.protos.Preprocessor.PreprocessingStep result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.PreprocessingStep buildPartial() {
        object_detection.protos.Preprocessor.PreprocessingStep result = new object_detection.protos.Preprocessor.PreprocessingStep(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (preprocessingStepCase_ == 1) {
          if (normalizeImageBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = normalizeImageBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 2) {
          if (randomHorizontalFlipBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomHorizontalFlipBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 3) {
          if (randomPixelValueScaleBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomPixelValueScaleBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 4) {
          if (randomImageScaleBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomImageScaleBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 5) {
          if (randomRgbToGrayBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomRgbToGrayBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 6) {
          if (randomAdjustBrightnessBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomAdjustBrightnessBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 7) {
          if (randomAdjustContrastBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomAdjustContrastBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 8) {
          if (randomAdjustHueBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomAdjustHueBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 9) {
          if (randomAdjustSaturationBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomAdjustSaturationBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 10) {
          if (randomDistortColorBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomDistortColorBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 11) {
          if (randomJitterBoxesBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomJitterBoxesBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 12) {
          if (randomCropImageBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomCropImageBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 13) {
          if (randomPadImageBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomPadImageBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 14) {
          if (randomCropPadImageBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomCropPadImageBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 15) {
          if (randomCropToAspectRatioBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomCropToAspectRatioBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 16) {
          if (randomBlackPatchesBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomBlackPatchesBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 17) {
          if (randomResizeMethodBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomResizeMethodBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 18) {
          if (scaleBoxesToPixelCoordinatesBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = scaleBoxesToPixelCoordinatesBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 19) {
          if (resizeImageBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = resizeImageBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 20) {
          if (subtractChannelMeanBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = subtractChannelMeanBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 21) {
          if (ssdRandomCropBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = ssdRandomCropBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 22) {
          if (ssdRandomCropPadBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = ssdRandomCropPadBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 23) {
          if (ssdRandomCropFixedAspectRatioBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = ssdRandomCropFixedAspectRatioBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 24) {
          if (ssdRandomCropPadFixedAspectRatioBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = ssdRandomCropPadFixedAspectRatioBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 25) {
          if (randomVerticalFlipBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomVerticalFlipBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 26) {
          if (randomRotation90Builder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomRotation90Builder_.build();
          }
        }
        if (preprocessingStepCase_ == 27) {
          if (rgbToGrayBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = rgbToGrayBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 28) {
          if (convertClassLogitsToSoftmaxBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = convertClassLogitsToSoftmaxBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 29) {
          if (randomAbsolutePadImageBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomAbsolutePadImageBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 30) {
          if (randomSelfConcatImageBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomSelfConcatImageBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 31) {
          if (autoaugmentImageBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = autoaugmentImageBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 32) {
          if (dropLabelProbabilisticallyBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = dropLabelProbabilisticallyBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 33) {
          if (remapLabelsBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = remapLabelsBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 34) {
          if (randomJpegQualityBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomJpegQualityBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 35) {
          if (randomDownscaleToTargetPixelsBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomDownscaleToTargetPixelsBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 36) {
          if (randomPatchGaussianBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomPatchGaussianBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 37) {
          if (randomSquareCropByScaleBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomSquareCropByScaleBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 38) {
          if (randomScaleCropAndPadToSquareBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = randomScaleCropAndPadToSquareBuilder_.build();
          }
        }
        if (preprocessingStepCase_ == 39) {
          if (adjustGammaBuilder_ == null) {
            result.preprocessingStep_ = preprocessingStep_;
          } else {
            result.preprocessingStep_ = adjustGammaBuilder_.build();
          }
        }
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        result.preprocessingStepCase_ = preprocessingStepCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.PreprocessingStep) {
          return mergeFrom((object_detection.protos.Preprocessor.PreprocessingStep)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.PreprocessingStep other) {
        if (other == object_detection.protos.Preprocessor.PreprocessingStep.getDefaultInstance()) return this;
        switch (other.getPreprocessingStepCase()) {
          case NORMALIZE_IMAGE: {
            mergeNormalizeImage(other.getNormalizeImage());
            break;
          }
          case RANDOM_HORIZONTAL_FLIP: {
            mergeRandomHorizontalFlip(other.getRandomHorizontalFlip());
            break;
          }
          case RANDOM_PIXEL_VALUE_SCALE: {
            mergeRandomPixelValueScale(other.getRandomPixelValueScale());
            break;
          }
          case RANDOM_IMAGE_SCALE: {
            mergeRandomImageScale(other.getRandomImageScale());
            break;
          }
          case RANDOM_RGB_TO_GRAY: {
            mergeRandomRgbToGray(other.getRandomRgbToGray());
            break;
          }
          case RANDOM_ADJUST_BRIGHTNESS: {
            mergeRandomAdjustBrightness(other.getRandomAdjustBrightness());
            break;
          }
          case RANDOM_ADJUST_CONTRAST: {
            mergeRandomAdjustContrast(other.getRandomAdjustContrast());
            break;
          }
          case RANDOM_ADJUST_HUE: {
            mergeRandomAdjustHue(other.getRandomAdjustHue());
            break;
          }
          case RANDOM_ADJUST_SATURATION: {
            mergeRandomAdjustSaturation(other.getRandomAdjustSaturation());
            break;
          }
          case RANDOM_DISTORT_COLOR: {
            mergeRandomDistortColor(other.getRandomDistortColor());
            break;
          }
          case RANDOM_JITTER_BOXES: {
            mergeRandomJitterBoxes(other.getRandomJitterBoxes());
            break;
          }
          case RANDOM_CROP_IMAGE: {
            mergeRandomCropImage(other.getRandomCropImage());
            break;
          }
          case RANDOM_PAD_IMAGE: {
            mergeRandomPadImage(other.getRandomPadImage());
            break;
          }
          case RANDOM_CROP_PAD_IMAGE: {
            mergeRandomCropPadImage(other.getRandomCropPadImage());
            break;
          }
          case RANDOM_CROP_TO_ASPECT_RATIO: {
            mergeRandomCropToAspectRatio(other.getRandomCropToAspectRatio());
            break;
          }
          case RANDOM_BLACK_PATCHES: {
            mergeRandomBlackPatches(other.getRandomBlackPatches());
            break;
          }
          case RANDOM_RESIZE_METHOD: {
            mergeRandomResizeMethod(other.getRandomResizeMethod());
            break;
          }
          case SCALE_BOXES_TO_PIXEL_COORDINATES: {
            mergeScaleBoxesToPixelCoordinates(other.getScaleBoxesToPixelCoordinates());
            break;
          }
          case RESIZE_IMAGE: {
            mergeResizeImage(other.getResizeImage());
            break;
          }
          case SUBTRACT_CHANNEL_MEAN: {
            mergeSubtractChannelMean(other.getSubtractChannelMean());
            break;
          }
          case SSD_RANDOM_CROP: {
            mergeSsdRandomCrop(other.getSsdRandomCrop());
            break;
          }
          case SSD_RANDOM_CROP_PAD: {
            mergeSsdRandomCropPad(other.getSsdRandomCropPad());
            break;
          }
          case SSD_RANDOM_CROP_FIXED_ASPECT_RATIO: {
            mergeSsdRandomCropFixedAspectRatio(other.getSsdRandomCropFixedAspectRatio());
            break;
          }
          case SSD_RANDOM_CROP_PAD_FIXED_ASPECT_RATIO: {
            mergeSsdRandomCropPadFixedAspectRatio(other.getSsdRandomCropPadFixedAspectRatio());
            break;
          }
          case RANDOM_VERTICAL_FLIP: {
            mergeRandomVerticalFlip(other.getRandomVerticalFlip());
            break;
          }
          case RANDOM_ROTATION90: {
            mergeRandomRotation90(other.getRandomRotation90());
            break;
          }
          case RGB_TO_GRAY: {
            mergeRgbToGray(other.getRgbToGray());
            break;
          }
          case CONVERT_CLASS_LOGITS_TO_SOFTMAX: {
            mergeConvertClassLogitsToSoftmax(other.getConvertClassLogitsToSoftmax());
            break;
          }
          case RANDOM_ABSOLUTE_PAD_IMAGE: {
            mergeRandomAbsolutePadImage(other.getRandomAbsolutePadImage());
            break;
          }
          case RANDOM_SELF_CONCAT_IMAGE: {
            mergeRandomSelfConcatImage(other.getRandomSelfConcatImage());
            break;
          }
          case AUTOAUGMENT_IMAGE: {
            mergeAutoaugmentImage(other.getAutoaugmentImage());
            break;
          }
          case DROP_LABEL_PROBABILISTICALLY: {
            mergeDropLabelProbabilistically(other.getDropLabelProbabilistically());
            break;
          }
          case REMAP_LABELS: {
            mergeRemapLabels(other.getRemapLabels());
            break;
          }
          case RANDOM_JPEG_QUALITY: {
            mergeRandomJpegQuality(other.getRandomJpegQuality());
            break;
          }
          case RANDOM_DOWNSCALE_TO_TARGET_PIXELS: {
            mergeRandomDownscaleToTargetPixels(other.getRandomDownscaleToTargetPixels());
            break;
          }
          case RANDOM_PATCH_GAUSSIAN: {
            mergeRandomPatchGaussian(other.getRandomPatchGaussian());
            break;
          }
          case RANDOM_SQUARE_CROP_BY_SCALE: {
            mergeRandomSquareCropByScale(other.getRandomSquareCropByScale());
            break;
          }
          case RANDOM_SCALE_CROP_AND_PAD_TO_SQUARE: {
            mergeRandomScaleCropAndPadToSquare(other.getRandomScaleCropAndPadToSquare());
            break;
          }
          case ADJUST_GAMMA: {
            mergeAdjustGamma(other.getAdjustGamma());
            break;
          }
          case PREPROCESSINGSTEP_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.PreprocessingStep parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.PreprocessingStep) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int preprocessingStepCase_ = 0;
      private java.lang.Object preprocessingStep_;
      public PreprocessingStepCase
          getPreprocessingStepCase() {
        return PreprocessingStepCase.forNumber(
            preprocessingStepCase_);
      }

      public Builder clearPreprocessingStep() {
        preprocessingStepCase_ = 0;
        preprocessingStep_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;
      private int bitField1_;

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.NormalizeImage, object_detection.protos.Preprocessor.NormalizeImage.Builder, object_detection.protos.Preprocessor.NormalizeImageOrBuilder> normalizeImageBuilder_;
      /**
       * <code>.object_detection.protos.NormalizeImage normalize_image = 1;</code>
       * @return Whether the normalizeImage field is set.
       */
      @java.lang.Override
      public boolean hasNormalizeImage() {
        return preprocessingStepCase_ == 1;
      }
      /**
       * <code>.object_detection.protos.NormalizeImage normalize_image = 1;</code>
       * @return The normalizeImage.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.NormalizeImage getNormalizeImage() {
        if (normalizeImageBuilder_ == null) {
          if (preprocessingStepCase_ == 1) {
            return (object_detection.protos.Preprocessor.NormalizeImage) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.NormalizeImage.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 1) {
            return normalizeImageBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.NormalizeImage.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.NormalizeImage normalize_image = 1;</code>
       */
      public Builder setNormalizeImage(object_detection.protos.Preprocessor.NormalizeImage value) {
        if (normalizeImageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          normalizeImageBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 1;
        return this;
      }
      /**
       * <code>.object_detection.protos.NormalizeImage normalize_image = 1;</code>
       */
      public Builder setNormalizeImage(
          object_detection.protos.Preprocessor.NormalizeImage.Builder builderForValue) {
        if (normalizeImageBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          normalizeImageBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 1;
        return this;
      }
      /**
       * <code>.object_detection.protos.NormalizeImage normalize_image = 1;</code>
       */
      public Builder mergeNormalizeImage(object_detection.protos.Preprocessor.NormalizeImage value) {
        if (normalizeImageBuilder_ == null) {
          if (preprocessingStepCase_ == 1 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.NormalizeImage.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.NormalizeImage.newBuilder((object_detection.protos.Preprocessor.NormalizeImage) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 1) {
            normalizeImageBuilder_.mergeFrom(value);
          }
          normalizeImageBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 1;
        return this;
      }
      /**
       * <code>.object_detection.protos.NormalizeImage normalize_image = 1;</code>
       */
      public Builder clearNormalizeImage() {
        if (normalizeImageBuilder_ == null) {
          if (preprocessingStepCase_ == 1) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 1) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          normalizeImageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.NormalizeImage normalize_image = 1;</code>
       */
      public object_detection.protos.Preprocessor.NormalizeImage.Builder getNormalizeImageBuilder() {
        return getNormalizeImageFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.NormalizeImage normalize_image = 1;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.NormalizeImageOrBuilder getNormalizeImageOrBuilder() {
        if ((preprocessingStepCase_ == 1) && (normalizeImageBuilder_ != null)) {
          return normalizeImageBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 1) {
            return (object_detection.protos.Preprocessor.NormalizeImage) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.NormalizeImage.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.NormalizeImage normalize_image = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.NormalizeImage, object_detection.protos.Preprocessor.NormalizeImage.Builder, object_detection.protos.Preprocessor.NormalizeImageOrBuilder>
          getNormalizeImageFieldBuilder() {
        if (normalizeImageBuilder_ == null) {
          if (!(preprocessingStepCase_ == 1)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.NormalizeImage.getDefaultInstance();
          }
          normalizeImageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.NormalizeImage, object_detection.protos.Preprocessor.NormalizeImage.Builder, object_detection.protos.Preprocessor.NormalizeImageOrBuilder>(
                  (object_detection.protos.Preprocessor.NormalizeImage) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 1;
        onChanged();;
        return normalizeImageBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomHorizontalFlip, object_detection.protos.Preprocessor.RandomHorizontalFlip.Builder, object_detection.protos.Preprocessor.RandomHorizontalFlipOrBuilder> randomHorizontalFlipBuilder_;
      /**
       * <code>.object_detection.protos.RandomHorizontalFlip random_horizontal_flip = 2;</code>
       * @return Whether the randomHorizontalFlip field is set.
       */
      @java.lang.Override
      public boolean hasRandomHorizontalFlip() {
        return preprocessingStepCase_ == 2;
      }
      /**
       * <code>.object_detection.protos.RandomHorizontalFlip random_horizontal_flip = 2;</code>
       * @return The randomHorizontalFlip.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomHorizontalFlip getRandomHorizontalFlip() {
        if (randomHorizontalFlipBuilder_ == null) {
          if (preprocessingStepCase_ == 2) {
            return (object_detection.protos.Preprocessor.RandomHorizontalFlip) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomHorizontalFlip.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 2) {
            return randomHorizontalFlipBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomHorizontalFlip.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomHorizontalFlip random_horizontal_flip = 2;</code>
       */
      public Builder setRandomHorizontalFlip(object_detection.protos.Preprocessor.RandomHorizontalFlip value) {
        if (randomHorizontalFlipBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomHorizontalFlipBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 2;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomHorizontalFlip random_horizontal_flip = 2;</code>
       */
      public Builder setRandomHorizontalFlip(
          object_detection.protos.Preprocessor.RandomHorizontalFlip.Builder builderForValue) {
        if (randomHorizontalFlipBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomHorizontalFlipBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 2;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomHorizontalFlip random_horizontal_flip = 2;</code>
       */
      public Builder mergeRandomHorizontalFlip(object_detection.protos.Preprocessor.RandomHorizontalFlip value) {
        if (randomHorizontalFlipBuilder_ == null) {
          if (preprocessingStepCase_ == 2 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomHorizontalFlip.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomHorizontalFlip.newBuilder((object_detection.protos.Preprocessor.RandomHorizontalFlip) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 2) {
            randomHorizontalFlipBuilder_.mergeFrom(value);
          }
          randomHorizontalFlipBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 2;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomHorizontalFlip random_horizontal_flip = 2;</code>
       */
      public Builder clearRandomHorizontalFlip() {
        if (randomHorizontalFlipBuilder_ == null) {
          if (preprocessingStepCase_ == 2) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 2) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomHorizontalFlipBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomHorizontalFlip random_horizontal_flip = 2;</code>
       */
      public object_detection.protos.Preprocessor.RandomHorizontalFlip.Builder getRandomHorizontalFlipBuilder() {
        return getRandomHorizontalFlipFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomHorizontalFlip random_horizontal_flip = 2;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomHorizontalFlipOrBuilder getRandomHorizontalFlipOrBuilder() {
        if ((preprocessingStepCase_ == 2) && (randomHorizontalFlipBuilder_ != null)) {
          return randomHorizontalFlipBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 2) {
            return (object_detection.protos.Preprocessor.RandomHorizontalFlip) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomHorizontalFlip.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomHorizontalFlip random_horizontal_flip = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomHorizontalFlip, object_detection.protos.Preprocessor.RandomHorizontalFlip.Builder, object_detection.protos.Preprocessor.RandomHorizontalFlipOrBuilder>
          getRandomHorizontalFlipFieldBuilder() {
        if (randomHorizontalFlipBuilder_ == null) {
          if (!(preprocessingStepCase_ == 2)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomHorizontalFlip.getDefaultInstance();
          }
          randomHorizontalFlipBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomHorizontalFlip, object_detection.protos.Preprocessor.RandomHorizontalFlip.Builder, object_detection.protos.Preprocessor.RandomHorizontalFlipOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomHorizontalFlip) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 2;
        onChanged();;
        return randomHorizontalFlipBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomPixelValueScale, object_detection.protos.Preprocessor.RandomPixelValueScale.Builder, object_detection.protos.Preprocessor.RandomPixelValueScaleOrBuilder> randomPixelValueScaleBuilder_;
      /**
       * <code>.object_detection.protos.RandomPixelValueScale random_pixel_value_scale = 3;</code>
       * @return Whether the randomPixelValueScale field is set.
       */
      @java.lang.Override
      public boolean hasRandomPixelValueScale() {
        return preprocessingStepCase_ == 3;
      }
      /**
       * <code>.object_detection.protos.RandomPixelValueScale random_pixel_value_scale = 3;</code>
       * @return The randomPixelValueScale.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomPixelValueScale getRandomPixelValueScale() {
        if (randomPixelValueScaleBuilder_ == null) {
          if (preprocessingStepCase_ == 3) {
            return (object_detection.protos.Preprocessor.RandomPixelValueScale) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomPixelValueScale.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 3) {
            return randomPixelValueScaleBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomPixelValueScale.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomPixelValueScale random_pixel_value_scale = 3;</code>
       */
      public Builder setRandomPixelValueScale(object_detection.protos.Preprocessor.RandomPixelValueScale value) {
        if (randomPixelValueScaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomPixelValueScaleBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 3;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomPixelValueScale random_pixel_value_scale = 3;</code>
       */
      public Builder setRandomPixelValueScale(
          object_detection.protos.Preprocessor.RandomPixelValueScale.Builder builderForValue) {
        if (randomPixelValueScaleBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomPixelValueScaleBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 3;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomPixelValueScale random_pixel_value_scale = 3;</code>
       */
      public Builder mergeRandomPixelValueScale(object_detection.protos.Preprocessor.RandomPixelValueScale value) {
        if (randomPixelValueScaleBuilder_ == null) {
          if (preprocessingStepCase_ == 3 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomPixelValueScale.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomPixelValueScale.newBuilder((object_detection.protos.Preprocessor.RandomPixelValueScale) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 3) {
            randomPixelValueScaleBuilder_.mergeFrom(value);
          }
          randomPixelValueScaleBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 3;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomPixelValueScale random_pixel_value_scale = 3;</code>
       */
      public Builder clearRandomPixelValueScale() {
        if (randomPixelValueScaleBuilder_ == null) {
          if (preprocessingStepCase_ == 3) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 3) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomPixelValueScaleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomPixelValueScale random_pixel_value_scale = 3;</code>
       */
      public object_detection.protos.Preprocessor.RandomPixelValueScale.Builder getRandomPixelValueScaleBuilder() {
        return getRandomPixelValueScaleFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomPixelValueScale random_pixel_value_scale = 3;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomPixelValueScaleOrBuilder getRandomPixelValueScaleOrBuilder() {
        if ((preprocessingStepCase_ == 3) && (randomPixelValueScaleBuilder_ != null)) {
          return randomPixelValueScaleBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 3) {
            return (object_detection.protos.Preprocessor.RandomPixelValueScale) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomPixelValueScale.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomPixelValueScale random_pixel_value_scale = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomPixelValueScale, object_detection.protos.Preprocessor.RandomPixelValueScale.Builder, object_detection.protos.Preprocessor.RandomPixelValueScaleOrBuilder>
          getRandomPixelValueScaleFieldBuilder() {
        if (randomPixelValueScaleBuilder_ == null) {
          if (!(preprocessingStepCase_ == 3)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomPixelValueScale.getDefaultInstance();
          }
          randomPixelValueScaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomPixelValueScale, object_detection.protos.Preprocessor.RandomPixelValueScale.Builder, object_detection.protos.Preprocessor.RandomPixelValueScaleOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomPixelValueScale) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 3;
        onChanged();;
        return randomPixelValueScaleBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomImageScale, object_detection.protos.Preprocessor.RandomImageScale.Builder, object_detection.protos.Preprocessor.RandomImageScaleOrBuilder> randomImageScaleBuilder_;
      /**
       * <code>.object_detection.protos.RandomImageScale random_image_scale = 4;</code>
       * @return Whether the randomImageScale field is set.
       */
      @java.lang.Override
      public boolean hasRandomImageScale() {
        return preprocessingStepCase_ == 4;
      }
      /**
       * <code>.object_detection.protos.RandomImageScale random_image_scale = 4;</code>
       * @return The randomImageScale.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomImageScale getRandomImageScale() {
        if (randomImageScaleBuilder_ == null) {
          if (preprocessingStepCase_ == 4) {
            return (object_detection.protos.Preprocessor.RandomImageScale) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomImageScale.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 4) {
            return randomImageScaleBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomImageScale.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomImageScale random_image_scale = 4;</code>
       */
      public Builder setRandomImageScale(object_detection.protos.Preprocessor.RandomImageScale value) {
        if (randomImageScaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomImageScaleBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 4;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomImageScale random_image_scale = 4;</code>
       */
      public Builder setRandomImageScale(
          object_detection.protos.Preprocessor.RandomImageScale.Builder builderForValue) {
        if (randomImageScaleBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomImageScaleBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 4;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomImageScale random_image_scale = 4;</code>
       */
      public Builder mergeRandomImageScale(object_detection.protos.Preprocessor.RandomImageScale value) {
        if (randomImageScaleBuilder_ == null) {
          if (preprocessingStepCase_ == 4 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomImageScale.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomImageScale.newBuilder((object_detection.protos.Preprocessor.RandomImageScale) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 4) {
            randomImageScaleBuilder_.mergeFrom(value);
          }
          randomImageScaleBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 4;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomImageScale random_image_scale = 4;</code>
       */
      public Builder clearRandomImageScale() {
        if (randomImageScaleBuilder_ == null) {
          if (preprocessingStepCase_ == 4) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 4) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomImageScaleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomImageScale random_image_scale = 4;</code>
       */
      public object_detection.protos.Preprocessor.RandomImageScale.Builder getRandomImageScaleBuilder() {
        return getRandomImageScaleFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomImageScale random_image_scale = 4;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomImageScaleOrBuilder getRandomImageScaleOrBuilder() {
        if ((preprocessingStepCase_ == 4) && (randomImageScaleBuilder_ != null)) {
          return randomImageScaleBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 4) {
            return (object_detection.protos.Preprocessor.RandomImageScale) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomImageScale.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomImageScale random_image_scale = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomImageScale, object_detection.protos.Preprocessor.RandomImageScale.Builder, object_detection.protos.Preprocessor.RandomImageScaleOrBuilder>
          getRandomImageScaleFieldBuilder() {
        if (randomImageScaleBuilder_ == null) {
          if (!(preprocessingStepCase_ == 4)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomImageScale.getDefaultInstance();
          }
          randomImageScaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomImageScale, object_detection.protos.Preprocessor.RandomImageScale.Builder, object_detection.protos.Preprocessor.RandomImageScaleOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomImageScale) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 4;
        onChanged();;
        return randomImageScaleBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomRGBtoGray, object_detection.protos.Preprocessor.RandomRGBtoGray.Builder, object_detection.protos.Preprocessor.RandomRGBtoGrayOrBuilder> randomRgbToGrayBuilder_;
      /**
       * <code>.object_detection.protos.RandomRGBtoGray random_rgb_to_gray = 5;</code>
       * @return Whether the randomRgbToGray field is set.
       */
      @java.lang.Override
      public boolean hasRandomRgbToGray() {
        return preprocessingStepCase_ == 5;
      }
      /**
       * <code>.object_detection.protos.RandomRGBtoGray random_rgb_to_gray = 5;</code>
       * @return The randomRgbToGray.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomRGBtoGray getRandomRgbToGray() {
        if (randomRgbToGrayBuilder_ == null) {
          if (preprocessingStepCase_ == 5) {
            return (object_detection.protos.Preprocessor.RandomRGBtoGray) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomRGBtoGray.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 5) {
            return randomRgbToGrayBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomRGBtoGray.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomRGBtoGray random_rgb_to_gray = 5;</code>
       */
      public Builder setRandomRgbToGray(object_detection.protos.Preprocessor.RandomRGBtoGray value) {
        if (randomRgbToGrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomRgbToGrayBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 5;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomRGBtoGray random_rgb_to_gray = 5;</code>
       */
      public Builder setRandomRgbToGray(
          object_detection.protos.Preprocessor.RandomRGBtoGray.Builder builderForValue) {
        if (randomRgbToGrayBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomRgbToGrayBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 5;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomRGBtoGray random_rgb_to_gray = 5;</code>
       */
      public Builder mergeRandomRgbToGray(object_detection.protos.Preprocessor.RandomRGBtoGray value) {
        if (randomRgbToGrayBuilder_ == null) {
          if (preprocessingStepCase_ == 5 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomRGBtoGray.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomRGBtoGray.newBuilder((object_detection.protos.Preprocessor.RandomRGBtoGray) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 5) {
            randomRgbToGrayBuilder_.mergeFrom(value);
          }
          randomRgbToGrayBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 5;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomRGBtoGray random_rgb_to_gray = 5;</code>
       */
      public Builder clearRandomRgbToGray() {
        if (randomRgbToGrayBuilder_ == null) {
          if (preprocessingStepCase_ == 5) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 5) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomRgbToGrayBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomRGBtoGray random_rgb_to_gray = 5;</code>
       */
      public object_detection.protos.Preprocessor.RandomRGBtoGray.Builder getRandomRgbToGrayBuilder() {
        return getRandomRgbToGrayFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomRGBtoGray random_rgb_to_gray = 5;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomRGBtoGrayOrBuilder getRandomRgbToGrayOrBuilder() {
        if ((preprocessingStepCase_ == 5) && (randomRgbToGrayBuilder_ != null)) {
          return randomRgbToGrayBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 5) {
            return (object_detection.protos.Preprocessor.RandomRGBtoGray) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomRGBtoGray.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomRGBtoGray random_rgb_to_gray = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomRGBtoGray, object_detection.protos.Preprocessor.RandomRGBtoGray.Builder, object_detection.protos.Preprocessor.RandomRGBtoGrayOrBuilder>
          getRandomRgbToGrayFieldBuilder() {
        if (randomRgbToGrayBuilder_ == null) {
          if (!(preprocessingStepCase_ == 5)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomRGBtoGray.getDefaultInstance();
          }
          randomRgbToGrayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomRGBtoGray, object_detection.protos.Preprocessor.RandomRGBtoGray.Builder, object_detection.protos.Preprocessor.RandomRGBtoGrayOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomRGBtoGray) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 5;
        onChanged();;
        return randomRgbToGrayBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomAdjustBrightness, object_detection.protos.Preprocessor.RandomAdjustBrightness.Builder, object_detection.protos.Preprocessor.RandomAdjustBrightnessOrBuilder> randomAdjustBrightnessBuilder_;
      /**
       * <code>.object_detection.protos.RandomAdjustBrightness random_adjust_brightness = 6;</code>
       * @return Whether the randomAdjustBrightness field is set.
       */
      @java.lang.Override
      public boolean hasRandomAdjustBrightness() {
        return preprocessingStepCase_ == 6;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustBrightness random_adjust_brightness = 6;</code>
       * @return The randomAdjustBrightness.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustBrightness getRandomAdjustBrightness() {
        if (randomAdjustBrightnessBuilder_ == null) {
          if (preprocessingStepCase_ == 6) {
            return (object_detection.protos.Preprocessor.RandomAdjustBrightness) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomAdjustBrightness.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 6) {
            return randomAdjustBrightnessBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomAdjustBrightness.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomAdjustBrightness random_adjust_brightness = 6;</code>
       */
      public Builder setRandomAdjustBrightness(object_detection.protos.Preprocessor.RandomAdjustBrightness value) {
        if (randomAdjustBrightnessBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomAdjustBrightnessBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 6;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustBrightness random_adjust_brightness = 6;</code>
       */
      public Builder setRandomAdjustBrightness(
          object_detection.protos.Preprocessor.RandomAdjustBrightness.Builder builderForValue) {
        if (randomAdjustBrightnessBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomAdjustBrightnessBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 6;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustBrightness random_adjust_brightness = 6;</code>
       */
      public Builder mergeRandomAdjustBrightness(object_detection.protos.Preprocessor.RandomAdjustBrightness value) {
        if (randomAdjustBrightnessBuilder_ == null) {
          if (preprocessingStepCase_ == 6 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomAdjustBrightness.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomAdjustBrightness.newBuilder((object_detection.protos.Preprocessor.RandomAdjustBrightness) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 6) {
            randomAdjustBrightnessBuilder_.mergeFrom(value);
          }
          randomAdjustBrightnessBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 6;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustBrightness random_adjust_brightness = 6;</code>
       */
      public Builder clearRandomAdjustBrightness() {
        if (randomAdjustBrightnessBuilder_ == null) {
          if (preprocessingStepCase_ == 6) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 6) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomAdjustBrightnessBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustBrightness random_adjust_brightness = 6;</code>
       */
      public object_detection.protos.Preprocessor.RandomAdjustBrightness.Builder getRandomAdjustBrightnessBuilder() {
        return getRandomAdjustBrightnessFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomAdjustBrightness random_adjust_brightness = 6;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustBrightnessOrBuilder getRandomAdjustBrightnessOrBuilder() {
        if ((preprocessingStepCase_ == 6) && (randomAdjustBrightnessBuilder_ != null)) {
          return randomAdjustBrightnessBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 6) {
            return (object_detection.protos.Preprocessor.RandomAdjustBrightness) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomAdjustBrightness.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomAdjustBrightness random_adjust_brightness = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomAdjustBrightness, object_detection.protos.Preprocessor.RandomAdjustBrightness.Builder, object_detection.protos.Preprocessor.RandomAdjustBrightnessOrBuilder>
          getRandomAdjustBrightnessFieldBuilder() {
        if (randomAdjustBrightnessBuilder_ == null) {
          if (!(preprocessingStepCase_ == 6)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomAdjustBrightness.getDefaultInstance();
          }
          randomAdjustBrightnessBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomAdjustBrightness, object_detection.protos.Preprocessor.RandomAdjustBrightness.Builder, object_detection.protos.Preprocessor.RandomAdjustBrightnessOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomAdjustBrightness) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 6;
        onChanged();;
        return randomAdjustBrightnessBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomAdjustContrast, object_detection.protos.Preprocessor.RandomAdjustContrast.Builder, object_detection.protos.Preprocessor.RandomAdjustContrastOrBuilder> randomAdjustContrastBuilder_;
      /**
       * <code>.object_detection.protos.RandomAdjustContrast random_adjust_contrast = 7;</code>
       * @return Whether the randomAdjustContrast field is set.
       */
      @java.lang.Override
      public boolean hasRandomAdjustContrast() {
        return preprocessingStepCase_ == 7;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustContrast random_adjust_contrast = 7;</code>
       * @return The randomAdjustContrast.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustContrast getRandomAdjustContrast() {
        if (randomAdjustContrastBuilder_ == null) {
          if (preprocessingStepCase_ == 7) {
            return (object_detection.protos.Preprocessor.RandomAdjustContrast) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomAdjustContrast.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 7) {
            return randomAdjustContrastBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomAdjustContrast.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomAdjustContrast random_adjust_contrast = 7;</code>
       */
      public Builder setRandomAdjustContrast(object_detection.protos.Preprocessor.RandomAdjustContrast value) {
        if (randomAdjustContrastBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomAdjustContrastBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 7;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustContrast random_adjust_contrast = 7;</code>
       */
      public Builder setRandomAdjustContrast(
          object_detection.protos.Preprocessor.RandomAdjustContrast.Builder builderForValue) {
        if (randomAdjustContrastBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomAdjustContrastBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 7;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustContrast random_adjust_contrast = 7;</code>
       */
      public Builder mergeRandomAdjustContrast(object_detection.protos.Preprocessor.RandomAdjustContrast value) {
        if (randomAdjustContrastBuilder_ == null) {
          if (preprocessingStepCase_ == 7 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomAdjustContrast.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomAdjustContrast.newBuilder((object_detection.protos.Preprocessor.RandomAdjustContrast) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 7) {
            randomAdjustContrastBuilder_.mergeFrom(value);
          }
          randomAdjustContrastBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 7;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustContrast random_adjust_contrast = 7;</code>
       */
      public Builder clearRandomAdjustContrast() {
        if (randomAdjustContrastBuilder_ == null) {
          if (preprocessingStepCase_ == 7) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 7) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomAdjustContrastBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustContrast random_adjust_contrast = 7;</code>
       */
      public object_detection.protos.Preprocessor.RandomAdjustContrast.Builder getRandomAdjustContrastBuilder() {
        return getRandomAdjustContrastFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomAdjustContrast random_adjust_contrast = 7;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustContrastOrBuilder getRandomAdjustContrastOrBuilder() {
        if ((preprocessingStepCase_ == 7) && (randomAdjustContrastBuilder_ != null)) {
          return randomAdjustContrastBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 7) {
            return (object_detection.protos.Preprocessor.RandomAdjustContrast) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomAdjustContrast.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomAdjustContrast random_adjust_contrast = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomAdjustContrast, object_detection.protos.Preprocessor.RandomAdjustContrast.Builder, object_detection.protos.Preprocessor.RandomAdjustContrastOrBuilder>
          getRandomAdjustContrastFieldBuilder() {
        if (randomAdjustContrastBuilder_ == null) {
          if (!(preprocessingStepCase_ == 7)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomAdjustContrast.getDefaultInstance();
          }
          randomAdjustContrastBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomAdjustContrast, object_detection.protos.Preprocessor.RandomAdjustContrast.Builder, object_detection.protos.Preprocessor.RandomAdjustContrastOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomAdjustContrast) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 7;
        onChanged();;
        return randomAdjustContrastBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomAdjustHue, object_detection.protos.Preprocessor.RandomAdjustHue.Builder, object_detection.protos.Preprocessor.RandomAdjustHueOrBuilder> randomAdjustHueBuilder_;
      /**
       * <code>.object_detection.protos.RandomAdjustHue random_adjust_hue = 8;</code>
       * @return Whether the randomAdjustHue field is set.
       */
      @java.lang.Override
      public boolean hasRandomAdjustHue() {
        return preprocessingStepCase_ == 8;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustHue random_adjust_hue = 8;</code>
       * @return The randomAdjustHue.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustHue getRandomAdjustHue() {
        if (randomAdjustHueBuilder_ == null) {
          if (preprocessingStepCase_ == 8) {
            return (object_detection.protos.Preprocessor.RandomAdjustHue) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomAdjustHue.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 8) {
            return randomAdjustHueBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomAdjustHue.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomAdjustHue random_adjust_hue = 8;</code>
       */
      public Builder setRandomAdjustHue(object_detection.protos.Preprocessor.RandomAdjustHue value) {
        if (randomAdjustHueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomAdjustHueBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 8;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustHue random_adjust_hue = 8;</code>
       */
      public Builder setRandomAdjustHue(
          object_detection.protos.Preprocessor.RandomAdjustHue.Builder builderForValue) {
        if (randomAdjustHueBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomAdjustHueBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 8;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustHue random_adjust_hue = 8;</code>
       */
      public Builder mergeRandomAdjustHue(object_detection.protos.Preprocessor.RandomAdjustHue value) {
        if (randomAdjustHueBuilder_ == null) {
          if (preprocessingStepCase_ == 8 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomAdjustHue.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomAdjustHue.newBuilder((object_detection.protos.Preprocessor.RandomAdjustHue) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 8) {
            randomAdjustHueBuilder_.mergeFrom(value);
          }
          randomAdjustHueBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 8;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustHue random_adjust_hue = 8;</code>
       */
      public Builder clearRandomAdjustHue() {
        if (randomAdjustHueBuilder_ == null) {
          if (preprocessingStepCase_ == 8) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 8) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomAdjustHueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustHue random_adjust_hue = 8;</code>
       */
      public object_detection.protos.Preprocessor.RandomAdjustHue.Builder getRandomAdjustHueBuilder() {
        return getRandomAdjustHueFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomAdjustHue random_adjust_hue = 8;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustHueOrBuilder getRandomAdjustHueOrBuilder() {
        if ((preprocessingStepCase_ == 8) && (randomAdjustHueBuilder_ != null)) {
          return randomAdjustHueBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 8) {
            return (object_detection.protos.Preprocessor.RandomAdjustHue) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomAdjustHue.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomAdjustHue random_adjust_hue = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomAdjustHue, object_detection.protos.Preprocessor.RandomAdjustHue.Builder, object_detection.protos.Preprocessor.RandomAdjustHueOrBuilder>
          getRandomAdjustHueFieldBuilder() {
        if (randomAdjustHueBuilder_ == null) {
          if (!(preprocessingStepCase_ == 8)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomAdjustHue.getDefaultInstance();
          }
          randomAdjustHueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomAdjustHue, object_detection.protos.Preprocessor.RandomAdjustHue.Builder, object_detection.protos.Preprocessor.RandomAdjustHueOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomAdjustHue) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 8;
        onChanged();;
        return randomAdjustHueBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomAdjustSaturation, object_detection.protos.Preprocessor.RandomAdjustSaturation.Builder, object_detection.protos.Preprocessor.RandomAdjustSaturationOrBuilder> randomAdjustSaturationBuilder_;
      /**
       * <code>.object_detection.protos.RandomAdjustSaturation random_adjust_saturation = 9;</code>
       * @return Whether the randomAdjustSaturation field is set.
       */
      @java.lang.Override
      public boolean hasRandomAdjustSaturation() {
        return preprocessingStepCase_ == 9;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustSaturation random_adjust_saturation = 9;</code>
       * @return The randomAdjustSaturation.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustSaturation getRandomAdjustSaturation() {
        if (randomAdjustSaturationBuilder_ == null) {
          if (preprocessingStepCase_ == 9) {
            return (object_detection.protos.Preprocessor.RandomAdjustSaturation) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomAdjustSaturation.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 9) {
            return randomAdjustSaturationBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomAdjustSaturation.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomAdjustSaturation random_adjust_saturation = 9;</code>
       */
      public Builder setRandomAdjustSaturation(object_detection.protos.Preprocessor.RandomAdjustSaturation value) {
        if (randomAdjustSaturationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomAdjustSaturationBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 9;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustSaturation random_adjust_saturation = 9;</code>
       */
      public Builder setRandomAdjustSaturation(
          object_detection.protos.Preprocessor.RandomAdjustSaturation.Builder builderForValue) {
        if (randomAdjustSaturationBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomAdjustSaturationBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 9;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustSaturation random_adjust_saturation = 9;</code>
       */
      public Builder mergeRandomAdjustSaturation(object_detection.protos.Preprocessor.RandomAdjustSaturation value) {
        if (randomAdjustSaturationBuilder_ == null) {
          if (preprocessingStepCase_ == 9 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomAdjustSaturation.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomAdjustSaturation.newBuilder((object_detection.protos.Preprocessor.RandomAdjustSaturation) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 9) {
            randomAdjustSaturationBuilder_.mergeFrom(value);
          }
          randomAdjustSaturationBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 9;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustSaturation random_adjust_saturation = 9;</code>
       */
      public Builder clearRandomAdjustSaturation() {
        if (randomAdjustSaturationBuilder_ == null) {
          if (preprocessingStepCase_ == 9) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 9) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomAdjustSaturationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAdjustSaturation random_adjust_saturation = 9;</code>
       */
      public object_detection.protos.Preprocessor.RandomAdjustSaturation.Builder getRandomAdjustSaturationBuilder() {
        return getRandomAdjustSaturationFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomAdjustSaturation random_adjust_saturation = 9;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustSaturationOrBuilder getRandomAdjustSaturationOrBuilder() {
        if ((preprocessingStepCase_ == 9) && (randomAdjustSaturationBuilder_ != null)) {
          return randomAdjustSaturationBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 9) {
            return (object_detection.protos.Preprocessor.RandomAdjustSaturation) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomAdjustSaturation.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomAdjustSaturation random_adjust_saturation = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomAdjustSaturation, object_detection.protos.Preprocessor.RandomAdjustSaturation.Builder, object_detection.protos.Preprocessor.RandomAdjustSaturationOrBuilder>
          getRandomAdjustSaturationFieldBuilder() {
        if (randomAdjustSaturationBuilder_ == null) {
          if (!(preprocessingStepCase_ == 9)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomAdjustSaturation.getDefaultInstance();
          }
          randomAdjustSaturationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomAdjustSaturation, object_detection.protos.Preprocessor.RandomAdjustSaturation.Builder, object_detection.protos.Preprocessor.RandomAdjustSaturationOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomAdjustSaturation) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 9;
        onChanged();;
        return randomAdjustSaturationBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomDistortColor, object_detection.protos.Preprocessor.RandomDistortColor.Builder, object_detection.protos.Preprocessor.RandomDistortColorOrBuilder> randomDistortColorBuilder_;
      /**
       * <code>.object_detection.protos.RandomDistortColor random_distort_color = 10;</code>
       * @return Whether the randomDistortColor field is set.
       */
      @java.lang.Override
      public boolean hasRandomDistortColor() {
        return preprocessingStepCase_ == 10;
      }
      /**
       * <code>.object_detection.protos.RandomDistortColor random_distort_color = 10;</code>
       * @return The randomDistortColor.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomDistortColor getRandomDistortColor() {
        if (randomDistortColorBuilder_ == null) {
          if (preprocessingStepCase_ == 10) {
            return (object_detection.protos.Preprocessor.RandomDistortColor) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomDistortColor.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 10) {
            return randomDistortColorBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomDistortColor.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomDistortColor random_distort_color = 10;</code>
       */
      public Builder setRandomDistortColor(object_detection.protos.Preprocessor.RandomDistortColor value) {
        if (randomDistortColorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomDistortColorBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 10;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomDistortColor random_distort_color = 10;</code>
       */
      public Builder setRandomDistortColor(
          object_detection.protos.Preprocessor.RandomDistortColor.Builder builderForValue) {
        if (randomDistortColorBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomDistortColorBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 10;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomDistortColor random_distort_color = 10;</code>
       */
      public Builder mergeRandomDistortColor(object_detection.protos.Preprocessor.RandomDistortColor value) {
        if (randomDistortColorBuilder_ == null) {
          if (preprocessingStepCase_ == 10 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomDistortColor.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomDistortColor.newBuilder((object_detection.protos.Preprocessor.RandomDistortColor) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 10) {
            randomDistortColorBuilder_.mergeFrom(value);
          }
          randomDistortColorBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 10;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomDistortColor random_distort_color = 10;</code>
       */
      public Builder clearRandomDistortColor() {
        if (randomDistortColorBuilder_ == null) {
          if (preprocessingStepCase_ == 10) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 10) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomDistortColorBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomDistortColor random_distort_color = 10;</code>
       */
      public object_detection.protos.Preprocessor.RandomDistortColor.Builder getRandomDistortColorBuilder() {
        return getRandomDistortColorFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomDistortColor random_distort_color = 10;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomDistortColorOrBuilder getRandomDistortColorOrBuilder() {
        if ((preprocessingStepCase_ == 10) && (randomDistortColorBuilder_ != null)) {
          return randomDistortColorBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 10) {
            return (object_detection.protos.Preprocessor.RandomDistortColor) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomDistortColor.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomDistortColor random_distort_color = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomDistortColor, object_detection.protos.Preprocessor.RandomDistortColor.Builder, object_detection.protos.Preprocessor.RandomDistortColorOrBuilder>
          getRandomDistortColorFieldBuilder() {
        if (randomDistortColorBuilder_ == null) {
          if (!(preprocessingStepCase_ == 10)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomDistortColor.getDefaultInstance();
          }
          randomDistortColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomDistortColor, object_detection.protos.Preprocessor.RandomDistortColor.Builder, object_detection.protos.Preprocessor.RandomDistortColorOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomDistortColor) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 10;
        onChanged();;
        return randomDistortColorBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomJitterBoxes, object_detection.protos.Preprocessor.RandomJitterBoxes.Builder, object_detection.protos.Preprocessor.RandomJitterBoxesOrBuilder> randomJitterBoxesBuilder_;
      /**
       * <code>.object_detection.protos.RandomJitterBoxes random_jitter_boxes = 11;</code>
       * @return Whether the randomJitterBoxes field is set.
       */
      @java.lang.Override
      public boolean hasRandomJitterBoxes() {
        return preprocessingStepCase_ == 11;
      }
      /**
       * <code>.object_detection.protos.RandomJitterBoxes random_jitter_boxes = 11;</code>
       * @return The randomJitterBoxes.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomJitterBoxes getRandomJitterBoxes() {
        if (randomJitterBoxesBuilder_ == null) {
          if (preprocessingStepCase_ == 11) {
            return (object_detection.protos.Preprocessor.RandomJitterBoxes) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomJitterBoxes.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 11) {
            return randomJitterBoxesBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomJitterBoxes.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomJitterBoxes random_jitter_boxes = 11;</code>
       */
      public Builder setRandomJitterBoxes(object_detection.protos.Preprocessor.RandomJitterBoxes value) {
        if (randomJitterBoxesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomJitterBoxesBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 11;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomJitterBoxes random_jitter_boxes = 11;</code>
       */
      public Builder setRandomJitterBoxes(
          object_detection.protos.Preprocessor.RandomJitterBoxes.Builder builderForValue) {
        if (randomJitterBoxesBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomJitterBoxesBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 11;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomJitterBoxes random_jitter_boxes = 11;</code>
       */
      public Builder mergeRandomJitterBoxes(object_detection.protos.Preprocessor.RandomJitterBoxes value) {
        if (randomJitterBoxesBuilder_ == null) {
          if (preprocessingStepCase_ == 11 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomJitterBoxes.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomJitterBoxes.newBuilder((object_detection.protos.Preprocessor.RandomJitterBoxes) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 11) {
            randomJitterBoxesBuilder_.mergeFrom(value);
          }
          randomJitterBoxesBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 11;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomJitterBoxes random_jitter_boxes = 11;</code>
       */
      public Builder clearRandomJitterBoxes() {
        if (randomJitterBoxesBuilder_ == null) {
          if (preprocessingStepCase_ == 11) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 11) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomJitterBoxesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomJitterBoxes random_jitter_boxes = 11;</code>
       */
      public object_detection.protos.Preprocessor.RandomJitterBoxes.Builder getRandomJitterBoxesBuilder() {
        return getRandomJitterBoxesFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomJitterBoxes random_jitter_boxes = 11;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomJitterBoxesOrBuilder getRandomJitterBoxesOrBuilder() {
        if ((preprocessingStepCase_ == 11) && (randomJitterBoxesBuilder_ != null)) {
          return randomJitterBoxesBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 11) {
            return (object_detection.protos.Preprocessor.RandomJitterBoxes) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomJitterBoxes.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomJitterBoxes random_jitter_boxes = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomJitterBoxes, object_detection.protos.Preprocessor.RandomJitterBoxes.Builder, object_detection.protos.Preprocessor.RandomJitterBoxesOrBuilder>
          getRandomJitterBoxesFieldBuilder() {
        if (randomJitterBoxesBuilder_ == null) {
          if (!(preprocessingStepCase_ == 11)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomJitterBoxes.getDefaultInstance();
          }
          randomJitterBoxesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomJitterBoxes, object_detection.protos.Preprocessor.RandomJitterBoxes.Builder, object_detection.protos.Preprocessor.RandomJitterBoxesOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomJitterBoxes) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 11;
        onChanged();;
        return randomJitterBoxesBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomCropImage, object_detection.protos.Preprocessor.RandomCropImage.Builder, object_detection.protos.Preprocessor.RandomCropImageOrBuilder> randomCropImageBuilder_;
      /**
       * <code>.object_detection.protos.RandomCropImage random_crop_image = 12;</code>
       * @return Whether the randomCropImage field is set.
       */
      @java.lang.Override
      public boolean hasRandomCropImage() {
        return preprocessingStepCase_ == 12;
      }
      /**
       * <code>.object_detection.protos.RandomCropImage random_crop_image = 12;</code>
       * @return The randomCropImage.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomCropImage getRandomCropImage() {
        if (randomCropImageBuilder_ == null) {
          if (preprocessingStepCase_ == 12) {
            return (object_detection.protos.Preprocessor.RandomCropImage) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomCropImage.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 12) {
            return randomCropImageBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomCropImage.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomCropImage random_crop_image = 12;</code>
       */
      public Builder setRandomCropImage(object_detection.protos.Preprocessor.RandomCropImage value) {
        if (randomCropImageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomCropImageBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 12;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomCropImage random_crop_image = 12;</code>
       */
      public Builder setRandomCropImage(
          object_detection.protos.Preprocessor.RandomCropImage.Builder builderForValue) {
        if (randomCropImageBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomCropImageBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 12;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomCropImage random_crop_image = 12;</code>
       */
      public Builder mergeRandomCropImage(object_detection.protos.Preprocessor.RandomCropImage value) {
        if (randomCropImageBuilder_ == null) {
          if (preprocessingStepCase_ == 12 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomCropImage.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomCropImage.newBuilder((object_detection.protos.Preprocessor.RandomCropImage) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 12) {
            randomCropImageBuilder_.mergeFrom(value);
          }
          randomCropImageBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 12;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomCropImage random_crop_image = 12;</code>
       */
      public Builder clearRandomCropImage() {
        if (randomCropImageBuilder_ == null) {
          if (preprocessingStepCase_ == 12) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 12) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomCropImageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomCropImage random_crop_image = 12;</code>
       */
      public object_detection.protos.Preprocessor.RandomCropImage.Builder getRandomCropImageBuilder() {
        return getRandomCropImageFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomCropImage random_crop_image = 12;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomCropImageOrBuilder getRandomCropImageOrBuilder() {
        if ((preprocessingStepCase_ == 12) && (randomCropImageBuilder_ != null)) {
          return randomCropImageBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 12) {
            return (object_detection.protos.Preprocessor.RandomCropImage) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomCropImage.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomCropImage random_crop_image = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomCropImage, object_detection.protos.Preprocessor.RandomCropImage.Builder, object_detection.protos.Preprocessor.RandomCropImageOrBuilder>
          getRandomCropImageFieldBuilder() {
        if (randomCropImageBuilder_ == null) {
          if (!(preprocessingStepCase_ == 12)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomCropImage.getDefaultInstance();
          }
          randomCropImageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomCropImage, object_detection.protos.Preprocessor.RandomCropImage.Builder, object_detection.protos.Preprocessor.RandomCropImageOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomCropImage) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 12;
        onChanged();;
        return randomCropImageBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomPadImage, object_detection.protos.Preprocessor.RandomPadImage.Builder, object_detection.protos.Preprocessor.RandomPadImageOrBuilder> randomPadImageBuilder_;
      /**
       * <code>.object_detection.protos.RandomPadImage random_pad_image = 13;</code>
       * @return Whether the randomPadImage field is set.
       */
      @java.lang.Override
      public boolean hasRandomPadImage() {
        return preprocessingStepCase_ == 13;
      }
      /**
       * <code>.object_detection.protos.RandomPadImage random_pad_image = 13;</code>
       * @return The randomPadImage.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomPadImage getRandomPadImage() {
        if (randomPadImageBuilder_ == null) {
          if (preprocessingStepCase_ == 13) {
            return (object_detection.protos.Preprocessor.RandomPadImage) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomPadImage.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 13) {
            return randomPadImageBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomPadImage.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomPadImage random_pad_image = 13;</code>
       */
      public Builder setRandomPadImage(object_detection.protos.Preprocessor.RandomPadImage value) {
        if (randomPadImageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomPadImageBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 13;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomPadImage random_pad_image = 13;</code>
       */
      public Builder setRandomPadImage(
          object_detection.protos.Preprocessor.RandomPadImage.Builder builderForValue) {
        if (randomPadImageBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomPadImageBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 13;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomPadImage random_pad_image = 13;</code>
       */
      public Builder mergeRandomPadImage(object_detection.protos.Preprocessor.RandomPadImage value) {
        if (randomPadImageBuilder_ == null) {
          if (preprocessingStepCase_ == 13 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomPadImage.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomPadImage.newBuilder((object_detection.protos.Preprocessor.RandomPadImage) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 13) {
            randomPadImageBuilder_.mergeFrom(value);
          }
          randomPadImageBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 13;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomPadImage random_pad_image = 13;</code>
       */
      public Builder clearRandomPadImage() {
        if (randomPadImageBuilder_ == null) {
          if (preprocessingStepCase_ == 13) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 13) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomPadImageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomPadImage random_pad_image = 13;</code>
       */
      public object_detection.protos.Preprocessor.RandomPadImage.Builder getRandomPadImageBuilder() {
        return getRandomPadImageFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomPadImage random_pad_image = 13;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomPadImageOrBuilder getRandomPadImageOrBuilder() {
        if ((preprocessingStepCase_ == 13) && (randomPadImageBuilder_ != null)) {
          return randomPadImageBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 13) {
            return (object_detection.protos.Preprocessor.RandomPadImage) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomPadImage.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomPadImage random_pad_image = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomPadImage, object_detection.protos.Preprocessor.RandomPadImage.Builder, object_detection.protos.Preprocessor.RandomPadImageOrBuilder>
          getRandomPadImageFieldBuilder() {
        if (randomPadImageBuilder_ == null) {
          if (!(preprocessingStepCase_ == 13)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomPadImage.getDefaultInstance();
          }
          randomPadImageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomPadImage, object_detection.protos.Preprocessor.RandomPadImage.Builder, object_detection.protos.Preprocessor.RandomPadImageOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomPadImage) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 13;
        onChanged();;
        return randomPadImageBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomCropPadImage, object_detection.protos.Preprocessor.RandomCropPadImage.Builder, object_detection.protos.Preprocessor.RandomCropPadImageOrBuilder> randomCropPadImageBuilder_;
      /**
       * <code>.object_detection.protos.RandomCropPadImage random_crop_pad_image = 14;</code>
       * @return Whether the randomCropPadImage field is set.
       */
      @java.lang.Override
      public boolean hasRandomCropPadImage() {
        return preprocessingStepCase_ == 14;
      }
      /**
       * <code>.object_detection.protos.RandomCropPadImage random_crop_pad_image = 14;</code>
       * @return The randomCropPadImage.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomCropPadImage getRandomCropPadImage() {
        if (randomCropPadImageBuilder_ == null) {
          if (preprocessingStepCase_ == 14) {
            return (object_detection.protos.Preprocessor.RandomCropPadImage) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomCropPadImage.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 14) {
            return randomCropPadImageBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomCropPadImage.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomCropPadImage random_crop_pad_image = 14;</code>
       */
      public Builder setRandomCropPadImage(object_detection.protos.Preprocessor.RandomCropPadImage value) {
        if (randomCropPadImageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomCropPadImageBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 14;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomCropPadImage random_crop_pad_image = 14;</code>
       */
      public Builder setRandomCropPadImage(
          object_detection.protos.Preprocessor.RandomCropPadImage.Builder builderForValue) {
        if (randomCropPadImageBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomCropPadImageBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 14;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomCropPadImage random_crop_pad_image = 14;</code>
       */
      public Builder mergeRandomCropPadImage(object_detection.protos.Preprocessor.RandomCropPadImage value) {
        if (randomCropPadImageBuilder_ == null) {
          if (preprocessingStepCase_ == 14 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomCropPadImage.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomCropPadImage.newBuilder((object_detection.protos.Preprocessor.RandomCropPadImage) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 14) {
            randomCropPadImageBuilder_.mergeFrom(value);
          }
          randomCropPadImageBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 14;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomCropPadImage random_crop_pad_image = 14;</code>
       */
      public Builder clearRandomCropPadImage() {
        if (randomCropPadImageBuilder_ == null) {
          if (preprocessingStepCase_ == 14) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 14) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomCropPadImageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomCropPadImage random_crop_pad_image = 14;</code>
       */
      public object_detection.protos.Preprocessor.RandomCropPadImage.Builder getRandomCropPadImageBuilder() {
        return getRandomCropPadImageFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomCropPadImage random_crop_pad_image = 14;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomCropPadImageOrBuilder getRandomCropPadImageOrBuilder() {
        if ((preprocessingStepCase_ == 14) && (randomCropPadImageBuilder_ != null)) {
          return randomCropPadImageBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 14) {
            return (object_detection.protos.Preprocessor.RandomCropPadImage) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomCropPadImage.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomCropPadImage random_crop_pad_image = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomCropPadImage, object_detection.protos.Preprocessor.RandomCropPadImage.Builder, object_detection.protos.Preprocessor.RandomCropPadImageOrBuilder>
          getRandomCropPadImageFieldBuilder() {
        if (randomCropPadImageBuilder_ == null) {
          if (!(preprocessingStepCase_ == 14)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomCropPadImage.getDefaultInstance();
          }
          randomCropPadImageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomCropPadImage, object_detection.protos.Preprocessor.RandomCropPadImage.Builder, object_detection.protos.Preprocessor.RandomCropPadImageOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomCropPadImage) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 14;
        onChanged();;
        return randomCropPadImageBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomCropToAspectRatio, object_detection.protos.Preprocessor.RandomCropToAspectRatio.Builder, object_detection.protos.Preprocessor.RandomCropToAspectRatioOrBuilder> randomCropToAspectRatioBuilder_;
      /**
       * <code>.object_detection.protos.RandomCropToAspectRatio random_crop_to_aspect_ratio = 15;</code>
       * @return Whether the randomCropToAspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasRandomCropToAspectRatio() {
        return preprocessingStepCase_ == 15;
      }
      /**
       * <code>.object_detection.protos.RandomCropToAspectRatio random_crop_to_aspect_ratio = 15;</code>
       * @return The randomCropToAspectRatio.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomCropToAspectRatio getRandomCropToAspectRatio() {
        if (randomCropToAspectRatioBuilder_ == null) {
          if (preprocessingStepCase_ == 15) {
            return (object_detection.protos.Preprocessor.RandomCropToAspectRatio) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomCropToAspectRatio.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 15) {
            return randomCropToAspectRatioBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomCropToAspectRatio.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomCropToAspectRatio random_crop_to_aspect_ratio = 15;</code>
       */
      public Builder setRandomCropToAspectRatio(object_detection.protos.Preprocessor.RandomCropToAspectRatio value) {
        if (randomCropToAspectRatioBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomCropToAspectRatioBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 15;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomCropToAspectRatio random_crop_to_aspect_ratio = 15;</code>
       */
      public Builder setRandomCropToAspectRatio(
          object_detection.protos.Preprocessor.RandomCropToAspectRatio.Builder builderForValue) {
        if (randomCropToAspectRatioBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomCropToAspectRatioBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 15;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomCropToAspectRatio random_crop_to_aspect_ratio = 15;</code>
       */
      public Builder mergeRandomCropToAspectRatio(object_detection.protos.Preprocessor.RandomCropToAspectRatio value) {
        if (randomCropToAspectRatioBuilder_ == null) {
          if (preprocessingStepCase_ == 15 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomCropToAspectRatio.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomCropToAspectRatio.newBuilder((object_detection.protos.Preprocessor.RandomCropToAspectRatio) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 15) {
            randomCropToAspectRatioBuilder_.mergeFrom(value);
          }
          randomCropToAspectRatioBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 15;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomCropToAspectRatio random_crop_to_aspect_ratio = 15;</code>
       */
      public Builder clearRandomCropToAspectRatio() {
        if (randomCropToAspectRatioBuilder_ == null) {
          if (preprocessingStepCase_ == 15) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 15) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomCropToAspectRatioBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomCropToAspectRatio random_crop_to_aspect_ratio = 15;</code>
       */
      public object_detection.protos.Preprocessor.RandomCropToAspectRatio.Builder getRandomCropToAspectRatioBuilder() {
        return getRandomCropToAspectRatioFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomCropToAspectRatio random_crop_to_aspect_ratio = 15;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomCropToAspectRatioOrBuilder getRandomCropToAspectRatioOrBuilder() {
        if ((preprocessingStepCase_ == 15) && (randomCropToAspectRatioBuilder_ != null)) {
          return randomCropToAspectRatioBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 15) {
            return (object_detection.protos.Preprocessor.RandomCropToAspectRatio) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomCropToAspectRatio.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomCropToAspectRatio random_crop_to_aspect_ratio = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomCropToAspectRatio, object_detection.protos.Preprocessor.RandomCropToAspectRatio.Builder, object_detection.protos.Preprocessor.RandomCropToAspectRatioOrBuilder>
          getRandomCropToAspectRatioFieldBuilder() {
        if (randomCropToAspectRatioBuilder_ == null) {
          if (!(preprocessingStepCase_ == 15)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomCropToAspectRatio.getDefaultInstance();
          }
          randomCropToAspectRatioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomCropToAspectRatio, object_detection.protos.Preprocessor.RandomCropToAspectRatio.Builder, object_detection.protos.Preprocessor.RandomCropToAspectRatioOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomCropToAspectRatio) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 15;
        onChanged();;
        return randomCropToAspectRatioBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomBlackPatches, object_detection.protos.Preprocessor.RandomBlackPatches.Builder, object_detection.protos.Preprocessor.RandomBlackPatchesOrBuilder> randomBlackPatchesBuilder_;
      /**
       * <code>.object_detection.protos.RandomBlackPatches random_black_patches = 16;</code>
       * @return Whether the randomBlackPatches field is set.
       */
      @java.lang.Override
      public boolean hasRandomBlackPatches() {
        return preprocessingStepCase_ == 16;
      }
      /**
       * <code>.object_detection.protos.RandomBlackPatches random_black_patches = 16;</code>
       * @return The randomBlackPatches.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomBlackPatches getRandomBlackPatches() {
        if (randomBlackPatchesBuilder_ == null) {
          if (preprocessingStepCase_ == 16) {
            return (object_detection.protos.Preprocessor.RandomBlackPatches) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomBlackPatches.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 16) {
            return randomBlackPatchesBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomBlackPatches.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomBlackPatches random_black_patches = 16;</code>
       */
      public Builder setRandomBlackPatches(object_detection.protos.Preprocessor.RandomBlackPatches value) {
        if (randomBlackPatchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomBlackPatchesBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 16;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomBlackPatches random_black_patches = 16;</code>
       */
      public Builder setRandomBlackPatches(
          object_detection.protos.Preprocessor.RandomBlackPatches.Builder builderForValue) {
        if (randomBlackPatchesBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomBlackPatchesBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 16;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomBlackPatches random_black_patches = 16;</code>
       */
      public Builder mergeRandomBlackPatches(object_detection.protos.Preprocessor.RandomBlackPatches value) {
        if (randomBlackPatchesBuilder_ == null) {
          if (preprocessingStepCase_ == 16 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomBlackPatches.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomBlackPatches.newBuilder((object_detection.protos.Preprocessor.RandomBlackPatches) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 16) {
            randomBlackPatchesBuilder_.mergeFrom(value);
          }
          randomBlackPatchesBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 16;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomBlackPatches random_black_patches = 16;</code>
       */
      public Builder clearRandomBlackPatches() {
        if (randomBlackPatchesBuilder_ == null) {
          if (preprocessingStepCase_ == 16) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 16) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomBlackPatchesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomBlackPatches random_black_patches = 16;</code>
       */
      public object_detection.protos.Preprocessor.RandomBlackPatches.Builder getRandomBlackPatchesBuilder() {
        return getRandomBlackPatchesFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomBlackPatches random_black_patches = 16;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomBlackPatchesOrBuilder getRandomBlackPatchesOrBuilder() {
        if ((preprocessingStepCase_ == 16) && (randomBlackPatchesBuilder_ != null)) {
          return randomBlackPatchesBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 16) {
            return (object_detection.protos.Preprocessor.RandomBlackPatches) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomBlackPatches.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomBlackPatches random_black_patches = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomBlackPatches, object_detection.protos.Preprocessor.RandomBlackPatches.Builder, object_detection.protos.Preprocessor.RandomBlackPatchesOrBuilder>
          getRandomBlackPatchesFieldBuilder() {
        if (randomBlackPatchesBuilder_ == null) {
          if (!(preprocessingStepCase_ == 16)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomBlackPatches.getDefaultInstance();
          }
          randomBlackPatchesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomBlackPatches, object_detection.protos.Preprocessor.RandomBlackPatches.Builder, object_detection.protos.Preprocessor.RandomBlackPatchesOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomBlackPatches) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 16;
        onChanged();;
        return randomBlackPatchesBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomResizeMethod, object_detection.protos.Preprocessor.RandomResizeMethod.Builder, object_detection.protos.Preprocessor.RandomResizeMethodOrBuilder> randomResizeMethodBuilder_;
      /**
       * <code>.object_detection.protos.RandomResizeMethod random_resize_method = 17;</code>
       * @return Whether the randomResizeMethod field is set.
       */
      @java.lang.Override
      public boolean hasRandomResizeMethod() {
        return preprocessingStepCase_ == 17;
      }
      /**
       * <code>.object_detection.protos.RandomResizeMethod random_resize_method = 17;</code>
       * @return The randomResizeMethod.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomResizeMethod getRandomResizeMethod() {
        if (randomResizeMethodBuilder_ == null) {
          if (preprocessingStepCase_ == 17) {
            return (object_detection.protos.Preprocessor.RandomResizeMethod) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomResizeMethod.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 17) {
            return randomResizeMethodBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomResizeMethod.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomResizeMethod random_resize_method = 17;</code>
       */
      public Builder setRandomResizeMethod(object_detection.protos.Preprocessor.RandomResizeMethod value) {
        if (randomResizeMethodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomResizeMethodBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 17;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomResizeMethod random_resize_method = 17;</code>
       */
      public Builder setRandomResizeMethod(
          object_detection.protos.Preprocessor.RandomResizeMethod.Builder builderForValue) {
        if (randomResizeMethodBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomResizeMethodBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 17;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomResizeMethod random_resize_method = 17;</code>
       */
      public Builder mergeRandomResizeMethod(object_detection.protos.Preprocessor.RandomResizeMethod value) {
        if (randomResizeMethodBuilder_ == null) {
          if (preprocessingStepCase_ == 17 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomResizeMethod.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomResizeMethod.newBuilder((object_detection.protos.Preprocessor.RandomResizeMethod) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 17) {
            randomResizeMethodBuilder_.mergeFrom(value);
          }
          randomResizeMethodBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 17;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomResizeMethod random_resize_method = 17;</code>
       */
      public Builder clearRandomResizeMethod() {
        if (randomResizeMethodBuilder_ == null) {
          if (preprocessingStepCase_ == 17) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 17) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomResizeMethodBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomResizeMethod random_resize_method = 17;</code>
       */
      public object_detection.protos.Preprocessor.RandomResizeMethod.Builder getRandomResizeMethodBuilder() {
        return getRandomResizeMethodFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomResizeMethod random_resize_method = 17;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomResizeMethodOrBuilder getRandomResizeMethodOrBuilder() {
        if ((preprocessingStepCase_ == 17) && (randomResizeMethodBuilder_ != null)) {
          return randomResizeMethodBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 17) {
            return (object_detection.protos.Preprocessor.RandomResizeMethod) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomResizeMethod.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomResizeMethod random_resize_method = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomResizeMethod, object_detection.protos.Preprocessor.RandomResizeMethod.Builder, object_detection.protos.Preprocessor.RandomResizeMethodOrBuilder>
          getRandomResizeMethodFieldBuilder() {
        if (randomResizeMethodBuilder_ == null) {
          if (!(preprocessingStepCase_ == 17)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomResizeMethod.getDefaultInstance();
          }
          randomResizeMethodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomResizeMethod, object_detection.protos.Preprocessor.RandomResizeMethod.Builder, object_detection.protos.Preprocessor.RandomResizeMethodOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomResizeMethod) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 17;
        onChanged();;
        return randomResizeMethodBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates, object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.Builder, object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinatesOrBuilder> scaleBoxesToPixelCoordinatesBuilder_;
      /**
       * <code>.object_detection.protos.ScaleBoxesToPixelCoordinates scale_boxes_to_pixel_coordinates = 18;</code>
       * @return Whether the scaleBoxesToPixelCoordinates field is set.
       */
      @java.lang.Override
      public boolean hasScaleBoxesToPixelCoordinates() {
        return preprocessingStepCase_ == 18;
      }
      /**
       * <code>.object_detection.protos.ScaleBoxesToPixelCoordinates scale_boxes_to_pixel_coordinates = 18;</code>
       * @return The scaleBoxesToPixelCoordinates.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates getScaleBoxesToPixelCoordinates() {
        if (scaleBoxesToPixelCoordinatesBuilder_ == null) {
          if (preprocessingStepCase_ == 18) {
            return (object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 18) {
            return scaleBoxesToPixelCoordinatesBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.ScaleBoxesToPixelCoordinates scale_boxes_to_pixel_coordinates = 18;</code>
       */
      public Builder setScaleBoxesToPixelCoordinates(object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates value) {
        if (scaleBoxesToPixelCoordinatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          scaleBoxesToPixelCoordinatesBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 18;
        return this;
      }
      /**
       * <code>.object_detection.protos.ScaleBoxesToPixelCoordinates scale_boxes_to_pixel_coordinates = 18;</code>
       */
      public Builder setScaleBoxesToPixelCoordinates(
          object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.Builder builderForValue) {
        if (scaleBoxesToPixelCoordinatesBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          scaleBoxesToPixelCoordinatesBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 18;
        return this;
      }
      /**
       * <code>.object_detection.protos.ScaleBoxesToPixelCoordinates scale_boxes_to_pixel_coordinates = 18;</code>
       */
      public Builder mergeScaleBoxesToPixelCoordinates(object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates value) {
        if (scaleBoxesToPixelCoordinatesBuilder_ == null) {
          if (preprocessingStepCase_ == 18 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.newBuilder((object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 18) {
            scaleBoxesToPixelCoordinatesBuilder_.mergeFrom(value);
          }
          scaleBoxesToPixelCoordinatesBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 18;
        return this;
      }
      /**
       * <code>.object_detection.protos.ScaleBoxesToPixelCoordinates scale_boxes_to_pixel_coordinates = 18;</code>
       */
      public Builder clearScaleBoxesToPixelCoordinates() {
        if (scaleBoxesToPixelCoordinatesBuilder_ == null) {
          if (preprocessingStepCase_ == 18) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 18) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          scaleBoxesToPixelCoordinatesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.ScaleBoxesToPixelCoordinates scale_boxes_to_pixel_coordinates = 18;</code>
       */
      public object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.Builder getScaleBoxesToPixelCoordinatesBuilder() {
        return getScaleBoxesToPixelCoordinatesFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.ScaleBoxesToPixelCoordinates scale_boxes_to_pixel_coordinates = 18;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinatesOrBuilder getScaleBoxesToPixelCoordinatesOrBuilder() {
        if ((preprocessingStepCase_ == 18) && (scaleBoxesToPixelCoordinatesBuilder_ != null)) {
          return scaleBoxesToPixelCoordinatesBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 18) {
            return (object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.ScaleBoxesToPixelCoordinates scale_boxes_to_pixel_coordinates = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates, object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.Builder, object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinatesOrBuilder>
          getScaleBoxesToPixelCoordinatesFieldBuilder() {
        if (scaleBoxesToPixelCoordinatesBuilder_ == null) {
          if (!(preprocessingStepCase_ == 18)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.getDefaultInstance();
          }
          scaleBoxesToPixelCoordinatesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates, object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.Builder, object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinatesOrBuilder>(
                  (object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 18;
        onChanged();;
        return scaleBoxesToPixelCoordinatesBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.ResizeImage, object_detection.protos.Preprocessor.ResizeImage.Builder, object_detection.protos.Preprocessor.ResizeImageOrBuilder> resizeImageBuilder_;
      /**
       * <code>.object_detection.protos.ResizeImage resize_image = 19;</code>
       * @return Whether the resizeImage field is set.
       */
      @java.lang.Override
      public boolean hasResizeImage() {
        return preprocessingStepCase_ == 19;
      }
      /**
       * <code>.object_detection.protos.ResizeImage resize_image = 19;</code>
       * @return The resizeImage.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.ResizeImage getResizeImage() {
        if (resizeImageBuilder_ == null) {
          if (preprocessingStepCase_ == 19) {
            return (object_detection.protos.Preprocessor.ResizeImage) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.ResizeImage.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 19) {
            return resizeImageBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.ResizeImage.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.ResizeImage resize_image = 19;</code>
       */
      public Builder setResizeImage(object_detection.protos.Preprocessor.ResizeImage value) {
        if (resizeImageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          resizeImageBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 19;
        return this;
      }
      /**
       * <code>.object_detection.protos.ResizeImage resize_image = 19;</code>
       */
      public Builder setResizeImage(
          object_detection.protos.Preprocessor.ResizeImage.Builder builderForValue) {
        if (resizeImageBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          resizeImageBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 19;
        return this;
      }
      /**
       * <code>.object_detection.protos.ResizeImage resize_image = 19;</code>
       */
      public Builder mergeResizeImage(object_detection.protos.Preprocessor.ResizeImage value) {
        if (resizeImageBuilder_ == null) {
          if (preprocessingStepCase_ == 19 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.ResizeImage.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.ResizeImage.newBuilder((object_detection.protos.Preprocessor.ResizeImage) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 19) {
            resizeImageBuilder_.mergeFrom(value);
          }
          resizeImageBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 19;
        return this;
      }
      /**
       * <code>.object_detection.protos.ResizeImage resize_image = 19;</code>
       */
      public Builder clearResizeImage() {
        if (resizeImageBuilder_ == null) {
          if (preprocessingStepCase_ == 19) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 19) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          resizeImageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.ResizeImage resize_image = 19;</code>
       */
      public object_detection.protos.Preprocessor.ResizeImage.Builder getResizeImageBuilder() {
        return getResizeImageFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.ResizeImage resize_image = 19;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.ResizeImageOrBuilder getResizeImageOrBuilder() {
        if ((preprocessingStepCase_ == 19) && (resizeImageBuilder_ != null)) {
          return resizeImageBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 19) {
            return (object_detection.protos.Preprocessor.ResizeImage) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.ResizeImage.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.ResizeImage resize_image = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.ResizeImage, object_detection.protos.Preprocessor.ResizeImage.Builder, object_detection.protos.Preprocessor.ResizeImageOrBuilder>
          getResizeImageFieldBuilder() {
        if (resizeImageBuilder_ == null) {
          if (!(preprocessingStepCase_ == 19)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.ResizeImage.getDefaultInstance();
          }
          resizeImageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.ResizeImage, object_detection.protos.Preprocessor.ResizeImage.Builder, object_detection.protos.Preprocessor.ResizeImageOrBuilder>(
                  (object_detection.protos.Preprocessor.ResizeImage) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 19;
        onChanged();;
        return resizeImageBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.SubtractChannelMean, object_detection.protos.Preprocessor.SubtractChannelMean.Builder, object_detection.protos.Preprocessor.SubtractChannelMeanOrBuilder> subtractChannelMeanBuilder_;
      /**
       * <code>.object_detection.protos.SubtractChannelMean subtract_channel_mean = 20;</code>
       * @return Whether the subtractChannelMean field is set.
       */
      @java.lang.Override
      public boolean hasSubtractChannelMean() {
        return preprocessingStepCase_ == 20;
      }
      /**
       * <code>.object_detection.protos.SubtractChannelMean subtract_channel_mean = 20;</code>
       * @return The subtractChannelMean.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.SubtractChannelMean getSubtractChannelMean() {
        if (subtractChannelMeanBuilder_ == null) {
          if (preprocessingStepCase_ == 20) {
            return (object_detection.protos.Preprocessor.SubtractChannelMean) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.SubtractChannelMean.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 20) {
            return subtractChannelMeanBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.SubtractChannelMean.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.SubtractChannelMean subtract_channel_mean = 20;</code>
       */
      public Builder setSubtractChannelMean(object_detection.protos.Preprocessor.SubtractChannelMean value) {
        if (subtractChannelMeanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          subtractChannelMeanBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 20;
        return this;
      }
      /**
       * <code>.object_detection.protos.SubtractChannelMean subtract_channel_mean = 20;</code>
       */
      public Builder setSubtractChannelMean(
          object_detection.protos.Preprocessor.SubtractChannelMean.Builder builderForValue) {
        if (subtractChannelMeanBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          subtractChannelMeanBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 20;
        return this;
      }
      /**
       * <code>.object_detection.protos.SubtractChannelMean subtract_channel_mean = 20;</code>
       */
      public Builder mergeSubtractChannelMean(object_detection.protos.Preprocessor.SubtractChannelMean value) {
        if (subtractChannelMeanBuilder_ == null) {
          if (preprocessingStepCase_ == 20 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.SubtractChannelMean.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.SubtractChannelMean.newBuilder((object_detection.protos.Preprocessor.SubtractChannelMean) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 20) {
            subtractChannelMeanBuilder_.mergeFrom(value);
          }
          subtractChannelMeanBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 20;
        return this;
      }
      /**
       * <code>.object_detection.protos.SubtractChannelMean subtract_channel_mean = 20;</code>
       */
      public Builder clearSubtractChannelMean() {
        if (subtractChannelMeanBuilder_ == null) {
          if (preprocessingStepCase_ == 20) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 20) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          subtractChannelMeanBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.SubtractChannelMean subtract_channel_mean = 20;</code>
       */
      public object_detection.protos.Preprocessor.SubtractChannelMean.Builder getSubtractChannelMeanBuilder() {
        return getSubtractChannelMeanFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.SubtractChannelMean subtract_channel_mean = 20;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.SubtractChannelMeanOrBuilder getSubtractChannelMeanOrBuilder() {
        if ((preprocessingStepCase_ == 20) && (subtractChannelMeanBuilder_ != null)) {
          return subtractChannelMeanBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 20) {
            return (object_detection.protos.Preprocessor.SubtractChannelMean) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.SubtractChannelMean.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.SubtractChannelMean subtract_channel_mean = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.SubtractChannelMean, object_detection.protos.Preprocessor.SubtractChannelMean.Builder, object_detection.protos.Preprocessor.SubtractChannelMeanOrBuilder>
          getSubtractChannelMeanFieldBuilder() {
        if (subtractChannelMeanBuilder_ == null) {
          if (!(preprocessingStepCase_ == 20)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.SubtractChannelMean.getDefaultInstance();
          }
          subtractChannelMeanBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.SubtractChannelMean, object_detection.protos.Preprocessor.SubtractChannelMean.Builder, object_detection.protos.Preprocessor.SubtractChannelMeanOrBuilder>(
                  (object_detection.protos.Preprocessor.SubtractChannelMean) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 20;
        onChanged();;
        return subtractChannelMeanBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.SSDRandomCrop, object_detection.protos.Preprocessor.SSDRandomCrop.Builder, object_detection.protos.Preprocessor.SSDRandomCropOrBuilder> ssdRandomCropBuilder_;
      /**
       * <code>.object_detection.protos.SSDRandomCrop ssd_random_crop = 21;</code>
       * @return Whether the ssdRandomCrop field is set.
       */
      @java.lang.Override
      public boolean hasSsdRandomCrop() {
        return preprocessingStepCase_ == 21;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCrop ssd_random_crop = 21;</code>
       * @return The ssdRandomCrop.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCrop getSsdRandomCrop() {
        if (ssdRandomCropBuilder_ == null) {
          if (preprocessingStepCase_ == 21) {
            return (object_detection.protos.Preprocessor.SSDRandomCrop) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.SSDRandomCrop.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 21) {
            return ssdRandomCropBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.SSDRandomCrop.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.SSDRandomCrop ssd_random_crop = 21;</code>
       */
      public Builder setSsdRandomCrop(object_detection.protos.Preprocessor.SSDRandomCrop value) {
        if (ssdRandomCropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          ssdRandomCropBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 21;
        return this;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCrop ssd_random_crop = 21;</code>
       */
      public Builder setSsdRandomCrop(
          object_detection.protos.Preprocessor.SSDRandomCrop.Builder builderForValue) {
        if (ssdRandomCropBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          ssdRandomCropBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 21;
        return this;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCrop ssd_random_crop = 21;</code>
       */
      public Builder mergeSsdRandomCrop(object_detection.protos.Preprocessor.SSDRandomCrop value) {
        if (ssdRandomCropBuilder_ == null) {
          if (preprocessingStepCase_ == 21 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.SSDRandomCrop.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.SSDRandomCrop.newBuilder((object_detection.protos.Preprocessor.SSDRandomCrop) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 21) {
            ssdRandomCropBuilder_.mergeFrom(value);
          }
          ssdRandomCropBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 21;
        return this;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCrop ssd_random_crop = 21;</code>
       */
      public Builder clearSsdRandomCrop() {
        if (ssdRandomCropBuilder_ == null) {
          if (preprocessingStepCase_ == 21) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 21) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          ssdRandomCropBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCrop ssd_random_crop = 21;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCrop.Builder getSsdRandomCropBuilder() {
        return getSsdRandomCropFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.SSDRandomCrop ssd_random_crop = 21;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropOrBuilder getSsdRandomCropOrBuilder() {
        if ((preprocessingStepCase_ == 21) && (ssdRandomCropBuilder_ != null)) {
          return ssdRandomCropBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 21) {
            return (object_detection.protos.Preprocessor.SSDRandomCrop) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.SSDRandomCrop.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.SSDRandomCrop ssd_random_crop = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.SSDRandomCrop, object_detection.protos.Preprocessor.SSDRandomCrop.Builder, object_detection.protos.Preprocessor.SSDRandomCropOrBuilder>
          getSsdRandomCropFieldBuilder() {
        if (ssdRandomCropBuilder_ == null) {
          if (!(preprocessingStepCase_ == 21)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.SSDRandomCrop.getDefaultInstance();
          }
          ssdRandomCropBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.SSDRandomCrop, object_detection.protos.Preprocessor.SSDRandomCrop.Builder, object_detection.protos.Preprocessor.SSDRandomCropOrBuilder>(
                  (object_detection.protos.Preprocessor.SSDRandomCrop) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 21;
        onChanged();;
        return ssdRandomCropBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.SSDRandomCropPad, object_detection.protos.Preprocessor.SSDRandomCropPad.Builder, object_detection.protos.Preprocessor.SSDRandomCropPadOrBuilder> ssdRandomCropPadBuilder_;
      /**
       * <code>.object_detection.protos.SSDRandomCropPad ssd_random_crop_pad = 22;</code>
       * @return Whether the ssdRandomCropPad field is set.
       */
      @java.lang.Override
      public boolean hasSsdRandomCropPad() {
        return preprocessingStepCase_ == 22;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropPad ssd_random_crop_pad = 22;</code>
       * @return The ssdRandomCropPad.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropPad getSsdRandomCropPad() {
        if (ssdRandomCropPadBuilder_ == null) {
          if (preprocessingStepCase_ == 22) {
            return (object_detection.protos.Preprocessor.SSDRandomCropPad) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.SSDRandomCropPad.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 22) {
            return ssdRandomCropPadBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.SSDRandomCropPad.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropPad ssd_random_crop_pad = 22;</code>
       */
      public Builder setSsdRandomCropPad(object_detection.protos.Preprocessor.SSDRandomCropPad value) {
        if (ssdRandomCropPadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          ssdRandomCropPadBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 22;
        return this;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropPad ssd_random_crop_pad = 22;</code>
       */
      public Builder setSsdRandomCropPad(
          object_detection.protos.Preprocessor.SSDRandomCropPad.Builder builderForValue) {
        if (ssdRandomCropPadBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          ssdRandomCropPadBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 22;
        return this;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropPad ssd_random_crop_pad = 22;</code>
       */
      public Builder mergeSsdRandomCropPad(object_detection.protos.Preprocessor.SSDRandomCropPad value) {
        if (ssdRandomCropPadBuilder_ == null) {
          if (preprocessingStepCase_ == 22 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.SSDRandomCropPad.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.SSDRandomCropPad.newBuilder((object_detection.protos.Preprocessor.SSDRandomCropPad) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 22) {
            ssdRandomCropPadBuilder_.mergeFrom(value);
          }
          ssdRandomCropPadBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 22;
        return this;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropPad ssd_random_crop_pad = 22;</code>
       */
      public Builder clearSsdRandomCropPad() {
        if (ssdRandomCropPadBuilder_ == null) {
          if (preprocessingStepCase_ == 22) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 22) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          ssdRandomCropPadBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropPad ssd_random_crop_pad = 22;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropPad.Builder getSsdRandomCropPadBuilder() {
        return getSsdRandomCropPadFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropPad ssd_random_crop_pad = 22;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropPadOrBuilder getSsdRandomCropPadOrBuilder() {
        if ((preprocessingStepCase_ == 22) && (ssdRandomCropPadBuilder_ != null)) {
          return ssdRandomCropPadBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 22) {
            return (object_detection.protos.Preprocessor.SSDRandomCropPad) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.SSDRandomCropPad.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropPad ssd_random_crop_pad = 22;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.SSDRandomCropPad, object_detection.protos.Preprocessor.SSDRandomCropPad.Builder, object_detection.protos.Preprocessor.SSDRandomCropPadOrBuilder>
          getSsdRandomCropPadFieldBuilder() {
        if (ssdRandomCropPadBuilder_ == null) {
          if (!(preprocessingStepCase_ == 22)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.SSDRandomCropPad.getDefaultInstance();
          }
          ssdRandomCropPadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.SSDRandomCropPad, object_detection.protos.Preprocessor.SSDRandomCropPad.Builder, object_detection.protos.Preprocessor.SSDRandomCropPadOrBuilder>(
                  (object_detection.protos.Preprocessor.SSDRandomCropPad) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 22;
        onChanged();;
        return ssdRandomCropPadBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.Builder, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOrBuilder> ssdRandomCropFixedAspectRatioBuilder_;
      /**
       * <code>.object_detection.protos.SSDRandomCropFixedAspectRatio ssd_random_crop_fixed_aspect_ratio = 23;</code>
       * @return Whether the ssdRandomCropFixedAspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasSsdRandomCropFixedAspectRatio() {
        return preprocessingStepCase_ == 23;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropFixedAspectRatio ssd_random_crop_fixed_aspect_ratio = 23;</code>
       * @return The ssdRandomCropFixedAspectRatio.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio getSsdRandomCropFixedAspectRatio() {
        if (ssdRandomCropFixedAspectRatioBuilder_ == null) {
          if (preprocessingStepCase_ == 23) {
            return (object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 23) {
            return ssdRandomCropFixedAspectRatioBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropFixedAspectRatio ssd_random_crop_fixed_aspect_ratio = 23;</code>
       */
      public Builder setSsdRandomCropFixedAspectRatio(object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio value) {
        if (ssdRandomCropFixedAspectRatioBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          ssdRandomCropFixedAspectRatioBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 23;
        return this;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropFixedAspectRatio ssd_random_crop_fixed_aspect_ratio = 23;</code>
       */
      public Builder setSsdRandomCropFixedAspectRatio(
          object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.Builder builderForValue) {
        if (ssdRandomCropFixedAspectRatioBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          ssdRandomCropFixedAspectRatioBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 23;
        return this;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropFixedAspectRatio ssd_random_crop_fixed_aspect_ratio = 23;</code>
       */
      public Builder mergeSsdRandomCropFixedAspectRatio(object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio value) {
        if (ssdRandomCropFixedAspectRatioBuilder_ == null) {
          if (preprocessingStepCase_ == 23 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.newBuilder((object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 23) {
            ssdRandomCropFixedAspectRatioBuilder_.mergeFrom(value);
          }
          ssdRandomCropFixedAspectRatioBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 23;
        return this;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropFixedAspectRatio ssd_random_crop_fixed_aspect_ratio = 23;</code>
       */
      public Builder clearSsdRandomCropFixedAspectRatio() {
        if (ssdRandomCropFixedAspectRatioBuilder_ == null) {
          if (preprocessingStepCase_ == 23) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 23) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          ssdRandomCropFixedAspectRatioBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropFixedAspectRatio ssd_random_crop_fixed_aspect_ratio = 23;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.Builder getSsdRandomCropFixedAspectRatioBuilder() {
        return getSsdRandomCropFixedAspectRatioFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropFixedAspectRatio ssd_random_crop_fixed_aspect_ratio = 23;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOrBuilder getSsdRandomCropFixedAspectRatioOrBuilder() {
        if ((preprocessingStepCase_ == 23) && (ssdRandomCropFixedAspectRatioBuilder_ != null)) {
          return ssdRandomCropFixedAspectRatioBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 23) {
            return (object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropFixedAspectRatio ssd_random_crop_fixed_aspect_ratio = 23;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.Builder, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOrBuilder>
          getSsdRandomCropFixedAspectRatioFieldBuilder() {
        if (ssdRandomCropFixedAspectRatioBuilder_ == null) {
          if (!(preprocessingStepCase_ == 23)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.getDefaultInstance();
          }
          ssdRandomCropFixedAspectRatioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.Builder, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOrBuilder>(
                  (object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 23;
        onChanged();;
        return ssdRandomCropFixedAspectRatioBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.Builder, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOrBuilder> ssdRandomCropPadFixedAspectRatioBuilder_;
      /**
       * <code>.object_detection.protos.SSDRandomCropPadFixedAspectRatio ssd_random_crop_pad_fixed_aspect_ratio = 24;</code>
       * @return Whether the ssdRandomCropPadFixedAspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasSsdRandomCropPadFixedAspectRatio() {
        return preprocessingStepCase_ == 24;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropPadFixedAspectRatio ssd_random_crop_pad_fixed_aspect_ratio = 24;</code>
       * @return The ssdRandomCropPadFixedAspectRatio.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio getSsdRandomCropPadFixedAspectRatio() {
        if (ssdRandomCropPadFixedAspectRatioBuilder_ == null) {
          if (preprocessingStepCase_ == 24) {
            return (object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 24) {
            return ssdRandomCropPadFixedAspectRatioBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropPadFixedAspectRatio ssd_random_crop_pad_fixed_aspect_ratio = 24;</code>
       */
      public Builder setSsdRandomCropPadFixedAspectRatio(object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio value) {
        if (ssdRandomCropPadFixedAspectRatioBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          ssdRandomCropPadFixedAspectRatioBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 24;
        return this;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropPadFixedAspectRatio ssd_random_crop_pad_fixed_aspect_ratio = 24;</code>
       */
      public Builder setSsdRandomCropPadFixedAspectRatio(
          object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.Builder builderForValue) {
        if (ssdRandomCropPadFixedAspectRatioBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          ssdRandomCropPadFixedAspectRatioBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 24;
        return this;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropPadFixedAspectRatio ssd_random_crop_pad_fixed_aspect_ratio = 24;</code>
       */
      public Builder mergeSsdRandomCropPadFixedAspectRatio(object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio value) {
        if (ssdRandomCropPadFixedAspectRatioBuilder_ == null) {
          if (preprocessingStepCase_ == 24 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.newBuilder((object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 24) {
            ssdRandomCropPadFixedAspectRatioBuilder_.mergeFrom(value);
          }
          ssdRandomCropPadFixedAspectRatioBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 24;
        return this;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropPadFixedAspectRatio ssd_random_crop_pad_fixed_aspect_ratio = 24;</code>
       */
      public Builder clearSsdRandomCropPadFixedAspectRatio() {
        if (ssdRandomCropPadFixedAspectRatioBuilder_ == null) {
          if (preprocessingStepCase_ == 24) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 24) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          ssdRandomCropPadFixedAspectRatioBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropPadFixedAspectRatio ssd_random_crop_pad_fixed_aspect_ratio = 24;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.Builder getSsdRandomCropPadFixedAspectRatioBuilder() {
        return getSsdRandomCropPadFixedAspectRatioFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropPadFixedAspectRatio ssd_random_crop_pad_fixed_aspect_ratio = 24;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOrBuilder getSsdRandomCropPadFixedAspectRatioOrBuilder() {
        if ((preprocessingStepCase_ == 24) && (ssdRandomCropPadFixedAspectRatioBuilder_ != null)) {
          return ssdRandomCropPadFixedAspectRatioBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 24) {
            return (object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.SSDRandomCropPadFixedAspectRatio ssd_random_crop_pad_fixed_aspect_ratio = 24;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.Builder, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOrBuilder>
          getSsdRandomCropPadFixedAspectRatioFieldBuilder() {
        if (ssdRandomCropPadFixedAspectRatioBuilder_ == null) {
          if (!(preprocessingStepCase_ == 24)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.getDefaultInstance();
          }
          ssdRandomCropPadFixedAspectRatioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.Builder, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOrBuilder>(
                  (object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 24;
        onChanged();;
        return ssdRandomCropPadFixedAspectRatioBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomVerticalFlip, object_detection.protos.Preprocessor.RandomVerticalFlip.Builder, object_detection.protos.Preprocessor.RandomVerticalFlipOrBuilder> randomVerticalFlipBuilder_;
      /**
       * <code>.object_detection.protos.RandomVerticalFlip random_vertical_flip = 25;</code>
       * @return Whether the randomVerticalFlip field is set.
       */
      @java.lang.Override
      public boolean hasRandomVerticalFlip() {
        return preprocessingStepCase_ == 25;
      }
      /**
       * <code>.object_detection.protos.RandomVerticalFlip random_vertical_flip = 25;</code>
       * @return The randomVerticalFlip.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomVerticalFlip getRandomVerticalFlip() {
        if (randomVerticalFlipBuilder_ == null) {
          if (preprocessingStepCase_ == 25) {
            return (object_detection.protos.Preprocessor.RandomVerticalFlip) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomVerticalFlip.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 25) {
            return randomVerticalFlipBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomVerticalFlip.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomVerticalFlip random_vertical_flip = 25;</code>
       */
      public Builder setRandomVerticalFlip(object_detection.protos.Preprocessor.RandomVerticalFlip value) {
        if (randomVerticalFlipBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomVerticalFlipBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 25;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomVerticalFlip random_vertical_flip = 25;</code>
       */
      public Builder setRandomVerticalFlip(
          object_detection.protos.Preprocessor.RandomVerticalFlip.Builder builderForValue) {
        if (randomVerticalFlipBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomVerticalFlipBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 25;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomVerticalFlip random_vertical_flip = 25;</code>
       */
      public Builder mergeRandomVerticalFlip(object_detection.protos.Preprocessor.RandomVerticalFlip value) {
        if (randomVerticalFlipBuilder_ == null) {
          if (preprocessingStepCase_ == 25 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomVerticalFlip.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomVerticalFlip.newBuilder((object_detection.protos.Preprocessor.RandomVerticalFlip) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 25) {
            randomVerticalFlipBuilder_.mergeFrom(value);
          }
          randomVerticalFlipBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 25;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomVerticalFlip random_vertical_flip = 25;</code>
       */
      public Builder clearRandomVerticalFlip() {
        if (randomVerticalFlipBuilder_ == null) {
          if (preprocessingStepCase_ == 25) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 25) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomVerticalFlipBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomVerticalFlip random_vertical_flip = 25;</code>
       */
      public object_detection.protos.Preprocessor.RandomVerticalFlip.Builder getRandomVerticalFlipBuilder() {
        return getRandomVerticalFlipFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomVerticalFlip random_vertical_flip = 25;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomVerticalFlipOrBuilder getRandomVerticalFlipOrBuilder() {
        if ((preprocessingStepCase_ == 25) && (randomVerticalFlipBuilder_ != null)) {
          return randomVerticalFlipBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 25) {
            return (object_detection.protos.Preprocessor.RandomVerticalFlip) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomVerticalFlip.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomVerticalFlip random_vertical_flip = 25;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomVerticalFlip, object_detection.protos.Preprocessor.RandomVerticalFlip.Builder, object_detection.protos.Preprocessor.RandomVerticalFlipOrBuilder>
          getRandomVerticalFlipFieldBuilder() {
        if (randomVerticalFlipBuilder_ == null) {
          if (!(preprocessingStepCase_ == 25)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomVerticalFlip.getDefaultInstance();
          }
          randomVerticalFlipBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomVerticalFlip, object_detection.protos.Preprocessor.RandomVerticalFlip.Builder, object_detection.protos.Preprocessor.RandomVerticalFlipOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomVerticalFlip) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 25;
        onChanged();;
        return randomVerticalFlipBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomRotation90, object_detection.protos.Preprocessor.RandomRotation90.Builder, object_detection.protos.Preprocessor.RandomRotation90OrBuilder> randomRotation90Builder_;
      /**
       * <code>.object_detection.protos.RandomRotation90 random_rotation90 = 26;</code>
       * @return Whether the randomRotation90 field is set.
       */
      @java.lang.Override
      public boolean hasRandomRotation90() {
        return preprocessingStepCase_ == 26;
      }
      /**
       * <code>.object_detection.protos.RandomRotation90 random_rotation90 = 26;</code>
       * @return The randomRotation90.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomRotation90 getRandomRotation90() {
        if (randomRotation90Builder_ == null) {
          if (preprocessingStepCase_ == 26) {
            return (object_detection.protos.Preprocessor.RandomRotation90) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomRotation90.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 26) {
            return randomRotation90Builder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomRotation90.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomRotation90 random_rotation90 = 26;</code>
       */
      public Builder setRandomRotation90(object_detection.protos.Preprocessor.RandomRotation90 value) {
        if (randomRotation90Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomRotation90Builder_.setMessage(value);
        }
        preprocessingStepCase_ = 26;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomRotation90 random_rotation90 = 26;</code>
       */
      public Builder setRandomRotation90(
          object_detection.protos.Preprocessor.RandomRotation90.Builder builderForValue) {
        if (randomRotation90Builder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomRotation90Builder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 26;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomRotation90 random_rotation90 = 26;</code>
       */
      public Builder mergeRandomRotation90(object_detection.protos.Preprocessor.RandomRotation90 value) {
        if (randomRotation90Builder_ == null) {
          if (preprocessingStepCase_ == 26 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomRotation90.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomRotation90.newBuilder((object_detection.protos.Preprocessor.RandomRotation90) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 26) {
            randomRotation90Builder_.mergeFrom(value);
          }
          randomRotation90Builder_.setMessage(value);
        }
        preprocessingStepCase_ = 26;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomRotation90 random_rotation90 = 26;</code>
       */
      public Builder clearRandomRotation90() {
        if (randomRotation90Builder_ == null) {
          if (preprocessingStepCase_ == 26) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 26) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomRotation90Builder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomRotation90 random_rotation90 = 26;</code>
       */
      public object_detection.protos.Preprocessor.RandomRotation90.Builder getRandomRotation90Builder() {
        return getRandomRotation90FieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomRotation90 random_rotation90 = 26;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomRotation90OrBuilder getRandomRotation90OrBuilder() {
        if ((preprocessingStepCase_ == 26) && (randomRotation90Builder_ != null)) {
          return randomRotation90Builder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 26) {
            return (object_detection.protos.Preprocessor.RandomRotation90) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomRotation90.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomRotation90 random_rotation90 = 26;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomRotation90, object_detection.protos.Preprocessor.RandomRotation90.Builder, object_detection.protos.Preprocessor.RandomRotation90OrBuilder>
          getRandomRotation90FieldBuilder() {
        if (randomRotation90Builder_ == null) {
          if (!(preprocessingStepCase_ == 26)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomRotation90.getDefaultInstance();
          }
          randomRotation90Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomRotation90, object_detection.protos.Preprocessor.RandomRotation90.Builder, object_detection.protos.Preprocessor.RandomRotation90OrBuilder>(
                  (object_detection.protos.Preprocessor.RandomRotation90) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 26;
        onChanged();;
        return randomRotation90Builder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RGBtoGray, object_detection.protos.Preprocessor.RGBtoGray.Builder, object_detection.protos.Preprocessor.RGBtoGrayOrBuilder> rgbToGrayBuilder_;
      /**
       * <code>.object_detection.protos.RGBtoGray rgb_to_gray = 27;</code>
       * @return Whether the rgbToGray field is set.
       */
      @java.lang.Override
      public boolean hasRgbToGray() {
        return preprocessingStepCase_ == 27;
      }
      /**
       * <code>.object_detection.protos.RGBtoGray rgb_to_gray = 27;</code>
       * @return The rgbToGray.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RGBtoGray getRgbToGray() {
        if (rgbToGrayBuilder_ == null) {
          if (preprocessingStepCase_ == 27) {
            return (object_detection.protos.Preprocessor.RGBtoGray) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RGBtoGray.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 27) {
            return rgbToGrayBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RGBtoGray.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RGBtoGray rgb_to_gray = 27;</code>
       */
      public Builder setRgbToGray(object_detection.protos.Preprocessor.RGBtoGray value) {
        if (rgbToGrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          rgbToGrayBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 27;
        return this;
      }
      /**
       * <code>.object_detection.protos.RGBtoGray rgb_to_gray = 27;</code>
       */
      public Builder setRgbToGray(
          object_detection.protos.Preprocessor.RGBtoGray.Builder builderForValue) {
        if (rgbToGrayBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          rgbToGrayBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 27;
        return this;
      }
      /**
       * <code>.object_detection.protos.RGBtoGray rgb_to_gray = 27;</code>
       */
      public Builder mergeRgbToGray(object_detection.protos.Preprocessor.RGBtoGray value) {
        if (rgbToGrayBuilder_ == null) {
          if (preprocessingStepCase_ == 27 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RGBtoGray.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RGBtoGray.newBuilder((object_detection.protos.Preprocessor.RGBtoGray) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 27) {
            rgbToGrayBuilder_.mergeFrom(value);
          }
          rgbToGrayBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 27;
        return this;
      }
      /**
       * <code>.object_detection.protos.RGBtoGray rgb_to_gray = 27;</code>
       */
      public Builder clearRgbToGray() {
        if (rgbToGrayBuilder_ == null) {
          if (preprocessingStepCase_ == 27) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 27) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          rgbToGrayBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RGBtoGray rgb_to_gray = 27;</code>
       */
      public object_detection.protos.Preprocessor.RGBtoGray.Builder getRgbToGrayBuilder() {
        return getRgbToGrayFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RGBtoGray rgb_to_gray = 27;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RGBtoGrayOrBuilder getRgbToGrayOrBuilder() {
        if ((preprocessingStepCase_ == 27) && (rgbToGrayBuilder_ != null)) {
          return rgbToGrayBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 27) {
            return (object_detection.protos.Preprocessor.RGBtoGray) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RGBtoGray.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RGBtoGray rgb_to_gray = 27;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RGBtoGray, object_detection.protos.Preprocessor.RGBtoGray.Builder, object_detection.protos.Preprocessor.RGBtoGrayOrBuilder>
          getRgbToGrayFieldBuilder() {
        if (rgbToGrayBuilder_ == null) {
          if (!(preprocessingStepCase_ == 27)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RGBtoGray.getDefaultInstance();
          }
          rgbToGrayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RGBtoGray, object_detection.protos.Preprocessor.RGBtoGray.Builder, object_detection.protos.Preprocessor.RGBtoGrayOrBuilder>(
                  (object_detection.protos.Preprocessor.RGBtoGray) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 27;
        onChanged();;
        return rgbToGrayBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax, object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.Builder, object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmaxOrBuilder> convertClassLogitsToSoftmaxBuilder_;
      /**
       * <code>.object_detection.protos.ConvertClassLogitsToSoftmax convert_class_logits_to_softmax = 28;</code>
       * @return Whether the convertClassLogitsToSoftmax field is set.
       */
      @java.lang.Override
      public boolean hasConvertClassLogitsToSoftmax() {
        return preprocessingStepCase_ == 28;
      }
      /**
       * <code>.object_detection.protos.ConvertClassLogitsToSoftmax convert_class_logits_to_softmax = 28;</code>
       * @return The convertClassLogitsToSoftmax.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax getConvertClassLogitsToSoftmax() {
        if (convertClassLogitsToSoftmaxBuilder_ == null) {
          if (preprocessingStepCase_ == 28) {
            return (object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 28) {
            return convertClassLogitsToSoftmaxBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.ConvertClassLogitsToSoftmax convert_class_logits_to_softmax = 28;</code>
       */
      public Builder setConvertClassLogitsToSoftmax(object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax value) {
        if (convertClassLogitsToSoftmaxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          convertClassLogitsToSoftmaxBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 28;
        return this;
      }
      /**
       * <code>.object_detection.protos.ConvertClassLogitsToSoftmax convert_class_logits_to_softmax = 28;</code>
       */
      public Builder setConvertClassLogitsToSoftmax(
          object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.Builder builderForValue) {
        if (convertClassLogitsToSoftmaxBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          convertClassLogitsToSoftmaxBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 28;
        return this;
      }
      /**
       * <code>.object_detection.protos.ConvertClassLogitsToSoftmax convert_class_logits_to_softmax = 28;</code>
       */
      public Builder mergeConvertClassLogitsToSoftmax(object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax value) {
        if (convertClassLogitsToSoftmaxBuilder_ == null) {
          if (preprocessingStepCase_ == 28 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.newBuilder((object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 28) {
            convertClassLogitsToSoftmaxBuilder_.mergeFrom(value);
          }
          convertClassLogitsToSoftmaxBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 28;
        return this;
      }
      /**
       * <code>.object_detection.protos.ConvertClassLogitsToSoftmax convert_class_logits_to_softmax = 28;</code>
       */
      public Builder clearConvertClassLogitsToSoftmax() {
        if (convertClassLogitsToSoftmaxBuilder_ == null) {
          if (preprocessingStepCase_ == 28) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 28) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          convertClassLogitsToSoftmaxBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.ConvertClassLogitsToSoftmax convert_class_logits_to_softmax = 28;</code>
       */
      public object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.Builder getConvertClassLogitsToSoftmaxBuilder() {
        return getConvertClassLogitsToSoftmaxFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.ConvertClassLogitsToSoftmax convert_class_logits_to_softmax = 28;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmaxOrBuilder getConvertClassLogitsToSoftmaxOrBuilder() {
        if ((preprocessingStepCase_ == 28) && (convertClassLogitsToSoftmaxBuilder_ != null)) {
          return convertClassLogitsToSoftmaxBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 28) {
            return (object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.ConvertClassLogitsToSoftmax convert_class_logits_to_softmax = 28;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax, object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.Builder, object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmaxOrBuilder>
          getConvertClassLogitsToSoftmaxFieldBuilder() {
        if (convertClassLogitsToSoftmaxBuilder_ == null) {
          if (!(preprocessingStepCase_ == 28)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.getDefaultInstance();
          }
          convertClassLogitsToSoftmaxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax, object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.Builder, object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmaxOrBuilder>(
                  (object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 28;
        onChanged();;
        return convertClassLogitsToSoftmaxBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomAbsolutePadImage, object_detection.protos.Preprocessor.RandomAbsolutePadImage.Builder, object_detection.protos.Preprocessor.RandomAbsolutePadImageOrBuilder> randomAbsolutePadImageBuilder_;
      /**
       * <code>.object_detection.protos.RandomAbsolutePadImage random_absolute_pad_image = 29;</code>
       * @return Whether the randomAbsolutePadImage field is set.
       */
      @java.lang.Override
      public boolean hasRandomAbsolutePadImage() {
        return preprocessingStepCase_ == 29;
      }
      /**
       * <code>.object_detection.protos.RandomAbsolutePadImage random_absolute_pad_image = 29;</code>
       * @return The randomAbsolutePadImage.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAbsolutePadImage getRandomAbsolutePadImage() {
        if (randomAbsolutePadImageBuilder_ == null) {
          if (preprocessingStepCase_ == 29) {
            return (object_detection.protos.Preprocessor.RandomAbsolutePadImage) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomAbsolutePadImage.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 29) {
            return randomAbsolutePadImageBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomAbsolutePadImage.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomAbsolutePadImage random_absolute_pad_image = 29;</code>
       */
      public Builder setRandomAbsolutePadImage(object_detection.protos.Preprocessor.RandomAbsolutePadImage value) {
        if (randomAbsolutePadImageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomAbsolutePadImageBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 29;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAbsolutePadImage random_absolute_pad_image = 29;</code>
       */
      public Builder setRandomAbsolutePadImage(
          object_detection.protos.Preprocessor.RandomAbsolutePadImage.Builder builderForValue) {
        if (randomAbsolutePadImageBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomAbsolutePadImageBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 29;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAbsolutePadImage random_absolute_pad_image = 29;</code>
       */
      public Builder mergeRandomAbsolutePadImage(object_detection.protos.Preprocessor.RandomAbsolutePadImage value) {
        if (randomAbsolutePadImageBuilder_ == null) {
          if (preprocessingStepCase_ == 29 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomAbsolutePadImage.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomAbsolutePadImage.newBuilder((object_detection.protos.Preprocessor.RandomAbsolutePadImage) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 29) {
            randomAbsolutePadImageBuilder_.mergeFrom(value);
          }
          randomAbsolutePadImageBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 29;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAbsolutePadImage random_absolute_pad_image = 29;</code>
       */
      public Builder clearRandomAbsolutePadImage() {
        if (randomAbsolutePadImageBuilder_ == null) {
          if (preprocessingStepCase_ == 29) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 29) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomAbsolutePadImageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomAbsolutePadImage random_absolute_pad_image = 29;</code>
       */
      public object_detection.protos.Preprocessor.RandomAbsolutePadImage.Builder getRandomAbsolutePadImageBuilder() {
        return getRandomAbsolutePadImageFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomAbsolutePadImage random_absolute_pad_image = 29;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAbsolutePadImageOrBuilder getRandomAbsolutePadImageOrBuilder() {
        if ((preprocessingStepCase_ == 29) && (randomAbsolutePadImageBuilder_ != null)) {
          return randomAbsolutePadImageBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 29) {
            return (object_detection.protos.Preprocessor.RandomAbsolutePadImage) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomAbsolutePadImage.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomAbsolutePadImage random_absolute_pad_image = 29;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomAbsolutePadImage, object_detection.protos.Preprocessor.RandomAbsolutePadImage.Builder, object_detection.protos.Preprocessor.RandomAbsolutePadImageOrBuilder>
          getRandomAbsolutePadImageFieldBuilder() {
        if (randomAbsolutePadImageBuilder_ == null) {
          if (!(preprocessingStepCase_ == 29)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomAbsolutePadImage.getDefaultInstance();
          }
          randomAbsolutePadImageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomAbsolutePadImage, object_detection.protos.Preprocessor.RandomAbsolutePadImage.Builder, object_detection.protos.Preprocessor.RandomAbsolutePadImageOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomAbsolutePadImage) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 29;
        onChanged();;
        return randomAbsolutePadImageBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomSelfConcatImage, object_detection.protos.Preprocessor.RandomSelfConcatImage.Builder, object_detection.protos.Preprocessor.RandomSelfConcatImageOrBuilder> randomSelfConcatImageBuilder_;
      /**
       * <code>.object_detection.protos.RandomSelfConcatImage random_self_concat_image = 30;</code>
       * @return Whether the randomSelfConcatImage field is set.
       */
      @java.lang.Override
      public boolean hasRandomSelfConcatImage() {
        return preprocessingStepCase_ == 30;
      }
      /**
       * <code>.object_detection.protos.RandomSelfConcatImage random_self_concat_image = 30;</code>
       * @return The randomSelfConcatImage.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomSelfConcatImage getRandomSelfConcatImage() {
        if (randomSelfConcatImageBuilder_ == null) {
          if (preprocessingStepCase_ == 30) {
            return (object_detection.protos.Preprocessor.RandomSelfConcatImage) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomSelfConcatImage.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 30) {
            return randomSelfConcatImageBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomSelfConcatImage.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomSelfConcatImage random_self_concat_image = 30;</code>
       */
      public Builder setRandomSelfConcatImage(object_detection.protos.Preprocessor.RandomSelfConcatImage value) {
        if (randomSelfConcatImageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomSelfConcatImageBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 30;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomSelfConcatImage random_self_concat_image = 30;</code>
       */
      public Builder setRandomSelfConcatImage(
          object_detection.protos.Preprocessor.RandomSelfConcatImage.Builder builderForValue) {
        if (randomSelfConcatImageBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomSelfConcatImageBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 30;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomSelfConcatImage random_self_concat_image = 30;</code>
       */
      public Builder mergeRandomSelfConcatImage(object_detection.protos.Preprocessor.RandomSelfConcatImage value) {
        if (randomSelfConcatImageBuilder_ == null) {
          if (preprocessingStepCase_ == 30 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomSelfConcatImage.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomSelfConcatImage.newBuilder((object_detection.protos.Preprocessor.RandomSelfConcatImage) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 30) {
            randomSelfConcatImageBuilder_.mergeFrom(value);
          }
          randomSelfConcatImageBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 30;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomSelfConcatImage random_self_concat_image = 30;</code>
       */
      public Builder clearRandomSelfConcatImage() {
        if (randomSelfConcatImageBuilder_ == null) {
          if (preprocessingStepCase_ == 30) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 30) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomSelfConcatImageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomSelfConcatImage random_self_concat_image = 30;</code>
       */
      public object_detection.protos.Preprocessor.RandomSelfConcatImage.Builder getRandomSelfConcatImageBuilder() {
        return getRandomSelfConcatImageFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomSelfConcatImage random_self_concat_image = 30;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomSelfConcatImageOrBuilder getRandomSelfConcatImageOrBuilder() {
        if ((preprocessingStepCase_ == 30) && (randomSelfConcatImageBuilder_ != null)) {
          return randomSelfConcatImageBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 30) {
            return (object_detection.protos.Preprocessor.RandomSelfConcatImage) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomSelfConcatImage.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomSelfConcatImage random_self_concat_image = 30;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomSelfConcatImage, object_detection.protos.Preprocessor.RandomSelfConcatImage.Builder, object_detection.protos.Preprocessor.RandomSelfConcatImageOrBuilder>
          getRandomSelfConcatImageFieldBuilder() {
        if (randomSelfConcatImageBuilder_ == null) {
          if (!(preprocessingStepCase_ == 30)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomSelfConcatImage.getDefaultInstance();
          }
          randomSelfConcatImageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomSelfConcatImage, object_detection.protos.Preprocessor.RandomSelfConcatImage.Builder, object_detection.protos.Preprocessor.RandomSelfConcatImageOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomSelfConcatImage) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 30;
        onChanged();;
        return randomSelfConcatImageBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.AutoAugmentImage, object_detection.protos.Preprocessor.AutoAugmentImage.Builder, object_detection.protos.Preprocessor.AutoAugmentImageOrBuilder> autoaugmentImageBuilder_;
      /**
       * <code>.object_detection.protos.AutoAugmentImage autoaugment_image = 31;</code>
       * @return Whether the autoaugmentImage field is set.
       */
      @java.lang.Override
      public boolean hasAutoaugmentImage() {
        return preprocessingStepCase_ == 31;
      }
      /**
       * <code>.object_detection.protos.AutoAugmentImage autoaugment_image = 31;</code>
       * @return The autoaugmentImage.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.AutoAugmentImage getAutoaugmentImage() {
        if (autoaugmentImageBuilder_ == null) {
          if (preprocessingStepCase_ == 31) {
            return (object_detection.protos.Preprocessor.AutoAugmentImage) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.AutoAugmentImage.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 31) {
            return autoaugmentImageBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.AutoAugmentImage.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.AutoAugmentImage autoaugment_image = 31;</code>
       */
      public Builder setAutoaugmentImage(object_detection.protos.Preprocessor.AutoAugmentImage value) {
        if (autoaugmentImageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          autoaugmentImageBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 31;
        return this;
      }
      /**
       * <code>.object_detection.protos.AutoAugmentImage autoaugment_image = 31;</code>
       */
      public Builder setAutoaugmentImage(
          object_detection.protos.Preprocessor.AutoAugmentImage.Builder builderForValue) {
        if (autoaugmentImageBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          autoaugmentImageBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 31;
        return this;
      }
      /**
       * <code>.object_detection.protos.AutoAugmentImage autoaugment_image = 31;</code>
       */
      public Builder mergeAutoaugmentImage(object_detection.protos.Preprocessor.AutoAugmentImage value) {
        if (autoaugmentImageBuilder_ == null) {
          if (preprocessingStepCase_ == 31 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.AutoAugmentImage.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.AutoAugmentImage.newBuilder((object_detection.protos.Preprocessor.AutoAugmentImage) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 31) {
            autoaugmentImageBuilder_.mergeFrom(value);
          }
          autoaugmentImageBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 31;
        return this;
      }
      /**
       * <code>.object_detection.protos.AutoAugmentImage autoaugment_image = 31;</code>
       */
      public Builder clearAutoaugmentImage() {
        if (autoaugmentImageBuilder_ == null) {
          if (preprocessingStepCase_ == 31) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 31) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          autoaugmentImageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.AutoAugmentImage autoaugment_image = 31;</code>
       */
      public object_detection.protos.Preprocessor.AutoAugmentImage.Builder getAutoaugmentImageBuilder() {
        return getAutoaugmentImageFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.AutoAugmentImage autoaugment_image = 31;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.AutoAugmentImageOrBuilder getAutoaugmentImageOrBuilder() {
        if ((preprocessingStepCase_ == 31) && (autoaugmentImageBuilder_ != null)) {
          return autoaugmentImageBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 31) {
            return (object_detection.protos.Preprocessor.AutoAugmentImage) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.AutoAugmentImage.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.AutoAugmentImage autoaugment_image = 31;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.AutoAugmentImage, object_detection.protos.Preprocessor.AutoAugmentImage.Builder, object_detection.protos.Preprocessor.AutoAugmentImageOrBuilder>
          getAutoaugmentImageFieldBuilder() {
        if (autoaugmentImageBuilder_ == null) {
          if (!(preprocessingStepCase_ == 31)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.AutoAugmentImage.getDefaultInstance();
          }
          autoaugmentImageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.AutoAugmentImage, object_detection.protos.Preprocessor.AutoAugmentImage.Builder, object_detection.protos.Preprocessor.AutoAugmentImageOrBuilder>(
                  (object_detection.protos.Preprocessor.AutoAugmentImage) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 31;
        onChanged();;
        return autoaugmentImageBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.DropLabelProbabilistically, object_detection.protos.Preprocessor.DropLabelProbabilistically.Builder, object_detection.protos.Preprocessor.DropLabelProbabilisticallyOrBuilder> dropLabelProbabilisticallyBuilder_;
      /**
       * <code>.object_detection.protos.DropLabelProbabilistically drop_label_probabilistically = 32;</code>
       * @return Whether the dropLabelProbabilistically field is set.
       */
      @java.lang.Override
      public boolean hasDropLabelProbabilistically() {
        return preprocessingStepCase_ == 32;
      }
      /**
       * <code>.object_detection.protos.DropLabelProbabilistically drop_label_probabilistically = 32;</code>
       * @return The dropLabelProbabilistically.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.DropLabelProbabilistically getDropLabelProbabilistically() {
        if (dropLabelProbabilisticallyBuilder_ == null) {
          if (preprocessingStepCase_ == 32) {
            return (object_detection.protos.Preprocessor.DropLabelProbabilistically) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.DropLabelProbabilistically.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 32) {
            return dropLabelProbabilisticallyBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.DropLabelProbabilistically.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.DropLabelProbabilistically drop_label_probabilistically = 32;</code>
       */
      public Builder setDropLabelProbabilistically(object_detection.protos.Preprocessor.DropLabelProbabilistically value) {
        if (dropLabelProbabilisticallyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          dropLabelProbabilisticallyBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 32;
        return this;
      }
      /**
       * <code>.object_detection.protos.DropLabelProbabilistically drop_label_probabilistically = 32;</code>
       */
      public Builder setDropLabelProbabilistically(
          object_detection.protos.Preprocessor.DropLabelProbabilistically.Builder builderForValue) {
        if (dropLabelProbabilisticallyBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          dropLabelProbabilisticallyBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 32;
        return this;
      }
      /**
       * <code>.object_detection.protos.DropLabelProbabilistically drop_label_probabilistically = 32;</code>
       */
      public Builder mergeDropLabelProbabilistically(object_detection.protos.Preprocessor.DropLabelProbabilistically value) {
        if (dropLabelProbabilisticallyBuilder_ == null) {
          if (preprocessingStepCase_ == 32 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.DropLabelProbabilistically.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.DropLabelProbabilistically.newBuilder((object_detection.protos.Preprocessor.DropLabelProbabilistically) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 32) {
            dropLabelProbabilisticallyBuilder_.mergeFrom(value);
          }
          dropLabelProbabilisticallyBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 32;
        return this;
      }
      /**
       * <code>.object_detection.protos.DropLabelProbabilistically drop_label_probabilistically = 32;</code>
       */
      public Builder clearDropLabelProbabilistically() {
        if (dropLabelProbabilisticallyBuilder_ == null) {
          if (preprocessingStepCase_ == 32) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 32) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          dropLabelProbabilisticallyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.DropLabelProbabilistically drop_label_probabilistically = 32;</code>
       */
      public object_detection.protos.Preprocessor.DropLabelProbabilistically.Builder getDropLabelProbabilisticallyBuilder() {
        return getDropLabelProbabilisticallyFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.DropLabelProbabilistically drop_label_probabilistically = 32;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.DropLabelProbabilisticallyOrBuilder getDropLabelProbabilisticallyOrBuilder() {
        if ((preprocessingStepCase_ == 32) && (dropLabelProbabilisticallyBuilder_ != null)) {
          return dropLabelProbabilisticallyBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 32) {
            return (object_detection.protos.Preprocessor.DropLabelProbabilistically) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.DropLabelProbabilistically.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.DropLabelProbabilistically drop_label_probabilistically = 32;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.DropLabelProbabilistically, object_detection.protos.Preprocessor.DropLabelProbabilistically.Builder, object_detection.protos.Preprocessor.DropLabelProbabilisticallyOrBuilder>
          getDropLabelProbabilisticallyFieldBuilder() {
        if (dropLabelProbabilisticallyBuilder_ == null) {
          if (!(preprocessingStepCase_ == 32)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.DropLabelProbabilistically.getDefaultInstance();
          }
          dropLabelProbabilisticallyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.DropLabelProbabilistically, object_detection.protos.Preprocessor.DropLabelProbabilistically.Builder, object_detection.protos.Preprocessor.DropLabelProbabilisticallyOrBuilder>(
                  (object_detection.protos.Preprocessor.DropLabelProbabilistically) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 32;
        onChanged();;
        return dropLabelProbabilisticallyBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RemapLabels, object_detection.protos.Preprocessor.RemapLabels.Builder, object_detection.protos.Preprocessor.RemapLabelsOrBuilder> remapLabelsBuilder_;
      /**
       * <code>.object_detection.protos.RemapLabels remap_labels = 33;</code>
       * @return Whether the remapLabels field is set.
       */
      @java.lang.Override
      public boolean hasRemapLabels() {
        return preprocessingStepCase_ == 33;
      }
      /**
       * <code>.object_detection.protos.RemapLabels remap_labels = 33;</code>
       * @return The remapLabels.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RemapLabels getRemapLabels() {
        if (remapLabelsBuilder_ == null) {
          if (preprocessingStepCase_ == 33) {
            return (object_detection.protos.Preprocessor.RemapLabels) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RemapLabels.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 33) {
            return remapLabelsBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RemapLabels.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RemapLabels remap_labels = 33;</code>
       */
      public Builder setRemapLabels(object_detection.protos.Preprocessor.RemapLabels value) {
        if (remapLabelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          remapLabelsBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 33;
        return this;
      }
      /**
       * <code>.object_detection.protos.RemapLabels remap_labels = 33;</code>
       */
      public Builder setRemapLabels(
          object_detection.protos.Preprocessor.RemapLabels.Builder builderForValue) {
        if (remapLabelsBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          remapLabelsBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 33;
        return this;
      }
      /**
       * <code>.object_detection.protos.RemapLabels remap_labels = 33;</code>
       */
      public Builder mergeRemapLabels(object_detection.protos.Preprocessor.RemapLabels value) {
        if (remapLabelsBuilder_ == null) {
          if (preprocessingStepCase_ == 33 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RemapLabels.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RemapLabels.newBuilder((object_detection.protos.Preprocessor.RemapLabels) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 33) {
            remapLabelsBuilder_.mergeFrom(value);
          }
          remapLabelsBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 33;
        return this;
      }
      /**
       * <code>.object_detection.protos.RemapLabels remap_labels = 33;</code>
       */
      public Builder clearRemapLabels() {
        if (remapLabelsBuilder_ == null) {
          if (preprocessingStepCase_ == 33) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 33) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          remapLabelsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RemapLabels remap_labels = 33;</code>
       */
      public object_detection.protos.Preprocessor.RemapLabels.Builder getRemapLabelsBuilder() {
        return getRemapLabelsFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RemapLabels remap_labels = 33;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RemapLabelsOrBuilder getRemapLabelsOrBuilder() {
        if ((preprocessingStepCase_ == 33) && (remapLabelsBuilder_ != null)) {
          return remapLabelsBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 33) {
            return (object_detection.protos.Preprocessor.RemapLabels) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RemapLabels.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RemapLabels remap_labels = 33;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RemapLabels, object_detection.protos.Preprocessor.RemapLabels.Builder, object_detection.protos.Preprocessor.RemapLabelsOrBuilder>
          getRemapLabelsFieldBuilder() {
        if (remapLabelsBuilder_ == null) {
          if (!(preprocessingStepCase_ == 33)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RemapLabels.getDefaultInstance();
          }
          remapLabelsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RemapLabels, object_detection.protos.Preprocessor.RemapLabels.Builder, object_detection.protos.Preprocessor.RemapLabelsOrBuilder>(
                  (object_detection.protos.Preprocessor.RemapLabels) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 33;
        onChanged();;
        return remapLabelsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomJpegQuality, object_detection.protos.Preprocessor.RandomJpegQuality.Builder, object_detection.protos.Preprocessor.RandomJpegQualityOrBuilder> randomJpegQualityBuilder_;
      /**
       * <code>.object_detection.protos.RandomJpegQuality random_jpeg_quality = 34;</code>
       * @return Whether the randomJpegQuality field is set.
       */
      @java.lang.Override
      public boolean hasRandomJpegQuality() {
        return preprocessingStepCase_ == 34;
      }
      /**
       * <code>.object_detection.protos.RandomJpegQuality random_jpeg_quality = 34;</code>
       * @return The randomJpegQuality.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomJpegQuality getRandomJpegQuality() {
        if (randomJpegQualityBuilder_ == null) {
          if (preprocessingStepCase_ == 34) {
            return (object_detection.protos.Preprocessor.RandomJpegQuality) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomJpegQuality.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 34) {
            return randomJpegQualityBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomJpegQuality.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomJpegQuality random_jpeg_quality = 34;</code>
       */
      public Builder setRandomJpegQuality(object_detection.protos.Preprocessor.RandomJpegQuality value) {
        if (randomJpegQualityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomJpegQualityBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 34;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomJpegQuality random_jpeg_quality = 34;</code>
       */
      public Builder setRandomJpegQuality(
          object_detection.protos.Preprocessor.RandomJpegQuality.Builder builderForValue) {
        if (randomJpegQualityBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomJpegQualityBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 34;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomJpegQuality random_jpeg_quality = 34;</code>
       */
      public Builder mergeRandomJpegQuality(object_detection.protos.Preprocessor.RandomJpegQuality value) {
        if (randomJpegQualityBuilder_ == null) {
          if (preprocessingStepCase_ == 34 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomJpegQuality.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomJpegQuality.newBuilder((object_detection.protos.Preprocessor.RandomJpegQuality) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 34) {
            randomJpegQualityBuilder_.mergeFrom(value);
          }
          randomJpegQualityBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 34;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomJpegQuality random_jpeg_quality = 34;</code>
       */
      public Builder clearRandomJpegQuality() {
        if (randomJpegQualityBuilder_ == null) {
          if (preprocessingStepCase_ == 34) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 34) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomJpegQualityBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomJpegQuality random_jpeg_quality = 34;</code>
       */
      public object_detection.protos.Preprocessor.RandomJpegQuality.Builder getRandomJpegQualityBuilder() {
        return getRandomJpegQualityFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomJpegQuality random_jpeg_quality = 34;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomJpegQualityOrBuilder getRandomJpegQualityOrBuilder() {
        if ((preprocessingStepCase_ == 34) && (randomJpegQualityBuilder_ != null)) {
          return randomJpegQualityBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 34) {
            return (object_detection.protos.Preprocessor.RandomJpegQuality) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomJpegQuality.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomJpegQuality random_jpeg_quality = 34;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomJpegQuality, object_detection.protos.Preprocessor.RandomJpegQuality.Builder, object_detection.protos.Preprocessor.RandomJpegQualityOrBuilder>
          getRandomJpegQualityFieldBuilder() {
        if (randomJpegQualityBuilder_ == null) {
          if (!(preprocessingStepCase_ == 34)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomJpegQuality.getDefaultInstance();
          }
          randomJpegQualityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomJpegQuality, object_detection.protos.Preprocessor.RandomJpegQuality.Builder, object_detection.protos.Preprocessor.RandomJpegQualityOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomJpegQuality) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 34;
        onChanged();;
        return randomJpegQualityBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels, object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.Builder, object_detection.protos.Preprocessor.RandomDownscaleToTargetPixelsOrBuilder> randomDownscaleToTargetPixelsBuilder_;
      /**
       * <code>.object_detection.protos.RandomDownscaleToTargetPixels random_downscale_to_target_pixels = 35;</code>
       * @return Whether the randomDownscaleToTargetPixels field is set.
       */
      @java.lang.Override
      public boolean hasRandomDownscaleToTargetPixels() {
        return preprocessingStepCase_ == 35;
      }
      /**
       * <code>.object_detection.protos.RandomDownscaleToTargetPixels random_downscale_to_target_pixels = 35;</code>
       * @return The randomDownscaleToTargetPixels.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels getRandomDownscaleToTargetPixels() {
        if (randomDownscaleToTargetPixelsBuilder_ == null) {
          if (preprocessingStepCase_ == 35) {
            return (object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 35) {
            return randomDownscaleToTargetPixelsBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomDownscaleToTargetPixels random_downscale_to_target_pixels = 35;</code>
       */
      public Builder setRandomDownscaleToTargetPixels(object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels value) {
        if (randomDownscaleToTargetPixelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomDownscaleToTargetPixelsBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 35;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomDownscaleToTargetPixels random_downscale_to_target_pixels = 35;</code>
       */
      public Builder setRandomDownscaleToTargetPixels(
          object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.Builder builderForValue) {
        if (randomDownscaleToTargetPixelsBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomDownscaleToTargetPixelsBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 35;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomDownscaleToTargetPixels random_downscale_to_target_pixels = 35;</code>
       */
      public Builder mergeRandomDownscaleToTargetPixels(object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels value) {
        if (randomDownscaleToTargetPixelsBuilder_ == null) {
          if (preprocessingStepCase_ == 35 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.newBuilder((object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 35) {
            randomDownscaleToTargetPixelsBuilder_.mergeFrom(value);
          }
          randomDownscaleToTargetPixelsBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 35;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomDownscaleToTargetPixels random_downscale_to_target_pixels = 35;</code>
       */
      public Builder clearRandomDownscaleToTargetPixels() {
        if (randomDownscaleToTargetPixelsBuilder_ == null) {
          if (preprocessingStepCase_ == 35) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 35) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomDownscaleToTargetPixelsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomDownscaleToTargetPixels random_downscale_to_target_pixels = 35;</code>
       */
      public object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.Builder getRandomDownscaleToTargetPixelsBuilder() {
        return getRandomDownscaleToTargetPixelsFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomDownscaleToTargetPixels random_downscale_to_target_pixels = 35;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomDownscaleToTargetPixelsOrBuilder getRandomDownscaleToTargetPixelsOrBuilder() {
        if ((preprocessingStepCase_ == 35) && (randomDownscaleToTargetPixelsBuilder_ != null)) {
          return randomDownscaleToTargetPixelsBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 35) {
            return (object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomDownscaleToTargetPixels random_downscale_to_target_pixels = 35;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels, object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.Builder, object_detection.protos.Preprocessor.RandomDownscaleToTargetPixelsOrBuilder>
          getRandomDownscaleToTargetPixelsFieldBuilder() {
        if (randomDownscaleToTargetPixelsBuilder_ == null) {
          if (!(preprocessingStepCase_ == 35)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.getDefaultInstance();
          }
          randomDownscaleToTargetPixelsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels, object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.Builder, object_detection.protos.Preprocessor.RandomDownscaleToTargetPixelsOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 35;
        onChanged();;
        return randomDownscaleToTargetPixelsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomPatchGaussian, object_detection.protos.Preprocessor.RandomPatchGaussian.Builder, object_detection.protos.Preprocessor.RandomPatchGaussianOrBuilder> randomPatchGaussianBuilder_;
      /**
       * <code>.object_detection.protos.RandomPatchGaussian random_patch_gaussian = 36;</code>
       * @return Whether the randomPatchGaussian field is set.
       */
      @java.lang.Override
      public boolean hasRandomPatchGaussian() {
        return preprocessingStepCase_ == 36;
      }
      /**
       * <code>.object_detection.protos.RandomPatchGaussian random_patch_gaussian = 36;</code>
       * @return The randomPatchGaussian.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomPatchGaussian getRandomPatchGaussian() {
        if (randomPatchGaussianBuilder_ == null) {
          if (preprocessingStepCase_ == 36) {
            return (object_detection.protos.Preprocessor.RandomPatchGaussian) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomPatchGaussian.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 36) {
            return randomPatchGaussianBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomPatchGaussian.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomPatchGaussian random_patch_gaussian = 36;</code>
       */
      public Builder setRandomPatchGaussian(object_detection.protos.Preprocessor.RandomPatchGaussian value) {
        if (randomPatchGaussianBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomPatchGaussianBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 36;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomPatchGaussian random_patch_gaussian = 36;</code>
       */
      public Builder setRandomPatchGaussian(
          object_detection.protos.Preprocessor.RandomPatchGaussian.Builder builderForValue) {
        if (randomPatchGaussianBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomPatchGaussianBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 36;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomPatchGaussian random_patch_gaussian = 36;</code>
       */
      public Builder mergeRandomPatchGaussian(object_detection.protos.Preprocessor.RandomPatchGaussian value) {
        if (randomPatchGaussianBuilder_ == null) {
          if (preprocessingStepCase_ == 36 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomPatchGaussian.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomPatchGaussian.newBuilder((object_detection.protos.Preprocessor.RandomPatchGaussian) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 36) {
            randomPatchGaussianBuilder_.mergeFrom(value);
          }
          randomPatchGaussianBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 36;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomPatchGaussian random_patch_gaussian = 36;</code>
       */
      public Builder clearRandomPatchGaussian() {
        if (randomPatchGaussianBuilder_ == null) {
          if (preprocessingStepCase_ == 36) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 36) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomPatchGaussianBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomPatchGaussian random_patch_gaussian = 36;</code>
       */
      public object_detection.protos.Preprocessor.RandomPatchGaussian.Builder getRandomPatchGaussianBuilder() {
        return getRandomPatchGaussianFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomPatchGaussian random_patch_gaussian = 36;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomPatchGaussianOrBuilder getRandomPatchGaussianOrBuilder() {
        if ((preprocessingStepCase_ == 36) && (randomPatchGaussianBuilder_ != null)) {
          return randomPatchGaussianBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 36) {
            return (object_detection.protos.Preprocessor.RandomPatchGaussian) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomPatchGaussian.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomPatchGaussian random_patch_gaussian = 36;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomPatchGaussian, object_detection.protos.Preprocessor.RandomPatchGaussian.Builder, object_detection.protos.Preprocessor.RandomPatchGaussianOrBuilder>
          getRandomPatchGaussianFieldBuilder() {
        if (randomPatchGaussianBuilder_ == null) {
          if (!(preprocessingStepCase_ == 36)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomPatchGaussian.getDefaultInstance();
          }
          randomPatchGaussianBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomPatchGaussian, object_detection.protos.Preprocessor.RandomPatchGaussian.Builder, object_detection.protos.Preprocessor.RandomPatchGaussianOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomPatchGaussian) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 36;
        onChanged();;
        return randomPatchGaussianBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomSquareCropByScale, object_detection.protos.Preprocessor.RandomSquareCropByScale.Builder, object_detection.protos.Preprocessor.RandomSquareCropByScaleOrBuilder> randomSquareCropByScaleBuilder_;
      /**
       * <code>.object_detection.protos.RandomSquareCropByScale random_square_crop_by_scale = 37;</code>
       * @return Whether the randomSquareCropByScale field is set.
       */
      @java.lang.Override
      public boolean hasRandomSquareCropByScale() {
        return preprocessingStepCase_ == 37;
      }
      /**
       * <code>.object_detection.protos.RandomSquareCropByScale random_square_crop_by_scale = 37;</code>
       * @return The randomSquareCropByScale.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomSquareCropByScale getRandomSquareCropByScale() {
        if (randomSquareCropByScaleBuilder_ == null) {
          if (preprocessingStepCase_ == 37) {
            return (object_detection.protos.Preprocessor.RandomSquareCropByScale) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomSquareCropByScale.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 37) {
            return randomSquareCropByScaleBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomSquareCropByScale.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomSquareCropByScale random_square_crop_by_scale = 37;</code>
       */
      public Builder setRandomSquareCropByScale(object_detection.protos.Preprocessor.RandomSquareCropByScale value) {
        if (randomSquareCropByScaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomSquareCropByScaleBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 37;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomSquareCropByScale random_square_crop_by_scale = 37;</code>
       */
      public Builder setRandomSquareCropByScale(
          object_detection.protos.Preprocessor.RandomSquareCropByScale.Builder builderForValue) {
        if (randomSquareCropByScaleBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomSquareCropByScaleBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 37;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomSquareCropByScale random_square_crop_by_scale = 37;</code>
       */
      public Builder mergeRandomSquareCropByScale(object_detection.protos.Preprocessor.RandomSquareCropByScale value) {
        if (randomSquareCropByScaleBuilder_ == null) {
          if (preprocessingStepCase_ == 37 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomSquareCropByScale.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomSquareCropByScale.newBuilder((object_detection.protos.Preprocessor.RandomSquareCropByScale) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 37) {
            randomSquareCropByScaleBuilder_.mergeFrom(value);
          }
          randomSquareCropByScaleBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 37;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomSquareCropByScale random_square_crop_by_scale = 37;</code>
       */
      public Builder clearRandomSquareCropByScale() {
        if (randomSquareCropByScaleBuilder_ == null) {
          if (preprocessingStepCase_ == 37) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 37) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomSquareCropByScaleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomSquareCropByScale random_square_crop_by_scale = 37;</code>
       */
      public object_detection.protos.Preprocessor.RandomSquareCropByScale.Builder getRandomSquareCropByScaleBuilder() {
        return getRandomSquareCropByScaleFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomSquareCropByScale random_square_crop_by_scale = 37;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomSquareCropByScaleOrBuilder getRandomSquareCropByScaleOrBuilder() {
        if ((preprocessingStepCase_ == 37) && (randomSquareCropByScaleBuilder_ != null)) {
          return randomSquareCropByScaleBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 37) {
            return (object_detection.protos.Preprocessor.RandomSquareCropByScale) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomSquareCropByScale.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomSquareCropByScale random_square_crop_by_scale = 37;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomSquareCropByScale, object_detection.protos.Preprocessor.RandomSquareCropByScale.Builder, object_detection.protos.Preprocessor.RandomSquareCropByScaleOrBuilder>
          getRandomSquareCropByScaleFieldBuilder() {
        if (randomSquareCropByScaleBuilder_ == null) {
          if (!(preprocessingStepCase_ == 37)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomSquareCropByScale.getDefaultInstance();
          }
          randomSquareCropByScaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomSquareCropByScale, object_detection.protos.Preprocessor.RandomSquareCropByScale.Builder, object_detection.protos.Preprocessor.RandomSquareCropByScaleOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomSquareCropByScale) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 37;
        onChanged();;
        return randomSquareCropByScaleBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare, object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.Builder, object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquareOrBuilder> randomScaleCropAndPadToSquareBuilder_;
      /**
       * <code>.object_detection.protos.RandomScaleCropAndPadToSquare random_scale_crop_and_pad_to_square = 38;</code>
       * @return Whether the randomScaleCropAndPadToSquare field is set.
       */
      @java.lang.Override
      public boolean hasRandomScaleCropAndPadToSquare() {
        return preprocessingStepCase_ == 38;
      }
      /**
       * <code>.object_detection.protos.RandomScaleCropAndPadToSquare random_scale_crop_and_pad_to_square = 38;</code>
       * @return The randomScaleCropAndPadToSquare.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare getRandomScaleCropAndPadToSquare() {
        if (randomScaleCropAndPadToSquareBuilder_ == null) {
          if (preprocessingStepCase_ == 38) {
            return (object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 38) {
            return randomScaleCropAndPadToSquareBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomScaleCropAndPadToSquare random_scale_crop_and_pad_to_square = 38;</code>
       */
      public Builder setRandomScaleCropAndPadToSquare(object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare value) {
        if (randomScaleCropAndPadToSquareBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          randomScaleCropAndPadToSquareBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 38;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomScaleCropAndPadToSquare random_scale_crop_and_pad_to_square = 38;</code>
       */
      public Builder setRandomScaleCropAndPadToSquare(
          object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.Builder builderForValue) {
        if (randomScaleCropAndPadToSquareBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          randomScaleCropAndPadToSquareBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 38;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomScaleCropAndPadToSquare random_scale_crop_and_pad_to_square = 38;</code>
       */
      public Builder mergeRandomScaleCropAndPadToSquare(object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare value) {
        if (randomScaleCropAndPadToSquareBuilder_ == null) {
          if (preprocessingStepCase_ == 38 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.newBuilder((object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 38) {
            randomScaleCropAndPadToSquareBuilder_.mergeFrom(value);
          }
          randomScaleCropAndPadToSquareBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 38;
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomScaleCropAndPadToSquare random_scale_crop_and_pad_to_square = 38;</code>
       */
      public Builder clearRandomScaleCropAndPadToSquare() {
        if (randomScaleCropAndPadToSquareBuilder_ == null) {
          if (preprocessingStepCase_ == 38) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 38) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          randomScaleCropAndPadToSquareBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.RandomScaleCropAndPadToSquare random_scale_crop_and_pad_to_square = 38;</code>
       */
      public object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.Builder getRandomScaleCropAndPadToSquareBuilder() {
        return getRandomScaleCropAndPadToSquareFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.RandomScaleCropAndPadToSquare random_scale_crop_and_pad_to_square = 38;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquareOrBuilder getRandomScaleCropAndPadToSquareOrBuilder() {
        if ((preprocessingStepCase_ == 38) && (randomScaleCropAndPadToSquareBuilder_ != null)) {
          return randomScaleCropAndPadToSquareBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 38) {
            return (object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.RandomScaleCropAndPadToSquare random_scale_crop_and_pad_to_square = 38;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare, object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.Builder, object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquareOrBuilder>
          getRandomScaleCropAndPadToSquareFieldBuilder() {
        if (randomScaleCropAndPadToSquareBuilder_ == null) {
          if (!(preprocessingStepCase_ == 38)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.getDefaultInstance();
          }
          randomScaleCropAndPadToSquareBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare, object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.Builder, object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquareOrBuilder>(
                  (object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 38;
        onChanged();;
        return randomScaleCropAndPadToSquareBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.AdjustGamma, object_detection.protos.Preprocessor.AdjustGamma.Builder, object_detection.protos.Preprocessor.AdjustGammaOrBuilder> adjustGammaBuilder_;
      /**
       * <code>.object_detection.protos.AdjustGamma adjust_gamma = 39;</code>
       * @return Whether the adjustGamma field is set.
       */
      @java.lang.Override
      public boolean hasAdjustGamma() {
        return preprocessingStepCase_ == 39;
      }
      /**
       * <code>.object_detection.protos.AdjustGamma adjust_gamma = 39;</code>
       * @return The adjustGamma.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.AdjustGamma getAdjustGamma() {
        if (adjustGammaBuilder_ == null) {
          if (preprocessingStepCase_ == 39) {
            return (object_detection.protos.Preprocessor.AdjustGamma) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.AdjustGamma.getDefaultInstance();
        } else {
          if (preprocessingStepCase_ == 39) {
            return adjustGammaBuilder_.getMessage();
          }
          return object_detection.protos.Preprocessor.AdjustGamma.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.AdjustGamma adjust_gamma = 39;</code>
       */
      public Builder setAdjustGamma(object_detection.protos.Preprocessor.AdjustGamma value) {
        if (adjustGammaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preprocessingStep_ = value;
          onChanged();
        } else {
          adjustGammaBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 39;
        return this;
      }
      /**
       * <code>.object_detection.protos.AdjustGamma adjust_gamma = 39;</code>
       */
      public Builder setAdjustGamma(
          object_detection.protos.Preprocessor.AdjustGamma.Builder builderForValue) {
        if (adjustGammaBuilder_ == null) {
          preprocessingStep_ = builderForValue.build();
          onChanged();
        } else {
          adjustGammaBuilder_.setMessage(builderForValue.build());
        }
        preprocessingStepCase_ = 39;
        return this;
      }
      /**
       * <code>.object_detection.protos.AdjustGamma adjust_gamma = 39;</code>
       */
      public Builder mergeAdjustGamma(object_detection.protos.Preprocessor.AdjustGamma value) {
        if (adjustGammaBuilder_ == null) {
          if (preprocessingStepCase_ == 39 &&
              preprocessingStep_ != object_detection.protos.Preprocessor.AdjustGamma.getDefaultInstance()) {
            preprocessingStep_ = object_detection.protos.Preprocessor.AdjustGamma.newBuilder((object_detection.protos.Preprocessor.AdjustGamma) preprocessingStep_)
                .mergeFrom(value).buildPartial();
          } else {
            preprocessingStep_ = value;
          }
          onChanged();
        } else {
          if (preprocessingStepCase_ == 39) {
            adjustGammaBuilder_.mergeFrom(value);
          }
          adjustGammaBuilder_.setMessage(value);
        }
        preprocessingStepCase_ = 39;
        return this;
      }
      /**
       * <code>.object_detection.protos.AdjustGamma adjust_gamma = 39;</code>
       */
      public Builder clearAdjustGamma() {
        if (adjustGammaBuilder_ == null) {
          if (preprocessingStepCase_ == 39) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
            onChanged();
          }
        } else {
          if (preprocessingStepCase_ == 39) {
            preprocessingStepCase_ = 0;
            preprocessingStep_ = null;
          }
          adjustGammaBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.object_detection.protos.AdjustGamma adjust_gamma = 39;</code>
       */
      public object_detection.protos.Preprocessor.AdjustGamma.Builder getAdjustGammaBuilder() {
        return getAdjustGammaFieldBuilder().getBuilder();
      }
      /**
       * <code>.object_detection.protos.AdjustGamma adjust_gamma = 39;</code>
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.AdjustGammaOrBuilder getAdjustGammaOrBuilder() {
        if ((preprocessingStepCase_ == 39) && (adjustGammaBuilder_ != null)) {
          return adjustGammaBuilder_.getMessageOrBuilder();
        } else {
          if (preprocessingStepCase_ == 39) {
            return (object_detection.protos.Preprocessor.AdjustGamma) preprocessingStep_;
          }
          return object_detection.protos.Preprocessor.AdjustGamma.getDefaultInstance();
        }
      }
      /**
       * <code>.object_detection.protos.AdjustGamma adjust_gamma = 39;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          object_detection.protos.Preprocessor.AdjustGamma, object_detection.protos.Preprocessor.AdjustGamma.Builder, object_detection.protos.Preprocessor.AdjustGammaOrBuilder>
          getAdjustGammaFieldBuilder() {
        if (adjustGammaBuilder_ == null) {
          if (!(preprocessingStepCase_ == 39)) {
            preprocessingStep_ = object_detection.protos.Preprocessor.AdjustGamma.getDefaultInstance();
          }
          adjustGammaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              object_detection.protos.Preprocessor.AdjustGamma, object_detection.protos.Preprocessor.AdjustGamma.Builder, object_detection.protos.Preprocessor.AdjustGammaOrBuilder>(
                  (object_detection.protos.Preprocessor.AdjustGamma) preprocessingStep_,
                  getParentForChildren(),
                  isClean());
          preprocessingStep_ = null;
        }
        preprocessingStepCase_ = 39;
        onChanged();;
        return adjustGammaBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.PreprocessingStep)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.PreprocessingStep)
    private static final object_detection.protos.Preprocessor.PreprocessingStep DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.PreprocessingStep();
    }

    public static object_detection.protos.Preprocessor.PreprocessingStep getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PreprocessingStep>
        PARSER = new com.google.protobuf.AbstractParser<PreprocessingStep>() {
      @java.lang.Override
      public PreprocessingStep parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PreprocessingStep(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PreprocessingStep> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PreprocessingStep> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.PreprocessingStep getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NormalizeImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.NormalizeImage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float original_minval = 1;</code>
     * @return Whether the originalMinval field is set.
     */
    boolean hasOriginalMinval();
    /**
     * <code>optional float original_minval = 1;</code>
     * @return The originalMinval.
     */
    float getOriginalMinval();

    /**
     * <code>optional float original_maxval = 2;</code>
     * @return Whether the originalMaxval field is set.
     */
    boolean hasOriginalMaxval();
    /**
     * <code>optional float original_maxval = 2;</code>
     * @return The originalMaxval.
     */
    float getOriginalMaxval();

    /**
     * <code>optional float target_minval = 3 [default = 0];</code>
     * @return Whether the targetMinval field is set.
     */
    boolean hasTargetMinval();
    /**
     * <code>optional float target_minval = 3 [default = 0];</code>
     * @return The targetMinval.
     */
    float getTargetMinval();

    /**
     * <code>optional float target_maxval = 4 [default = 1];</code>
     * @return Whether the targetMaxval field is set.
     */
    boolean hasTargetMaxval();
    /**
     * <code>optional float target_maxval = 4 [default = 1];</code>
     * @return The targetMaxval.
     */
    float getTargetMaxval();
  }
  /**
   * <pre>
   * Normalizes pixel values in an image.
   * For every channel in the image, moves the pixel values from the range
   * [original_minval, original_maxval] to [target_minval, target_maxval].
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.NormalizeImage}
   */
  public static final class NormalizeImage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.NormalizeImage)
      NormalizeImageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NormalizeImage.newBuilder() to construct.
    private NormalizeImage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NormalizeImage() {
      targetMaxval_ = 1F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NormalizeImage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NormalizeImage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              originalMinval_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              originalMaxval_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              targetMinval_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              targetMaxval_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_NormalizeImage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_NormalizeImage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.NormalizeImage.class, object_detection.protos.Preprocessor.NormalizeImage.Builder.class);
    }

    private int bitField0_;
    public static final int ORIGINAL_MINVAL_FIELD_NUMBER = 1;
    private float originalMinval_;
    /**
     * <code>optional float original_minval = 1;</code>
     * @return Whether the originalMinval field is set.
     */
    @java.lang.Override
    public boolean hasOriginalMinval() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional float original_minval = 1;</code>
     * @return The originalMinval.
     */
    @java.lang.Override
    public float getOriginalMinval() {
      return originalMinval_;
    }

    public static final int ORIGINAL_MAXVAL_FIELD_NUMBER = 2;
    private float originalMaxval_;
    /**
     * <code>optional float original_maxval = 2;</code>
     * @return Whether the originalMaxval field is set.
     */
    @java.lang.Override
    public boolean hasOriginalMaxval() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional float original_maxval = 2;</code>
     * @return The originalMaxval.
     */
    @java.lang.Override
    public float getOriginalMaxval() {
      return originalMaxval_;
    }

    public static final int TARGET_MINVAL_FIELD_NUMBER = 3;
    private float targetMinval_;
    /**
     * <code>optional float target_minval = 3 [default = 0];</code>
     * @return Whether the targetMinval field is set.
     */
    @java.lang.Override
    public boolean hasTargetMinval() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional float target_minval = 3 [default = 0];</code>
     * @return The targetMinval.
     */
    @java.lang.Override
    public float getTargetMinval() {
      return targetMinval_;
    }

    public static final int TARGET_MAXVAL_FIELD_NUMBER = 4;
    private float targetMaxval_;
    /**
     * <code>optional float target_maxval = 4 [default = 1];</code>
     * @return Whether the targetMaxval field is set.
     */
    @java.lang.Override
    public boolean hasTargetMaxval() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional float target_maxval = 4 [default = 1];</code>
     * @return The targetMaxval.
     */
    @java.lang.Override
    public float getTargetMaxval() {
      return targetMaxval_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, originalMinval_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, originalMaxval_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, targetMinval_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(4, targetMaxval_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, originalMinval_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, originalMaxval_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, targetMinval_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, targetMaxval_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.NormalizeImage)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.NormalizeImage other = (object_detection.protos.Preprocessor.NormalizeImage) obj;

      if (hasOriginalMinval() != other.hasOriginalMinval()) return false;
      if (hasOriginalMinval()) {
        if (java.lang.Float.floatToIntBits(getOriginalMinval())
            != java.lang.Float.floatToIntBits(
                other.getOriginalMinval())) return false;
      }
      if (hasOriginalMaxval() != other.hasOriginalMaxval()) return false;
      if (hasOriginalMaxval()) {
        if (java.lang.Float.floatToIntBits(getOriginalMaxval())
            != java.lang.Float.floatToIntBits(
                other.getOriginalMaxval())) return false;
      }
      if (hasTargetMinval() != other.hasTargetMinval()) return false;
      if (hasTargetMinval()) {
        if (java.lang.Float.floatToIntBits(getTargetMinval())
            != java.lang.Float.floatToIntBits(
                other.getTargetMinval())) return false;
      }
      if (hasTargetMaxval() != other.hasTargetMaxval()) return false;
      if (hasTargetMaxval()) {
        if (java.lang.Float.floatToIntBits(getTargetMaxval())
            != java.lang.Float.floatToIntBits(
                other.getTargetMaxval())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOriginalMinval()) {
        hash = (37 * hash) + ORIGINAL_MINVAL_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getOriginalMinval());
      }
      if (hasOriginalMaxval()) {
        hash = (37 * hash) + ORIGINAL_MAXVAL_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getOriginalMaxval());
      }
      if (hasTargetMinval()) {
        hash = (37 * hash) + TARGET_MINVAL_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTargetMinval());
      }
      if (hasTargetMaxval()) {
        hash = (37 * hash) + TARGET_MAXVAL_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTargetMaxval());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.NormalizeImage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.NormalizeImage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.NormalizeImage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.NormalizeImage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.NormalizeImage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.NormalizeImage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.NormalizeImage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.NormalizeImage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.NormalizeImage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.NormalizeImage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.NormalizeImage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.NormalizeImage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.NormalizeImage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Normalizes pixel values in an image.
     * For every channel in the image, moves the pixel values from the range
     * [original_minval, original_maxval] to [target_minval, target_maxval].
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.NormalizeImage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.NormalizeImage)
        object_detection.protos.Preprocessor.NormalizeImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_NormalizeImage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_NormalizeImage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.NormalizeImage.class, object_detection.protos.Preprocessor.NormalizeImage.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.NormalizeImage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        originalMinval_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        originalMaxval_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        targetMinval_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        targetMaxval_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_NormalizeImage_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.NormalizeImage getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.NormalizeImage.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.NormalizeImage build() {
        object_detection.protos.Preprocessor.NormalizeImage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.NormalizeImage buildPartial() {
        object_detection.protos.Preprocessor.NormalizeImage result = new object_detection.protos.Preprocessor.NormalizeImage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.originalMinval_ = originalMinval_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.originalMaxval_ = originalMaxval_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.targetMinval_ = targetMinval_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.targetMaxval_ = targetMaxval_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.NormalizeImage) {
          return mergeFrom((object_detection.protos.Preprocessor.NormalizeImage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.NormalizeImage other) {
        if (other == object_detection.protos.Preprocessor.NormalizeImage.getDefaultInstance()) return this;
        if (other.hasOriginalMinval()) {
          setOriginalMinval(other.getOriginalMinval());
        }
        if (other.hasOriginalMaxval()) {
          setOriginalMaxval(other.getOriginalMaxval());
        }
        if (other.hasTargetMinval()) {
          setTargetMinval(other.getTargetMinval());
        }
        if (other.hasTargetMaxval()) {
          setTargetMaxval(other.getTargetMaxval());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.NormalizeImage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.NormalizeImage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float originalMinval_ ;
      /**
       * <code>optional float original_minval = 1;</code>
       * @return Whether the originalMinval field is set.
       */
      @java.lang.Override
      public boolean hasOriginalMinval() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional float original_minval = 1;</code>
       * @return The originalMinval.
       */
      @java.lang.Override
      public float getOriginalMinval() {
        return originalMinval_;
      }
      /**
       * <code>optional float original_minval = 1;</code>
       * @param value The originalMinval to set.
       * @return This builder for chaining.
       */
      public Builder setOriginalMinval(float value) {
        bitField0_ |= 0x00000001;
        originalMinval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float original_minval = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOriginalMinval() {
        bitField0_ = (bitField0_ & ~0x00000001);
        originalMinval_ = 0F;
        onChanged();
        return this;
      }

      private float originalMaxval_ ;
      /**
       * <code>optional float original_maxval = 2;</code>
       * @return Whether the originalMaxval field is set.
       */
      @java.lang.Override
      public boolean hasOriginalMaxval() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional float original_maxval = 2;</code>
       * @return The originalMaxval.
       */
      @java.lang.Override
      public float getOriginalMaxval() {
        return originalMaxval_;
      }
      /**
       * <code>optional float original_maxval = 2;</code>
       * @param value The originalMaxval to set.
       * @return This builder for chaining.
       */
      public Builder setOriginalMaxval(float value) {
        bitField0_ |= 0x00000002;
        originalMaxval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float original_maxval = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOriginalMaxval() {
        bitField0_ = (bitField0_ & ~0x00000002);
        originalMaxval_ = 0F;
        onChanged();
        return this;
      }

      private float targetMinval_ ;
      /**
       * <code>optional float target_minval = 3 [default = 0];</code>
       * @return Whether the targetMinval field is set.
       */
      @java.lang.Override
      public boolean hasTargetMinval() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional float target_minval = 3 [default = 0];</code>
       * @return The targetMinval.
       */
      @java.lang.Override
      public float getTargetMinval() {
        return targetMinval_;
      }
      /**
       * <code>optional float target_minval = 3 [default = 0];</code>
       * @param value The targetMinval to set.
       * @return This builder for chaining.
       */
      public Builder setTargetMinval(float value) {
        bitField0_ |= 0x00000004;
        targetMinval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float target_minval = 3 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetMinval() {
        bitField0_ = (bitField0_ & ~0x00000004);
        targetMinval_ = 0F;
        onChanged();
        return this;
      }

      private float targetMaxval_ = 1F;
      /**
       * <code>optional float target_maxval = 4 [default = 1];</code>
       * @return Whether the targetMaxval field is set.
       */
      @java.lang.Override
      public boolean hasTargetMaxval() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional float target_maxval = 4 [default = 1];</code>
       * @return The targetMaxval.
       */
      @java.lang.Override
      public float getTargetMaxval() {
        return targetMaxval_;
      }
      /**
       * <code>optional float target_maxval = 4 [default = 1];</code>
       * @param value The targetMaxval to set.
       * @return This builder for chaining.
       */
      public Builder setTargetMaxval(float value) {
        bitField0_ |= 0x00000008;
        targetMaxval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float target_maxval = 4 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetMaxval() {
        bitField0_ = (bitField0_ & ~0x00000008);
        targetMaxval_ = 1F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.NormalizeImage)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.NormalizeImage)
    private static final object_detection.protos.Preprocessor.NormalizeImage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.NormalizeImage();
    }

    public static object_detection.protos.Preprocessor.NormalizeImage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NormalizeImage>
        PARSER = new com.google.protobuf.AbstractParser<NormalizeImage>() {
      @java.lang.Override
      public NormalizeImage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NormalizeImage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NormalizeImage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NormalizeImage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.NormalizeImage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomHorizontalFlipOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomHorizontalFlip)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to horizontally
     * flipped indices. This is used in the event that keypoints are specified,
     * in which case when the image is horizontally flipped the keypoints will
     * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
     * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
     * the keypoint_flip_permutation below:
     * keypoint_flip_permutation: 1
     * keypoint_flip_permutation: 0
     * keypoint_flip_permutation: 2
     * keypoint_flip_permutation: 3
     * keypoint_flip_permutation: 5
     * keypoint_flip_permutation: 4
     * If nothing is specified the order of keypoint will be mantained.
     * </pre>
     *
     * <code>repeated int32 keypoint_flip_permutation = 1;</code>
     * @return A list containing the keypointFlipPermutation.
     */
    java.util.List<java.lang.Integer> getKeypointFlipPermutationList();
    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to horizontally
     * flipped indices. This is used in the event that keypoints are specified,
     * in which case when the image is horizontally flipped the keypoints will
     * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
     * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
     * the keypoint_flip_permutation below:
     * keypoint_flip_permutation: 1
     * keypoint_flip_permutation: 0
     * keypoint_flip_permutation: 2
     * keypoint_flip_permutation: 3
     * keypoint_flip_permutation: 5
     * keypoint_flip_permutation: 4
     * If nothing is specified the order of keypoint will be mantained.
     * </pre>
     *
     * <code>repeated int32 keypoint_flip_permutation = 1;</code>
     * @return The count of keypointFlipPermutation.
     */
    int getKeypointFlipPermutationCount();
    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to horizontally
     * flipped indices. This is used in the event that keypoints are specified,
     * in which case when the image is horizontally flipped the keypoints will
     * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
     * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
     * the keypoint_flip_permutation below:
     * keypoint_flip_permutation: 1
     * keypoint_flip_permutation: 0
     * keypoint_flip_permutation: 2
     * keypoint_flip_permutation: 3
     * keypoint_flip_permutation: 5
     * keypoint_flip_permutation: 4
     * If nothing is specified the order of keypoint will be mantained.
     * </pre>
     *
     * <code>repeated int32 keypoint_flip_permutation = 1;</code>
     * @param index The index of the element to return.
     * @return The keypointFlipPermutation at the given index.
     */
    int getKeypointFlipPermutation(int index);

    /**
     * <pre>
     * The probability of running this augmentation for each image.
     * </pre>
     *
     * <code>optional float probability = 2 [default = 0.5];</code>
     * @return Whether the probability field is set.
     */
    boolean hasProbability();
    /**
     * <pre>
     * The probability of running this augmentation for each image.
     * </pre>
     *
     * <code>optional float probability = 2 [default = 0.5];</code>
     * @return The probability.
     */
    float getProbability();
  }
  /**
   * <pre>
   * Randomly horizontally flips the image and detections with the specified
   * probability, default to 50% of the time.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomHorizontalFlip}
   */
  public static final class RandomHorizontalFlip extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomHorizontalFlip)
      RandomHorizontalFlipOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomHorizontalFlip.newBuilder() to construct.
    private RandomHorizontalFlip(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomHorizontalFlip() {
      keypointFlipPermutation_ = emptyIntList();
      probability_ = 0.5F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomHorizontalFlip();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomHorizontalFlip(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                keypointFlipPermutation_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              keypointFlipPermutation_.addInt(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                keypointFlipPermutation_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                keypointFlipPermutation_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 21: {
              bitField0_ |= 0x00000001;
              probability_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          keypointFlipPermutation_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomHorizontalFlip_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomHorizontalFlip_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomHorizontalFlip.class, object_detection.protos.Preprocessor.RandomHorizontalFlip.Builder.class);
    }

    private int bitField0_;
    public static final int KEYPOINT_FLIP_PERMUTATION_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList keypointFlipPermutation_;
    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to horizontally
     * flipped indices. This is used in the event that keypoints are specified,
     * in which case when the image is horizontally flipped the keypoints will
     * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
     * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
     * the keypoint_flip_permutation below:
     * keypoint_flip_permutation: 1
     * keypoint_flip_permutation: 0
     * keypoint_flip_permutation: 2
     * keypoint_flip_permutation: 3
     * keypoint_flip_permutation: 5
     * keypoint_flip_permutation: 4
     * If nothing is specified the order of keypoint will be mantained.
     * </pre>
     *
     * <code>repeated int32 keypoint_flip_permutation = 1;</code>
     * @return A list containing the keypointFlipPermutation.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getKeypointFlipPermutationList() {
      return keypointFlipPermutation_;
    }
    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to horizontally
     * flipped indices. This is used in the event that keypoints are specified,
     * in which case when the image is horizontally flipped the keypoints will
     * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
     * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
     * the keypoint_flip_permutation below:
     * keypoint_flip_permutation: 1
     * keypoint_flip_permutation: 0
     * keypoint_flip_permutation: 2
     * keypoint_flip_permutation: 3
     * keypoint_flip_permutation: 5
     * keypoint_flip_permutation: 4
     * If nothing is specified the order of keypoint will be mantained.
     * </pre>
     *
     * <code>repeated int32 keypoint_flip_permutation = 1;</code>
     * @return The count of keypointFlipPermutation.
     */
    public int getKeypointFlipPermutationCount() {
      return keypointFlipPermutation_.size();
    }
    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to horizontally
     * flipped indices. This is used in the event that keypoints are specified,
     * in which case when the image is horizontally flipped the keypoints will
     * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
     * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
     * the keypoint_flip_permutation below:
     * keypoint_flip_permutation: 1
     * keypoint_flip_permutation: 0
     * keypoint_flip_permutation: 2
     * keypoint_flip_permutation: 3
     * keypoint_flip_permutation: 5
     * keypoint_flip_permutation: 4
     * If nothing is specified the order of keypoint will be mantained.
     * </pre>
     *
     * <code>repeated int32 keypoint_flip_permutation = 1;</code>
     * @param index The index of the element to return.
     * @return The keypointFlipPermutation at the given index.
     */
    public int getKeypointFlipPermutation(int index) {
      return keypointFlipPermutation_.getInt(index);
    }

    public static final int PROBABILITY_FIELD_NUMBER = 2;
    private float probability_;
    /**
     * <pre>
     * The probability of running this augmentation for each image.
     * </pre>
     *
     * <code>optional float probability = 2 [default = 0.5];</code>
     * @return Whether the probability field is set.
     */
    @java.lang.Override
    public boolean hasProbability() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The probability of running this augmentation for each image.
     * </pre>
     *
     * <code>optional float probability = 2 [default = 0.5];</code>
     * @return The probability.
     */
    @java.lang.Override
    public float getProbability() {
      return probability_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < keypointFlipPermutation_.size(); i++) {
        output.writeInt32(1, keypointFlipPermutation_.getInt(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(2, probability_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < keypointFlipPermutation_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(keypointFlipPermutation_.getInt(i));
        }
        size += dataSize;
        size += 1 * getKeypointFlipPermutationList().size();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, probability_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomHorizontalFlip)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomHorizontalFlip other = (object_detection.protos.Preprocessor.RandomHorizontalFlip) obj;

      if (!getKeypointFlipPermutationList()
          .equals(other.getKeypointFlipPermutationList())) return false;
      if (hasProbability() != other.hasProbability()) return false;
      if (hasProbability()) {
        if (java.lang.Float.floatToIntBits(getProbability())
            != java.lang.Float.floatToIntBits(
                other.getProbability())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getKeypointFlipPermutationCount() > 0) {
        hash = (37 * hash) + KEYPOINT_FLIP_PERMUTATION_FIELD_NUMBER;
        hash = (53 * hash) + getKeypointFlipPermutationList().hashCode();
      }
      if (hasProbability()) {
        hash = (37 * hash) + PROBABILITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getProbability());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomHorizontalFlip parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomHorizontalFlip parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomHorizontalFlip parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomHorizontalFlip parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomHorizontalFlip parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomHorizontalFlip parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomHorizontalFlip parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomHorizontalFlip parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomHorizontalFlip parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomHorizontalFlip parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomHorizontalFlip parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomHorizontalFlip parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomHorizontalFlip prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly horizontally flips the image and detections with the specified
     * probability, default to 50% of the time.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomHorizontalFlip}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomHorizontalFlip)
        object_detection.protos.Preprocessor.RandomHorizontalFlipOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomHorizontalFlip_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomHorizontalFlip_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomHorizontalFlip.class, object_detection.protos.Preprocessor.RandomHorizontalFlip.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomHorizontalFlip.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keypointFlipPermutation_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        probability_ = 0.5F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomHorizontalFlip_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomHorizontalFlip getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomHorizontalFlip.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomHorizontalFlip build() {
        object_detection.protos.Preprocessor.RandomHorizontalFlip result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomHorizontalFlip buildPartial() {
        object_detection.protos.Preprocessor.RandomHorizontalFlip result = new object_detection.protos.Preprocessor.RandomHorizontalFlip(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          keypointFlipPermutation_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.keypointFlipPermutation_ = keypointFlipPermutation_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.probability_ = probability_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomHorizontalFlip) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomHorizontalFlip)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomHorizontalFlip other) {
        if (other == object_detection.protos.Preprocessor.RandomHorizontalFlip.getDefaultInstance()) return this;
        if (!other.keypointFlipPermutation_.isEmpty()) {
          if (keypointFlipPermutation_.isEmpty()) {
            keypointFlipPermutation_ = other.keypointFlipPermutation_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureKeypointFlipPermutationIsMutable();
            keypointFlipPermutation_.addAll(other.keypointFlipPermutation_);
          }
          onChanged();
        }
        if (other.hasProbability()) {
          setProbability(other.getProbability());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomHorizontalFlip parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomHorizontalFlip) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList keypointFlipPermutation_ = emptyIntList();
      private void ensureKeypointFlipPermutationIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          keypointFlipPermutation_ = mutableCopy(keypointFlipPermutation_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to horizontally
       * flipped indices. This is used in the event that keypoints are specified,
       * in which case when the image is horizontally flipped the keypoints will
       * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
       * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
       * the keypoint_flip_permutation below:
       * keypoint_flip_permutation: 1
       * keypoint_flip_permutation: 0
       * keypoint_flip_permutation: 2
       * keypoint_flip_permutation: 3
       * keypoint_flip_permutation: 5
       * keypoint_flip_permutation: 4
       * If nothing is specified the order of keypoint will be mantained.
       * </pre>
       *
       * <code>repeated int32 keypoint_flip_permutation = 1;</code>
       * @return A list containing the keypointFlipPermutation.
       */
      public java.util.List<java.lang.Integer>
          getKeypointFlipPermutationList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(keypointFlipPermutation_) : keypointFlipPermutation_;
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to horizontally
       * flipped indices. This is used in the event that keypoints are specified,
       * in which case when the image is horizontally flipped the keypoints will
       * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
       * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
       * the keypoint_flip_permutation below:
       * keypoint_flip_permutation: 1
       * keypoint_flip_permutation: 0
       * keypoint_flip_permutation: 2
       * keypoint_flip_permutation: 3
       * keypoint_flip_permutation: 5
       * keypoint_flip_permutation: 4
       * If nothing is specified the order of keypoint will be mantained.
       * </pre>
       *
       * <code>repeated int32 keypoint_flip_permutation = 1;</code>
       * @return The count of keypointFlipPermutation.
       */
      public int getKeypointFlipPermutationCount() {
        return keypointFlipPermutation_.size();
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to horizontally
       * flipped indices. This is used in the event that keypoints are specified,
       * in which case when the image is horizontally flipped the keypoints will
       * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
       * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
       * the keypoint_flip_permutation below:
       * keypoint_flip_permutation: 1
       * keypoint_flip_permutation: 0
       * keypoint_flip_permutation: 2
       * keypoint_flip_permutation: 3
       * keypoint_flip_permutation: 5
       * keypoint_flip_permutation: 4
       * If nothing is specified the order of keypoint will be mantained.
       * </pre>
       *
       * <code>repeated int32 keypoint_flip_permutation = 1;</code>
       * @param index The index of the element to return.
       * @return The keypointFlipPermutation at the given index.
       */
      public int getKeypointFlipPermutation(int index) {
        return keypointFlipPermutation_.getInt(index);
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to horizontally
       * flipped indices. This is used in the event that keypoints are specified,
       * in which case when the image is horizontally flipped the keypoints will
       * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
       * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
       * the keypoint_flip_permutation below:
       * keypoint_flip_permutation: 1
       * keypoint_flip_permutation: 0
       * keypoint_flip_permutation: 2
       * keypoint_flip_permutation: 3
       * keypoint_flip_permutation: 5
       * keypoint_flip_permutation: 4
       * If nothing is specified the order of keypoint will be mantained.
       * </pre>
       *
       * <code>repeated int32 keypoint_flip_permutation = 1;</code>
       * @param index The index to set the value at.
       * @param value The keypointFlipPermutation to set.
       * @return This builder for chaining.
       */
      public Builder setKeypointFlipPermutation(
          int index, int value) {
        ensureKeypointFlipPermutationIsMutable();
        keypointFlipPermutation_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to horizontally
       * flipped indices. This is used in the event that keypoints are specified,
       * in which case when the image is horizontally flipped the keypoints will
       * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
       * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
       * the keypoint_flip_permutation below:
       * keypoint_flip_permutation: 1
       * keypoint_flip_permutation: 0
       * keypoint_flip_permutation: 2
       * keypoint_flip_permutation: 3
       * keypoint_flip_permutation: 5
       * keypoint_flip_permutation: 4
       * If nothing is specified the order of keypoint will be mantained.
       * </pre>
       *
       * <code>repeated int32 keypoint_flip_permutation = 1;</code>
       * @param value The keypointFlipPermutation to add.
       * @return This builder for chaining.
       */
      public Builder addKeypointFlipPermutation(int value) {
        ensureKeypointFlipPermutationIsMutable();
        keypointFlipPermutation_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to horizontally
       * flipped indices. This is used in the event that keypoints are specified,
       * in which case when the image is horizontally flipped the keypoints will
       * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
       * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
       * the keypoint_flip_permutation below:
       * keypoint_flip_permutation: 1
       * keypoint_flip_permutation: 0
       * keypoint_flip_permutation: 2
       * keypoint_flip_permutation: 3
       * keypoint_flip_permutation: 5
       * keypoint_flip_permutation: 4
       * If nothing is specified the order of keypoint will be mantained.
       * </pre>
       *
       * <code>repeated int32 keypoint_flip_permutation = 1;</code>
       * @param values The keypointFlipPermutation to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeypointFlipPermutation(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureKeypointFlipPermutationIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keypointFlipPermutation_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to horizontally
       * flipped indices. This is used in the event that keypoints are specified,
       * in which case when the image is horizontally flipped the keypoints will
       * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
       * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
       * the keypoint_flip_permutation below:
       * keypoint_flip_permutation: 1
       * keypoint_flip_permutation: 0
       * keypoint_flip_permutation: 2
       * keypoint_flip_permutation: 3
       * keypoint_flip_permutation: 5
       * keypoint_flip_permutation: 4
       * If nothing is specified the order of keypoint will be mantained.
       * </pre>
       *
       * <code>repeated int32 keypoint_flip_permutation = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeypointFlipPermutation() {
        keypointFlipPermutation_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private float probability_ = 0.5F;
      /**
       * <pre>
       * The probability of running this augmentation for each image.
       * </pre>
       *
       * <code>optional float probability = 2 [default = 0.5];</code>
       * @return Whether the probability field is set.
       */
      @java.lang.Override
      public boolean hasProbability() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The probability of running this augmentation for each image.
       * </pre>
       *
       * <code>optional float probability = 2 [default = 0.5];</code>
       * @return The probability.
       */
      @java.lang.Override
      public float getProbability() {
        return probability_;
      }
      /**
       * <pre>
       * The probability of running this augmentation for each image.
       * </pre>
       *
       * <code>optional float probability = 2 [default = 0.5];</code>
       * @param value The probability to set.
       * @return This builder for chaining.
       */
      public Builder setProbability(float value) {
        bitField0_ |= 0x00000002;
        probability_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The probability of running this augmentation for each image.
       * </pre>
       *
       * <code>optional float probability = 2 [default = 0.5];</code>
       * @return This builder for chaining.
       */
      public Builder clearProbability() {
        bitField0_ = (bitField0_ & ~0x00000002);
        probability_ = 0.5F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomHorizontalFlip)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomHorizontalFlip)
    private static final object_detection.protos.Preprocessor.RandomHorizontalFlip DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomHorizontalFlip();
    }

    public static object_detection.protos.Preprocessor.RandomHorizontalFlip getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomHorizontalFlip>
        PARSER = new com.google.protobuf.AbstractParser<RandomHorizontalFlip>() {
      @java.lang.Override
      public RandomHorizontalFlip parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomHorizontalFlip(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomHorizontalFlip> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomHorizontalFlip> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomHorizontalFlip getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomVerticalFlipOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomVerticalFlip)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to vertically
     * flipped indices. This is used in the event that keypoints are specified,
     * in which case when the image is vertically flipped the keypoints will
     * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
     * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
     * the keypoint_flip_permutation below:
     * keypoint_flip_permutation: 1
     * keypoint_flip_permutation: 0
     * keypoint_flip_permutation: 2
     * keypoint_flip_permutation: 3
     * keypoint_flip_permutation: 5
     * keypoint_flip_permutation: 4
     * </pre>
     *
     * <code>repeated int32 keypoint_flip_permutation = 1;</code>
     * @return A list containing the keypointFlipPermutation.
     */
    java.util.List<java.lang.Integer> getKeypointFlipPermutationList();
    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to vertically
     * flipped indices. This is used in the event that keypoints are specified,
     * in which case when the image is vertically flipped the keypoints will
     * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
     * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
     * the keypoint_flip_permutation below:
     * keypoint_flip_permutation: 1
     * keypoint_flip_permutation: 0
     * keypoint_flip_permutation: 2
     * keypoint_flip_permutation: 3
     * keypoint_flip_permutation: 5
     * keypoint_flip_permutation: 4
     * </pre>
     *
     * <code>repeated int32 keypoint_flip_permutation = 1;</code>
     * @return The count of keypointFlipPermutation.
     */
    int getKeypointFlipPermutationCount();
    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to vertically
     * flipped indices. This is used in the event that keypoints are specified,
     * in which case when the image is vertically flipped the keypoints will
     * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
     * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
     * the keypoint_flip_permutation below:
     * keypoint_flip_permutation: 1
     * keypoint_flip_permutation: 0
     * keypoint_flip_permutation: 2
     * keypoint_flip_permutation: 3
     * keypoint_flip_permutation: 5
     * keypoint_flip_permutation: 4
     * </pre>
     *
     * <code>repeated int32 keypoint_flip_permutation = 1;</code>
     * @param index The index of the element to return.
     * @return The keypointFlipPermutation at the given index.
     */
    int getKeypointFlipPermutation(int index);

    /**
     * <pre>
     * The probability of running this augmentation for each image.
     * </pre>
     *
     * <code>optional float probability = 2 [default = 0.5];</code>
     * @return Whether the probability field is set.
     */
    boolean hasProbability();
    /**
     * <pre>
     * The probability of running this augmentation for each image.
     * </pre>
     *
     * <code>optional float probability = 2 [default = 0.5];</code>
     * @return The probability.
     */
    float getProbability();
  }
  /**
   * <pre>
   * Randomly vertically flips the image and detections with the specified
   * probability, default to 50% of the time.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomVerticalFlip}
   */
  public static final class RandomVerticalFlip extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomVerticalFlip)
      RandomVerticalFlipOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomVerticalFlip.newBuilder() to construct.
    private RandomVerticalFlip(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomVerticalFlip() {
      keypointFlipPermutation_ = emptyIntList();
      probability_ = 0.5F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomVerticalFlip();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomVerticalFlip(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                keypointFlipPermutation_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              keypointFlipPermutation_.addInt(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                keypointFlipPermutation_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                keypointFlipPermutation_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 21: {
              bitField0_ |= 0x00000001;
              probability_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          keypointFlipPermutation_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomVerticalFlip_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomVerticalFlip_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomVerticalFlip.class, object_detection.protos.Preprocessor.RandomVerticalFlip.Builder.class);
    }

    private int bitField0_;
    public static final int KEYPOINT_FLIP_PERMUTATION_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList keypointFlipPermutation_;
    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to vertically
     * flipped indices. This is used in the event that keypoints are specified,
     * in which case when the image is vertically flipped the keypoints will
     * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
     * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
     * the keypoint_flip_permutation below:
     * keypoint_flip_permutation: 1
     * keypoint_flip_permutation: 0
     * keypoint_flip_permutation: 2
     * keypoint_flip_permutation: 3
     * keypoint_flip_permutation: 5
     * keypoint_flip_permutation: 4
     * </pre>
     *
     * <code>repeated int32 keypoint_flip_permutation = 1;</code>
     * @return A list containing the keypointFlipPermutation.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getKeypointFlipPermutationList() {
      return keypointFlipPermutation_;
    }
    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to vertically
     * flipped indices. This is used in the event that keypoints are specified,
     * in which case when the image is vertically flipped the keypoints will
     * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
     * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
     * the keypoint_flip_permutation below:
     * keypoint_flip_permutation: 1
     * keypoint_flip_permutation: 0
     * keypoint_flip_permutation: 2
     * keypoint_flip_permutation: 3
     * keypoint_flip_permutation: 5
     * keypoint_flip_permutation: 4
     * </pre>
     *
     * <code>repeated int32 keypoint_flip_permutation = 1;</code>
     * @return The count of keypointFlipPermutation.
     */
    public int getKeypointFlipPermutationCount() {
      return keypointFlipPermutation_.size();
    }
    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to vertically
     * flipped indices. This is used in the event that keypoints are specified,
     * in which case when the image is vertically flipped the keypoints will
     * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
     * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
     * the keypoint_flip_permutation below:
     * keypoint_flip_permutation: 1
     * keypoint_flip_permutation: 0
     * keypoint_flip_permutation: 2
     * keypoint_flip_permutation: 3
     * keypoint_flip_permutation: 5
     * keypoint_flip_permutation: 4
     * </pre>
     *
     * <code>repeated int32 keypoint_flip_permutation = 1;</code>
     * @param index The index of the element to return.
     * @return The keypointFlipPermutation at the given index.
     */
    public int getKeypointFlipPermutation(int index) {
      return keypointFlipPermutation_.getInt(index);
    }

    public static final int PROBABILITY_FIELD_NUMBER = 2;
    private float probability_;
    /**
     * <pre>
     * The probability of running this augmentation for each image.
     * </pre>
     *
     * <code>optional float probability = 2 [default = 0.5];</code>
     * @return Whether the probability field is set.
     */
    @java.lang.Override
    public boolean hasProbability() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The probability of running this augmentation for each image.
     * </pre>
     *
     * <code>optional float probability = 2 [default = 0.5];</code>
     * @return The probability.
     */
    @java.lang.Override
    public float getProbability() {
      return probability_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < keypointFlipPermutation_.size(); i++) {
        output.writeInt32(1, keypointFlipPermutation_.getInt(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(2, probability_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < keypointFlipPermutation_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(keypointFlipPermutation_.getInt(i));
        }
        size += dataSize;
        size += 1 * getKeypointFlipPermutationList().size();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, probability_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomVerticalFlip)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomVerticalFlip other = (object_detection.protos.Preprocessor.RandomVerticalFlip) obj;

      if (!getKeypointFlipPermutationList()
          .equals(other.getKeypointFlipPermutationList())) return false;
      if (hasProbability() != other.hasProbability()) return false;
      if (hasProbability()) {
        if (java.lang.Float.floatToIntBits(getProbability())
            != java.lang.Float.floatToIntBits(
                other.getProbability())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getKeypointFlipPermutationCount() > 0) {
        hash = (37 * hash) + KEYPOINT_FLIP_PERMUTATION_FIELD_NUMBER;
        hash = (53 * hash) + getKeypointFlipPermutationList().hashCode();
      }
      if (hasProbability()) {
        hash = (37 * hash) + PROBABILITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getProbability());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomVerticalFlip parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomVerticalFlip parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomVerticalFlip parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomVerticalFlip parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomVerticalFlip parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomVerticalFlip parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomVerticalFlip parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomVerticalFlip parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomVerticalFlip parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomVerticalFlip parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomVerticalFlip parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomVerticalFlip parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomVerticalFlip prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly vertically flips the image and detections with the specified
     * probability, default to 50% of the time.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomVerticalFlip}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomVerticalFlip)
        object_detection.protos.Preprocessor.RandomVerticalFlipOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomVerticalFlip_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomVerticalFlip_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomVerticalFlip.class, object_detection.protos.Preprocessor.RandomVerticalFlip.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomVerticalFlip.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keypointFlipPermutation_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        probability_ = 0.5F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomVerticalFlip_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomVerticalFlip getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomVerticalFlip.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomVerticalFlip build() {
        object_detection.protos.Preprocessor.RandomVerticalFlip result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomVerticalFlip buildPartial() {
        object_detection.protos.Preprocessor.RandomVerticalFlip result = new object_detection.protos.Preprocessor.RandomVerticalFlip(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          keypointFlipPermutation_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.keypointFlipPermutation_ = keypointFlipPermutation_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.probability_ = probability_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomVerticalFlip) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomVerticalFlip)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomVerticalFlip other) {
        if (other == object_detection.protos.Preprocessor.RandomVerticalFlip.getDefaultInstance()) return this;
        if (!other.keypointFlipPermutation_.isEmpty()) {
          if (keypointFlipPermutation_.isEmpty()) {
            keypointFlipPermutation_ = other.keypointFlipPermutation_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureKeypointFlipPermutationIsMutable();
            keypointFlipPermutation_.addAll(other.keypointFlipPermutation_);
          }
          onChanged();
        }
        if (other.hasProbability()) {
          setProbability(other.getProbability());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomVerticalFlip parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomVerticalFlip) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList keypointFlipPermutation_ = emptyIntList();
      private void ensureKeypointFlipPermutationIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          keypointFlipPermutation_ = mutableCopy(keypointFlipPermutation_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to vertically
       * flipped indices. This is used in the event that keypoints are specified,
       * in which case when the image is vertically flipped the keypoints will
       * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
       * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
       * the keypoint_flip_permutation below:
       * keypoint_flip_permutation: 1
       * keypoint_flip_permutation: 0
       * keypoint_flip_permutation: 2
       * keypoint_flip_permutation: 3
       * keypoint_flip_permutation: 5
       * keypoint_flip_permutation: 4
       * </pre>
       *
       * <code>repeated int32 keypoint_flip_permutation = 1;</code>
       * @return A list containing the keypointFlipPermutation.
       */
      public java.util.List<java.lang.Integer>
          getKeypointFlipPermutationList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(keypointFlipPermutation_) : keypointFlipPermutation_;
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to vertically
       * flipped indices. This is used in the event that keypoints are specified,
       * in which case when the image is vertically flipped the keypoints will
       * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
       * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
       * the keypoint_flip_permutation below:
       * keypoint_flip_permutation: 1
       * keypoint_flip_permutation: 0
       * keypoint_flip_permutation: 2
       * keypoint_flip_permutation: 3
       * keypoint_flip_permutation: 5
       * keypoint_flip_permutation: 4
       * </pre>
       *
       * <code>repeated int32 keypoint_flip_permutation = 1;</code>
       * @return The count of keypointFlipPermutation.
       */
      public int getKeypointFlipPermutationCount() {
        return keypointFlipPermutation_.size();
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to vertically
       * flipped indices. This is used in the event that keypoints are specified,
       * in which case when the image is vertically flipped the keypoints will
       * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
       * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
       * the keypoint_flip_permutation below:
       * keypoint_flip_permutation: 1
       * keypoint_flip_permutation: 0
       * keypoint_flip_permutation: 2
       * keypoint_flip_permutation: 3
       * keypoint_flip_permutation: 5
       * keypoint_flip_permutation: 4
       * </pre>
       *
       * <code>repeated int32 keypoint_flip_permutation = 1;</code>
       * @param index The index of the element to return.
       * @return The keypointFlipPermutation at the given index.
       */
      public int getKeypointFlipPermutation(int index) {
        return keypointFlipPermutation_.getInt(index);
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to vertically
       * flipped indices. This is used in the event that keypoints are specified,
       * in which case when the image is vertically flipped the keypoints will
       * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
       * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
       * the keypoint_flip_permutation below:
       * keypoint_flip_permutation: 1
       * keypoint_flip_permutation: 0
       * keypoint_flip_permutation: 2
       * keypoint_flip_permutation: 3
       * keypoint_flip_permutation: 5
       * keypoint_flip_permutation: 4
       * </pre>
       *
       * <code>repeated int32 keypoint_flip_permutation = 1;</code>
       * @param index The index to set the value at.
       * @param value The keypointFlipPermutation to set.
       * @return This builder for chaining.
       */
      public Builder setKeypointFlipPermutation(
          int index, int value) {
        ensureKeypointFlipPermutationIsMutable();
        keypointFlipPermutation_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to vertically
       * flipped indices. This is used in the event that keypoints are specified,
       * in which case when the image is vertically flipped the keypoints will
       * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
       * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
       * the keypoint_flip_permutation below:
       * keypoint_flip_permutation: 1
       * keypoint_flip_permutation: 0
       * keypoint_flip_permutation: 2
       * keypoint_flip_permutation: 3
       * keypoint_flip_permutation: 5
       * keypoint_flip_permutation: 4
       * </pre>
       *
       * <code>repeated int32 keypoint_flip_permutation = 1;</code>
       * @param value The keypointFlipPermutation to add.
       * @return This builder for chaining.
       */
      public Builder addKeypointFlipPermutation(int value) {
        ensureKeypointFlipPermutationIsMutable();
        keypointFlipPermutation_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to vertically
       * flipped indices. This is used in the event that keypoints are specified,
       * in which case when the image is vertically flipped the keypoints will
       * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
       * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
       * the keypoint_flip_permutation below:
       * keypoint_flip_permutation: 1
       * keypoint_flip_permutation: 0
       * keypoint_flip_permutation: 2
       * keypoint_flip_permutation: 3
       * keypoint_flip_permutation: 5
       * keypoint_flip_permutation: 4
       * </pre>
       *
       * <code>repeated int32 keypoint_flip_permutation = 1;</code>
       * @param values The keypointFlipPermutation to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeypointFlipPermutation(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureKeypointFlipPermutationIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keypointFlipPermutation_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to vertically
       * flipped indices. This is used in the event that keypoints are specified,
       * in which case when the image is vertically flipped the keypoints will
       * need to be permuted. E.g. for keypoints representing left_eye, right_eye,
       * nose_tip, mouth, left_ear, right_ear (in that order), one might specify
       * the keypoint_flip_permutation below:
       * keypoint_flip_permutation: 1
       * keypoint_flip_permutation: 0
       * keypoint_flip_permutation: 2
       * keypoint_flip_permutation: 3
       * keypoint_flip_permutation: 5
       * keypoint_flip_permutation: 4
       * </pre>
       *
       * <code>repeated int32 keypoint_flip_permutation = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeypointFlipPermutation() {
        keypointFlipPermutation_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private float probability_ = 0.5F;
      /**
       * <pre>
       * The probability of running this augmentation for each image.
       * </pre>
       *
       * <code>optional float probability = 2 [default = 0.5];</code>
       * @return Whether the probability field is set.
       */
      @java.lang.Override
      public boolean hasProbability() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The probability of running this augmentation for each image.
       * </pre>
       *
       * <code>optional float probability = 2 [default = 0.5];</code>
       * @return The probability.
       */
      @java.lang.Override
      public float getProbability() {
        return probability_;
      }
      /**
       * <pre>
       * The probability of running this augmentation for each image.
       * </pre>
       *
       * <code>optional float probability = 2 [default = 0.5];</code>
       * @param value The probability to set.
       * @return This builder for chaining.
       */
      public Builder setProbability(float value) {
        bitField0_ |= 0x00000002;
        probability_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The probability of running this augmentation for each image.
       * </pre>
       *
       * <code>optional float probability = 2 [default = 0.5];</code>
       * @return This builder for chaining.
       */
      public Builder clearProbability() {
        bitField0_ = (bitField0_ & ~0x00000002);
        probability_ = 0.5F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomVerticalFlip)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomVerticalFlip)
    private static final object_detection.protos.Preprocessor.RandomVerticalFlip DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomVerticalFlip();
    }

    public static object_detection.protos.Preprocessor.RandomVerticalFlip getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomVerticalFlip>
        PARSER = new com.google.protobuf.AbstractParser<RandomVerticalFlip>() {
      @java.lang.Override
      public RandomVerticalFlip parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomVerticalFlip(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomVerticalFlip> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomVerticalFlip> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomVerticalFlip getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomRotation90OrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomRotation90)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to 90 degree counter
     * clockwise indices. This is used in the event that keypoints are specified,
     * in which case when the image is rotated the keypoints might need to be
     * permuted.
     * </pre>
     *
     * <code>repeated int32 keypoint_rot_permutation = 1;</code>
     * @return A list containing the keypointRotPermutation.
     */
    java.util.List<java.lang.Integer> getKeypointRotPermutationList();
    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to 90 degree counter
     * clockwise indices. This is used in the event that keypoints are specified,
     * in which case when the image is rotated the keypoints might need to be
     * permuted.
     * </pre>
     *
     * <code>repeated int32 keypoint_rot_permutation = 1;</code>
     * @return The count of keypointRotPermutation.
     */
    int getKeypointRotPermutationCount();
    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to 90 degree counter
     * clockwise indices. This is used in the event that keypoints are specified,
     * in which case when the image is rotated the keypoints might need to be
     * permuted.
     * </pre>
     *
     * <code>repeated int32 keypoint_rot_permutation = 1;</code>
     * @param index The index of the element to return.
     * @return The keypointRotPermutation at the given index.
     */
    int getKeypointRotPermutation(int index);

    /**
     * <pre>
     * The probability of running this augmentation for each image.
     * </pre>
     *
     * <code>optional float probability = 2 [default = 0.5];</code>
     * @return Whether the probability field is set.
     */
    boolean hasProbability();
    /**
     * <pre>
     * The probability of running this augmentation for each image.
     * </pre>
     *
     * <code>optional float probability = 2 [default = 0.5];</code>
     * @return The probability.
     */
    float getProbability();
  }
  /**
   * <pre>
   * Randomly rotates the image and detections by 90 degrees counter-clockwise
   * with the specified probability, default to 50% of the time.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomRotation90}
   */
  public static final class RandomRotation90 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomRotation90)
      RandomRotation90OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomRotation90.newBuilder() to construct.
    private RandomRotation90(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomRotation90() {
      keypointRotPermutation_ = emptyIntList();
      probability_ = 0.5F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomRotation90();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomRotation90(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                keypointRotPermutation_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              keypointRotPermutation_.addInt(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                keypointRotPermutation_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                keypointRotPermutation_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 21: {
              bitField0_ |= 0x00000001;
              probability_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          keypointRotPermutation_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomRotation90_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomRotation90_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomRotation90.class, object_detection.protos.Preprocessor.RandomRotation90.Builder.class);
    }

    private int bitField0_;
    public static final int KEYPOINT_ROT_PERMUTATION_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList keypointRotPermutation_;
    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to 90 degree counter
     * clockwise indices. This is used in the event that keypoints are specified,
     * in which case when the image is rotated the keypoints might need to be
     * permuted.
     * </pre>
     *
     * <code>repeated int32 keypoint_rot_permutation = 1;</code>
     * @return A list containing the keypointRotPermutation.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getKeypointRotPermutationList() {
      return keypointRotPermutation_;
    }
    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to 90 degree counter
     * clockwise indices. This is used in the event that keypoints are specified,
     * in which case when the image is rotated the keypoints might need to be
     * permuted.
     * </pre>
     *
     * <code>repeated int32 keypoint_rot_permutation = 1;</code>
     * @return The count of keypointRotPermutation.
     */
    public int getKeypointRotPermutationCount() {
      return keypointRotPermutation_.size();
    }
    /**
     * <pre>
     * Specifies a mapping from the original keypoint indices to 90 degree counter
     * clockwise indices. This is used in the event that keypoints are specified,
     * in which case when the image is rotated the keypoints might need to be
     * permuted.
     * </pre>
     *
     * <code>repeated int32 keypoint_rot_permutation = 1;</code>
     * @param index The index of the element to return.
     * @return The keypointRotPermutation at the given index.
     */
    public int getKeypointRotPermutation(int index) {
      return keypointRotPermutation_.getInt(index);
    }

    public static final int PROBABILITY_FIELD_NUMBER = 2;
    private float probability_;
    /**
     * <pre>
     * The probability of running this augmentation for each image.
     * </pre>
     *
     * <code>optional float probability = 2 [default = 0.5];</code>
     * @return Whether the probability field is set.
     */
    @java.lang.Override
    public boolean hasProbability() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The probability of running this augmentation for each image.
     * </pre>
     *
     * <code>optional float probability = 2 [default = 0.5];</code>
     * @return The probability.
     */
    @java.lang.Override
    public float getProbability() {
      return probability_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < keypointRotPermutation_.size(); i++) {
        output.writeInt32(1, keypointRotPermutation_.getInt(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(2, probability_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < keypointRotPermutation_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(keypointRotPermutation_.getInt(i));
        }
        size += dataSize;
        size += 1 * getKeypointRotPermutationList().size();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, probability_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomRotation90)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomRotation90 other = (object_detection.protos.Preprocessor.RandomRotation90) obj;

      if (!getKeypointRotPermutationList()
          .equals(other.getKeypointRotPermutationList())) return false;
      if (hasProbability() != other.hasProbability()) return false;
      if (hasProbability()) {
        if (java.lang.Float.floatToIntBits(getProbability())
            != java.lang.Float.floatToIntBits(
                other.getProbability())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getKeypointRotPermutationCount() > 0) {
        hash = (37 * hash) + KEYPOINT_ROT_PERMUTATION_FIELD_NUMBER;
        hash = (53 * hash) + getKeypointRotPermutationList().hashCode();
      }
      if (hasProbability()) {
        hash = (37 * hash) + PROBABILITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getProbability());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomRotation90 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomRotation90 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomRotation90 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomRotation90 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomRotation90 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomRotation90 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomRotation90 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomRotation90 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomRotation90 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomRotation90 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomRotation90 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomRotation90 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomRotation90 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly rotates the image and detections by 90 degrees counter-clockwise
     * with the specified probability, default to 50% of the time.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomRotation90}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomRotation90)
        object_detection.protos.Preprocessor.RandomRotation90OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomRotation90_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomRotation90_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomRotation90.class, object_detection.protos.Preprocessor.RandomRotation90.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomRotation90.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keypointRotPermutation_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        probability_ = 0.5F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomRotation90_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomRotation90 getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomRotation90.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomRotation90 build() {
        object_detection.protos.Preprocessor.RandomRotation90 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomRotation90 buildPartial() {
        object_detection.protos.Preprocessor.RandomRotation90 result = new object_detection.protos.Preprocessor.RandomRotation90(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          keypointRotPermutation_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.keypointRotPermutation_ = keypointRotPermutation_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.probability_ = probability_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomRotation90) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomRotation90)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomRotation90 other) {
        if (other == object_detection.protos.Preprocessor.RandomRotation90.getDefaultInstance()) return this;
        if (!other.keypointRotPermutation_.isEmpty()) {
          if (keypointRotPermutation_.isEmpty()) {
            keypointRotPermutation_ = other.keypointRotPermutation_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureKeypointRotPermutationIsMutable();
            keypointRotPermutation_.addAll(other.keypointRotPermutation_);
          }
          onChanged();
        }
        if (other.hasProbability()) {
          setProbability(other.getProbability());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomRotation90 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomRotation90) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList keypointRotPermutation_ = emptyIntList();
      private void ensureKeypointRotPermutationIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          keypointRotPermutation_ = mutableCopy(keypointRotPermutation_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to 90 degree counter
       * clockwise indices. This is used in the event that keypoints are specified,
       * in which case when the image is rotated the keypoints might need to be
       * permuted.
       * </pre>
       *
       * <code>repeated int32 keypoint_rot_permutation = 1;</code>
       * @return A list containing the keypointRotPermutation.
       */
      public java.util.List<java.lang.Integer>
          getKeypointRotPermutationList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(keypointRotPermutation_) : keypointRotPermutation_;
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to 90 degree counter
       * clockwise indices. This is used in the event that keypoints are specified,
       * in which case when the image is rotated the keypoints might need to be
       * permuted.
       * </pre>
       *
       * <code>repeated int32 keypoint_rot_permutation = 1;</code>
       * @return The count of keypointRotPermutation.
       */
      public int getKeypointRotPermutationCount() {
        return keypointRotPermutation_.size();
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to 90 degree counter
       * clockwise indices. This is used in the event that keypoints are specified,
       * in which case when the image is rotated the keypoints might need to be
       * permuted.
       * </pre>
       *
       * <code>repeated int32 keypoint_rot_permutation = 1;</code>
       * @param index The index of the element to return.
       * @return The keypointRotPermutation at the given index.
       */
      public int getKeypointRotPermutation(int index) {
        return keypointRotPermutation_.getInt(index);
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to 90 degree counter
       * clockwise indices. This is used in the event that keypoints are specified,
       * in which case when the image is rotated the keypoints might need to be
       * permuted.
       * </pre>
       *
       * <code>repeated int32 keypoint_rot_permutation = 1;</code>
       * @param index The index to set the value at.
       * @param value The keypointRotPermutation to set.
       * @return This builder for chaining.
       */
      public Builder setKeypointRotPermutation(
          int index, int value) {
        ensureKeypointRotPermutationIsMutable();
        keypointRotPermutation_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to 90 degree counter
       * clockwise indices. This is used in the event that keypoints are specified,
       * in which case when the image is rotated the keypoints might need to be
       * permuted.
       * </pre>
       *
       * <code>repeated int32 keypoint_rot_permutation = 1;</code>
       * @param value The keypointRotPermutation to add.
       * @return This builder for chaining.
       */
      public Builder addKeypointRotPermutation(int value) {
        ensureKeypointRotPermutationIsMutable();
        keypointRotPermutation_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to 90 degree counter
       * clockwise indices. This is used in the event that keypoints are specified,
       * in which case when the image is rotated the keypoints might need to be
       * permuted.
       * </pre>
       *
       * <code>repeated int32 keypoint_rot_permutation = 1;</code>
       * @param values The keypointRotPermutation to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeypointRotPermutation(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureKeypointRotPermutationIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, keypointRotPermutation_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies a mapping from the original keypoint indices to 90 degree counter
       * clockwise indices. This is used in the event that keypoints are specified,
       * in which case when the image is rotated the keypoints might need to be
       * permuted.
       * </pre>
       *
       * <code>repeated int32 keypoint_rot_permutation = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeypointRotPermutation() {
        keypointRotPermutation_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private float probability_ = 0.5F;
      /**
       * <pre>
       * The probability of running this augmentation for each image.
       * </pre>
       *
       * <code>optional float probability = 2 [default = 0.5];</code>
       * @return Whether the probability field is set.
       */
      @java.lang.Override
      public boolean hasProbability() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The probability of running this augmentation for each image.
       * </pre>
       *
       * <code>optional float probability = 2 [default = 0.5];</code>
       * @return The probability.
       */
      @java.lang.Override
      public float getProbability() {
        return probability_;
      }
      /**
       * <pre>
       * The probability of running this augmentation for each image.
       * </pre>
       *
       * <code>optional float probability = 2 [default = 0.5];</code>
       * @param value The probability to set.
       * @return This builder for chaining.
       */
      public Builder setProbability(float value) {
        bitField0_ |= 0x00000002;
        probability_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The probability of running this augmentation for each image.
       * </pre>
       *
       * <code>optional float probability = 2 [default = 0.5];</code>
       * @return This builder for chaining.
       */
      public Builder clearProbability() {
        bitField0_ = (bitField0_ & ~0x00000002);
        probability_ = 0.5F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomRotation90)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomRotation90)
    private static final object_detection.protos.Preprocessor.RandomRotation90 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomRotation90();
    }

    public static object_detection.protos.Preprocessor.RandomRotation90 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomRotation90>
        PARSER = new com.google.protobuf.AbstractParser<RandomRotation90>() {
      @java.lang.Override
      public RandomRotation90 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomRotation90(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomRotation90> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomRotation90> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomRotation90 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomPixelValueScaleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomPixelValueScale)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float minval = 1 [default = 0.9];</code>
     * @return Whether the minval field is set.
     */
    boolean hasMinval();
    /**
     * <code>optional float minval = 1 [default = 0.9];</code>
     * @return The minval.
     */
    float getMinval();

    /**
     * <code>optional float maxval = 2 [default = 1.1];</code>
     * @return Whether the maxval field is set.
     */
    boolean hasMaxval();
    /**
     * <code>optional float maxval = 2 [default = 1.1];</code>
     * @return The maxval.
     */
    float getMaxval();
  }
  /**
   * <pre>
   * Randomly scales the values of all pixels in the image by some constant value
   * between [minval, maxval], then clip the value to a range between [0, 1.0].
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomPixelValueScale}
   */
  public static final class RandomPixelValueScale extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomPixelValueScale)
      RandomPixelValueScaleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomPixelValueScale.newBuilder() to construct.
    private RandomPixelValueScale(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomPixelValueScale() {
      minval_ = 0.9F;
      maxval_ = 1.1F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomPixelValueScale();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomPixelValueScale(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              minval_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              maxval_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomPixelValueScale_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomPixelValueScale_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomPixelValueScale.class, object_detection.protos.Preprocessor.RandomPixelValueScale.Builder.class);
    }

    private int bitField0_;
    public static final int MINVAL_FIELD_NUMBER = 1;
    private float minval_;
    /**
     * <code>optional float minval = 1 [default = 0.9];</code>
     * @return Whether the minval field is set.
     */
    @java.lang.Override
    public boolean hasMinval() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional float minval = 1 [default = 0.9];</code>
     * @return The minval.
     */
    @java.lang.Override
    public float getMinval() {
      return minval_;
    }

    public static final int MAXVAL_FIELD_NUMBER = 2;
    private float maxval_;
    /**
     * <code>optional float maxval = 2 [default = 1.1];</code>
     * @return Whether the maxval field is set.
     */
    @java.lang.Override
    public boolean hasMaxval() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional float maxval = 2 [default = 1.1];</code>
     * @return The maxval.
     */
    @java.lang.Override
    public float getMaxval() {
      return maxval_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, minval_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, maxval_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, minval_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, maxval_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomPixelValueScale)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomPixelValueScale other = (object_detection.protos.Preprocessor.RandomPixelValueScale) obj;

      if (hasMinval() != other.hasMinval()) return false;
      if (hasMinval()) {
        if (java.lang.Float.floatToIntBits(getMinval())
            != java.lang.Float.floatToIntBits(
                other.getMinval())) return false;
      }
      if (hasMaxval() != other.hasMaxval()) return false;
      if (hasMaxval()) {
        if (java.lang.Float.floatToIntBits(getMaxval())
            != java.lang.Float.floatToIntBits(
                other.getMaxval())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMinval()) {
        hash = (37 * hash) + MINVAL_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinval());
      }
      if (hasMaxval()) {
        hash = (37 * hash) + MAXVAL_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxval());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomPixelValueScale parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomPixelValueScale parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomPixelValueScale parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomPixelValueScale parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomPixelValueScale parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomPixelValueScale parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomPixelValueScale parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomPixelValueScale parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomPixelValueScale parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomPixelValueScale parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomPixelValueScale parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomPixelValueScale parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomPixelValueScale prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly scales the values of all pixels in the image by some constant value
     * between [minval, maxval], then clip the value to a range between [0, 1.0].
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomPixelValueScale}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomPixelValueScale)
        object_detection.protos.Preprocessor.RandomPixelValueScaleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomPixelValueScale_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomPixelValueScale_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomPixelValueScale.class, object_detection.protos.Preprocessor.RandomPixelValueScale.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomPixelValueScale.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        minval_ = 0.9F;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxval_ = 1.1F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomPixelValueScale_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomPixelValueScale getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomPixelValueScale.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomPixelValueScale build() {
        object_detection.protos.Preprocessor.RandomPixelValueScale result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomPixelValueScale buildPartial() {
        object_detection.protos.Preprocessor.RandomPixelValueScale result = new object_detection.protos.Preprocessor.RandomPixelValueScale(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.minval_ = minval_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxval_ = maxval_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomPixelValueScale) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomPixelValueScale)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomPixelValueScale other) {
        if (other == object_detection.protos.Preprocessor.RandomPixelValueScale.getDefaultInstance()) return this;
        if (other.hasMinval()) {
          setMinval(other.getMinval());
        }
        if (other.hasMaxval()) {
          setMaxval(other.getMaxval());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomPixelValueScale parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomPixelValueScale) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float minval_ = 0.9F;
      /**
       * <code>optional float minval = 1 [default = 0.9];</code>
       * @return Whether the minval field is set.
       */
      @java.lang.Override
      public boolean hasMinval() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional float minval = 1 [default = 0.9];</code>
       * @return The minval.
       */
      @java.lang.Override
      public float getMinval() {
        return minval_;
      }
      /**
       * <code>optional float minval = 1 [default = 0.9];</code>
       * @param value The minval to set.
       * @return This builder for chaining.
       */
      public Builder setMinval(float value) {
        bitField0_ |= 0x00000001;
        minval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minval = 1 [default = 0.9];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinval() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minval_ = 0.9F;
        onChanged();
        return this;
      }

      private float maxval_ = 1.1F;
      /**
       * <code>optional float maxval = 2 [default = 1.1];</code>
       * @return Whether the maxval field is set.
       */
      @java.lang.Override
      public boolean hasMaxval() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional float maxval = 2 [default = 1.1];</code>
       * @return The maxval.
       */
      @java.lang.Override
      public float getMaxval() {
        return maxval_;
      }
      /**
       * <code>optional float maxval = 2 [default = 1.1];</code>
       * @param value The maxval to set.
       * @return This builder for chaining.
       */
      public Builder setMaxval(float value) {
        bitField0_ |= 0x00000002;
        maxval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxval = 2 [default = 1.1];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxval() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxval_ = 1.1F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomPixelValueScale)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomPixelValueScale)
    private static final object_detection.protos.Preprocessor.RandomPixelValueScale DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomPixelValueScale();
    }

    public static object_detection.protos.Preprocessor.RandomPixelValueScale getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomPixelValueScale>
        PARSER = new com.google.protobuf.AbstractParser<RandomPixelValueScale>() {
      @java.lang.Override
      public RandomPixelValueScale parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomPixelValueScale(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomPixelValueScale> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomPixelValueScale> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomPixelValueScale getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomImageScaleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomImageScale)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float min_scale_ratio = 1 [default = 0.5];</code>
     * @return Whether the minScaleRatio field is set.
     */
    boolean hasMinScaleRatio();
    /**
     * <code>optional float min_scale_ratio = 1 [default = 0.5];</code>
     * @return The minScaleRatio.
     */
    float getMinScaleRatio();

    /**
     * <code>optional float max_scale_ratio = 2 [default = 2];</code>
     * @return Whether the maxScaleRatio field is set.
     */
    boolean hasMaxScaleRatio();
    /**
     * <code>optional float max_scale_ratio = 2 [default = 2];</code>
     * @return The maxScaleRatio.
     */
    float getMaxScaleRatio();
  }
  /**
   * <pre>
   * Randomly enlarges or shrinks image (keeping aspect ratio).
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomImageScale}
   */
  public static final class RandomImageScale extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomImageScale)
      RandomImageScaleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomImageScale.newBuilder() to construct.
    private RandomImageScale(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomImageScale() {
      minScaleRatio_ = 0.5F;
      maxScaleRatio_ = 2F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomImageScale();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomImageScale(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              minScaleRatio_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              maxScaleRatio_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomImageScale_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomImageScale_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomImageScale.class, object_detection.protos.Preprocessor.RandomImageScale.Builder.class);
    }

    private int bitField0_;
    public static final int MIN_SCALE_RATIO_FIELD_NUMBER = 1;
    private float minScaleRatio_;
    /**
     * <code>optional float min_scale_ratio = 1 [default = 0.5];</code>
     * @return Whether the minScaleRatio field is set.
     */
    @java.lang.Override
    public boolean hasMinScaleRatio() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional float min_scale_ratio = 1 [default = 0.5];</code>
     * @return The minScaleRatio.
     */
    @java.lang.Override
    public float getMinScaleRatio() {
      return minScaleRatio_;
    }

    public static final int MAX_SCALE_RATIO_FIELD_NUMBER = 2;
    private float maxScaleRatio_;
    /**
     * <code>optional float max_scale_ratio = 2 [default = 2];</code>
     * @return Whether the maxScaleRatio field is set.
     */
    @java.lang.Override
    public boolean hasMaxScaleRatio() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional float max_scale_ratio = 2 [default = 2];</code>
     * @return The maxScaleRatio.
     */
    @java.lang.Override
    public float getMaxScaleRatio() {
      return maxScaleRatio_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, minScaleRatio_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, maxScaleRatio_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, minScaleRatio_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, maxScaleRatio_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomImageScale)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomImageScale other = (object_detection.protos.Preprocessor.RandomImageScale) obj;

      if (hasMinScaleRatio() != other.hasMinScaleRatio()) return false;
      if (hasMinScaleRatio()) {
        if (java.lang.Float.floatToIntBits(getMinScaleRatio())
            != java.lang.Float.floatToIntBits(
                other.getMinScaleRatio())) return false;
      }
      if (hasMaxScaleRatio() != other.hasMaxScaleRatio()) return false;
      if (hasMaxScaleRatio()) {
        if (java.lang.Float.floatToIntBits(getMaxScaleRatio())
            != java.lang.Float.floatToIntBits(
                other.getMaxScaleRatio())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMinScaleRatio()) {
        hash = (37 * hash) + MIN_SCALE_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinScaleRatio());
      }
      if (hasMaxScaleRatio()) {
        hash = (37 * hash) + MAX_SCALE_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxScaleRatio());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomImageScale parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomImageScale parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomImageScale parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomImageScale parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomImageScale parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomImageScale parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomImageScale parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomImageScale parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomImageScale parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomImageScale parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomImageScale parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomImageScale parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomImageScale prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly enlarges or shrinks image (keeping aspect ratio).
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomImageScale}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomImageScale)
        object_detection.protos.Preprocessor.RandomImageScaleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomImageScale_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomImageScale_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomImageScale.class, object_detection.protos.Preprocessor.RandomImageScale.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomImageScale.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        minScaleRatio_ = 0.5F;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxScaleRatio_ = 2F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomImageScale_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomImageScale getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomImageScale.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomImageScale build() {
        object_detection.protos.Preprocessor.RandomImageScale result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomImageScale buildPartial() {
        object_detection.protos.Preprocessor.RandomImageScale result = new object_detection.protos.Preprocessor.RandomImageScale(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.minScaleRatio_ = minScaleRatio_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxScaleRatio_ = maxScaleRatio_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomImageScale) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomImageScale)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomImageScale other) {
        if (other == object_detection.protos.Preprocessor.RandomImageScale.getDefaultInstance()) return this;
        if (other.hasMinScaleRatio()) {
          setMinScaleRatio(other.getMinScaleRatio());
        }
        if (other.hasMaxScaleRatio()) {
          setMaxScaleRatio(other.getMaxScaleRatio());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomImageScale parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomImageScale) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float minScaleRatio_ = 0.5F;
      /**
       * <code>optional float min_scale_ratio = 1 [default = 0.5];</code>
       * @return Whether the minScaleRatio field is set.
       */
      @java.lang.Override
      public boolean hasMinScaleRatio() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional float min_scale_ratio = 1 [default = 0.5];</code>
       * @return The minScaleRatio.
       */
      @java.lang.Override
      public float getMinScaleRatio() {
        return minScaleRatio_;
      }
      /**
       * <code>optional float min_scale_ratio = 1 [default = 0.5];</code>
       * @param value The minScaleRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMinScaleRatio(float value) {
        bitField0_ |= 0x00000001;
        minScaleRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float min_scale_ratio = 1 [default = 0.5];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinScaleRatio() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minScaleRatio_ = 0.5F;
        onChanged();
        return this;
      }

      private float maxScaleRatio_ = 2F;
      /**
       * <code>optional float max_scale_ratio = 2 [default = 2];</code>
       * @return Whether the maxScaleRatio field is set.
       */
      @java.lang.Override
      public boolean hasMaxScaleRatio() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional float max_scale_ratio = 2 [default = 2];</code>
       * @return The maxScaleRatio.
       */
      @java.lang.Override
      public float getMaxScaleRatio() {
        return maxScaleRatio_;
      }
      /**
       * <code>optional float max_scale_ratio = 2 [default = 2];</code>
       * @param value The maxScaleRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMaxScaleRatio(float value) {
        bitField0_ |= 0x00000002;
        maxScaleRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_scale_ratio = 2 [default = 2];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxScaleRatio() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxScaleRatio_ = 2F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomImageScale)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomImageScale)
    private static final object_detection.protos.Preprocessor.RandomImageScale DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomImageScale();
    }

    public static object_detection.protos.Preprocessor.RandomImageScale getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomImageScale>
        PARSER = new com.google.protobuf.AbstractParser<RandomImageScale>() {
      @java.lang.Override
      public RandomImageScale parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomImageScale(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomImageScale> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomImageScale> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomImageScale getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomRGBtoGrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomRGBtoGray)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float probability = 1 [default = 0.1];</code>
     * @return Whether the probability field is set.
     */
    boolean hasProbability();
    /**
     * <code>optional float probability = 1 [default = 0.1];</code>
     * @return The probability.
     */
    float getProbability();
  }
  /**
   * <pre>
   * Randomly convert entire image to grey scale.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomRGBtoGray}
   */
  public static final class RandomRGBtoGray extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomRGBtoGray)
      RandomRGBtoGrayOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomRGBtoGray.newBuilder() to construct.
    private RandomRGBtoGray(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomRGBtoGray() {
      probability_ = 0.1F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomRGBtoGray();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomRGBtoGray(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              probability_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomRGBtoGray_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomRGBtoGray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomRGBtoGray.class, object_detection.protos.Preprocessor.RandomRGBtoGray.Builder.class);
    }

    private int bitField0_;
    public static final int PROBABILITY_FIELD_NUMBER = 1;
    private float probability_;
    /**
     * <code>optional float probability = 1 [default = 0.1];</code>
     * @return Whether the probability field is set.
     */
    @java.lang.Override
    public boolean hasProbability() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional float probability = 1 [default = 0.1];</code>
     * @return The probability.
     */
    @java.lang.Override
    public float getProbability() {
      return probability_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, probability_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, probability_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomRGBtoGray)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomRGBtoGray other = (object_detection.protos.Preprocessor.RandomRGBtoGray) obj;

      if (hasProbability() != other.hasProbability()) return false;
      if (hasProbability()) {
        if (java.lang.Float.floatToIntBits(getProbability())
            != java.lang.Float.floatToIntBits(
                other.getProbability())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasProbability()) {
        hash = (37 * hash) + PROBABILITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getProbability());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomRGBtoGray parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomRGBtoGray parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomRGBtoGray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomRGBtoGray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomRGBtoGray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomRGBtoGray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomRGBtoGray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomRGBtoGray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomRGBtoGray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomRGBtoGray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomRGBtoGray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomRGBtoGray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomRGBtoGray prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly convert entire image to grey scale.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomRGBtoGray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomRGBtoGray)
        object_detection.protos.Preprocessor.RandomRGBtoGrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomRGBtoGray_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomRGBtoGray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomRGBtoGray.class, object_detection.protos.Preprocessor.RandomRGBtoGray.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomRGBtoGray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        probability_ = 0.1F;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomRGBtoGray_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomRGBtoGray getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomRGBtoGray.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomRGBtoGray build() {
        object_detection.protos.Preprocessor.RandomRGBtoGray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomRGBtoGray buildPartial() {
        object_detection.protos.Preprocessor.RandomRGBtoGray result = new object_detection.protos.Preprocessor.RandomRGBtoGray(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.probability_ = probability_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomRGBtoGray) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomRGBtoGray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomRGBtoGray other) {
        if (other == object_detection.protos.Preprocessor.RandomRGBtoGray.getDefaultInstance()) return this;
        if (other.hasProbability()) {
          setProbability(other.getProbability());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomRGBtoGray parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomRGBtoGray) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float probability_ = 0.1F;
      /**
       * <code>optional float probability = 1 [default = 0.1];</code>
       * @return Whether the probability field is set.
       */
      @java.lang.Override
      public boolean hasProbability() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional float probability = 1 [default = 0.1];</code>
       * @return The probability.
       */
      @java.lang.Override
      public float getProbability() {
        return probability_;
      }
      /**
       * <code>optional float probability = 1 [default = 0.1];</code>
       * @param value The probability to set.
       * @return This builder for chaining.
       */
      public Builder setProbability(float value) {
        bitField0_ |= 0x00000001;
        probability_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float probability = 1 [default = 0.1];</code>
       * @return This builder for chaining.
       */
      public Builder clearProbability() {
        bitField0_ = (bitField0_ & ~0x00000001);
        probability_ = 0.1F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomRGBtoGray)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomRGBtoGray)
    private static final object_detection.protos.Preprocessor.RandomRGBtoGray DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomRGBtoGray();
    }

    public static object_detection.protos.Preprocessor.RandomRGBtoGray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomRGBtoGray>
        PARSER = new com.google.protobuf.AbstractParser<RandomRGBtoGray>() {
      @java.lang.Override
      public RandomRGBtoGray parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomRGBtoGray(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomRGBtoGray> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomRGBtoGray> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomRGBtoGray getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomAdjustBrightnessOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomAdjustBrightness)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float max_delta = 1 [default = 0.2];</code>
     * @return Whether the maxDelta field is set.
     */
    boolean hasMaxDelta();
    /**
     * <code>optional float max_delta = 1 [default = 0.2];</code>
     * @return The maxDelta.
     */
    float getMaxDelta();
  }
  /**
   * <pre>
   * Randomly changes image brightness by up to max_delta. Image outputs will be
   * saturated between 0 and 1.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomAdjustBrightness}
   */
  public static final class RandomAdjustBrightness extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomAdjustBrightness)
      RandomAdjustBrightnessOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomAdjustBrightness.newBuilder() to construct.
    private RandomAdjustBrightness(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomAdjustBrightness() {
      maxDelta_ = 0.2F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomAdjustBrightness();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomAdjustBrightness(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              maxDelta_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustBrightness_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustBrightness_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomAdjustBrightness.class, object_detection.protos.Preprocessor.RandomAdjustBrightness.Builder.class);
    }

    private int bitField0_;
    public static final int MAX_DELTA_FIELD_NUMBER = 1;
    private float maxDelta_;
    /**
     * <code>optional float max_delta = 1 [default = 0.2];</code>
     * @return Whether the maxDelta field is set.
     */
    @java.lang.Override
    public boolean hasMaxDelta() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional float max_delta = 1 [default = 0.2];</code>
     * @return The maxDelta.
     */
    @java.lang.Override
    public float getMaxDelta() {
      return maxDelta_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, maxDelta_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, maxDelta_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomAdjustBrightness)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomAdjustBrightness other = (object_detection.protos.Preprocessor.RandomAdjustBrightness) obj;

      if (hasMaxDelta() != other.hasMaxDelta()) return false;
      if (hasMaxDelta()) {
        if (java.lang.Float.floatToIntBits(getMaxDelta())
            != java.lang.Float.floatToIntBits(
                other.getMaxDelta())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMaxDelta()) {
        hash = (37 * hash) + MAX_DELTA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxDelta());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomAdjustBrightness parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustBrightness parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustBrightness parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustBrightness parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustBrightness parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustBrightness parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustBrightness parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustBrightness parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustBrightness parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustBrightness parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustBrightness parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustBrightness parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomAdjustBrightness prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly changes image brightness by up to max_delta. Image outputs will be
     * saturated between 0 and 1.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomAdjustBrightness}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomAdjustBrightness)
        object_detection.protos.Preprocessor.RandomAdjustBrightnessOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustBrightness_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustBrightness_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomAdjustBrightness.class, object_detection.protos.Preprocessor.RandomAdjustBrightness.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomAdjustBrightness.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        maxDelta_ = 0.2F;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustBrightness_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustBrightness getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomAdjustBrightness.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustBrightness build() {
        object_detection.protos.Preprocessor.RandomAdjustBrightness result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustBrightness buildPartial() {
        object_detection.protos.Preprocessor.RandomAdjustBrightness result = new object_detection.protos.Preprocessor.RandomAdjustBrightness(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.maxDelta_ = maxDelta_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomAdjustBrightness) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomAdjustBrightness)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomAdjustBrightness other) {
        if (other == object_detection.protos.Preprocessor.RandomAdjustBrightness.getDefaultInstance()) return this;
        if (other.hasMaxDelta()) {
          setMaxDelta(other.getMaxDelta());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomAdjustBrightness parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomAdjustBrightness) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float maxDelta_ = 0.2F;
      /**
       * <code>optional float max_delta = 1 [default = 0.2];</code>
       * @return Whether the maxDelta field is set.
       */
      @java.lang.Override
      public boolean hasMaxDelta() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional float max_delta = 1 [default = 0.2];</code>
       * @return The maxDelta.
       */
      @java.lang.Override
      public float getMaxDelta() {
        return maxDelta_;
      }
      /**
       * <code>optional float max_delta = 1 [default = 0.2];</code>
       * @param value The maxDelta to set.
       * @return This builder for chaining.
       */
      public Builder setMaxDelta(float value) {
        bitField0_ |= 0x00000001;
        maxDelta_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_delta = 1 [default = 0.2];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxDelta() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxDelta_ = 0.2F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomAdjustBrightness)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomAdjustBrightness)
    private static final object_detection.protos.Preprocessor.RandomAdjustBrightness DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomAdjustBrightness();
    }

    public static object_detection.protos.Preprocessor.RandomAdjustBrightness getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomAdjustBrightness>
        PARSER = new com.google.protobuf.AbstractParser<RandomAdjustBrightness>() {
      @java.lang.Override
      public RandomAdjustBrightness parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomAdjustBrightness(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomAdjustBrightness> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomAdjustBrightness> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomAdjustBrightness getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomAdjustContrastOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomAdjustContrast)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float min_delta = 1 [default = 0.8];</code>
     * @return Whether the minDelta field is set.
     */
    boolean hasMinDelta();
    /**
     * <code>optional float min_delta = 1 [default = 0.8];</code>
     * @return The minDelta.
     */
    float getMinDelta();

    /**
     * <code>optional float max_delta = 2 [default = 1.25];</code>
     * @return Whether the maxDelta field is set.
     */
    boolean hasMaxDelta();
    /**
     * <code>optional float max_delta = 2 [default = 1.25];</code>
     * @return The maxDelta.
     */
    float getMaxDelta();
  }
  /**
   * <pre>
   * Randomly scales contract by a value between [min_delta, max_delta].
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomAdjustContrast}
   */
  public static final class RandomAdjustContrast extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomAdjustContrast)
      RandomAdjustContrastOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomAdjustContrast.newBuilder() to construct.
    private RandomAdjustContrast(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomAdjustContrast() {
      minDelta_ = 0.8F;
      maxDelta_ = 1.25F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomAdjustContrast();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomAdjustContrast(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              minDelta_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              maxDelta_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustContrast_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustContrast_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomAdjustContrast.class, object_detection.protos.Preprocessor.RandomAdjustContrast.Builder.class);
    }

    private int bitField0_;
    public static final int MIN_DELTA_FIELD_NUMBER = 1;
    private float minDelta_;
    /**
     * <code>optional float min_delta = 1 [default = 0.8];</code>
     * @return Whether the minDelta field is set.
     */
    @java.lang.Override
    public boolean hasMinDelta() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional float min_delta = 1 [default = 0.8];</code>
     * @return The minDelta.
     */
    @java.lang.Override
    public float getMinDelta() {
      return minDelta_;
    }

    public static final int MAX_DELTA_FIELD_NUMBER = 2;
    private float maxDelta_;
    /**
     * <code>optional float max_delta = 2 [default = 1.25];</code>
     * @return Whether the maxDelta field is set.
     */
    @java.lang.Override
    public boolean hasMaxDelta() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional float max_delta = 2 [default = 1.25];</code>
     * @return The maxDelta.
     */
    @java.lang.Override
    public float getMaxDelta() {
      return maxDelta_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, minDelta_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, maxDelta_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, minDelta_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, maxDelta_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomAdjustContrast)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomAdjustContrast other = (object_detection.protos.Preprocessor.RandomAdjustContrast) obj;

      if (hasMinDelta() != other.hasMinDelta()) return false;
      if (hasMinDelta()) {
        if (java.lang.Float.floatToIntBits(getMinDelta())
            != java.lang.Float.floatToIntBits(
                other.getMinDelta())) return false;
      }
      if (hasMaxDelta() != other.hasMaxDelta()) return false;
      if (hasMaxDelta()) {
        if (java.lang.Float.floatToIntBits(getMaxDelta())
            != java.lang.Float.floatToIntBits(
                other.getMaxDelta())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMinDelta()) {
        hash = (37 * hash) + MIN_DELTA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinDelta());
      }
      if (hasMaxDelta()) {
        hash = (37 * hash) + MAX_DELTA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxDelta());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomAdjustContrast parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustContrast parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustContrast parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustContrast parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustContrast parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustContrast parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustContrast parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustContrast parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustContrast parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustContrast parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustContrast parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustContrast parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomAdjustContrast prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly scales contract by a value between [min_delta, max_delta].
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomAdjustContrast}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomAdjustContrast)
        object_detection.protos.Preprocessor.RandomAdjustContrastOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustContrast_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustContrast_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomAdjustContrast.class, object_detection.protos.Preprocessor.RandomAdjustContrast.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomAdjustContrast.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        minDelta_ = 0.8F;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxDelta_ = 1.25F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustContrast_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustContrast getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomAdjustContrast.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustContrast build() {
        object_detection.protos.Preprocessor.RandomAdjustContrast result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustContrast buildPartial() {
        object_detection.protos.Preprocessor.RandomAdjustContrast result = new object_detection.protos.Preprocessor.RandomAdjustContrast(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.minDelta_ = minDelta_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxDelta_ = maxDelta_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomAdjustContrast) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomAdjustContrast)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomAdjustContrast other) {
        if (other == object_detection.protos.Preprocessor.RandomAdjustContrast.getDefaultInstance()) return this;
        if (other.hasMinDelta()) {
          setMinDelta(other.getMinDelta());
        }
        if (other.hasMaxDelta()) {
          setMaxDelta(other.getMaxDelta());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomAdjustContrast parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomAdjustContrast) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float minDelta_ = 0.8F;
      /**
       * <code>optional float min_delta = 1 [default = 0.8];</code>
       * @return Whether the minDelta field is set.
       */
      @java.lang.Override
      public boolean hasMinDelta() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional float min_delta = 1 [default = 0.8];</code>
       * @return The minDelta.
       */
      @java.lang.Override
      public float getMinDelta() {
        return minDelta_;
      }
      /**
       * <code>optional float min_delta = 1 [default = 0.8];</code>
       * @param value The minDelta to set.
       * @return This builder for chaining.
       */
      public Builder setMinDelta(float value) {
        bitField0_ |= 0x00000001;
        minDelta_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float min_delta = 1 [default = 0.8];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinDelta() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minDelta_ = 0.8F;
        onChanged();
        return this;
      }

      private float maxDelta_ = 1.25F;
      /**
       * <code>optional float max_delta = 2 [default = 1.25];</code>
       * @return Whether the maxDelta field is set.
       */
      @java.lang.Override
      public boolean hasMaxDelta() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional float max_delta = 2 [default = 1.25];</code>
       * @return The maxDelta.
       */
      @java.lang.Override
      public float getMaxDelta() {
        return maxDelta_;
      }
      /**
       * <code>optional float max_delta = 2 [default = 1.25];</code>
       * @param value The maxDelta to set.
       * @return This builder for chaining.
       */
      public Builder setMaxDelta(float value) {
        bitField0_ |= 0x00000002;
        maxDelta_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_delta = 2 [default = 1.25];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxDelta() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxDelta_ = 1.25F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomAdjustContrast)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomAdjustContrast)
    private static final object_detection.protos.Preprocessor.RandomAdjustContrast DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomAdjustContrast();
    }

    public static object_detection.protos.Preprocessor.RandomAdjustContrast getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomAdjustContrast>
        PARSER = new com.google.protobuf.AbstractParser<RandomAdjustContrast>() {
      @java.lang.Override
      public RandomAdjustContrast parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomAdjustContrast(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomAdjustContrast> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomAdjustContrast> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomAdjustContrast getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomAdjustHueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomAdjustHue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float max_delta = 1 [default = 0.02];</code>
     * @return Whether the maxDelta field is set.
     */
    boolean hasMaxDelta();
    /**
     * <code>optional float max_delta = 1 [default = 0.02];</code>
     * @return The maxDelta.
     */
    float getMaxDelta();
  }
  /**
   * <pre>
   * Randomly alters hue by a value of up to max_delta.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomAdjustHue}
   */
  public static final class RandomAdjustHue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomAdjustHue)
      RandomAdjustHueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomAdjustHue.newBuilder() to construct.
    private RandomAdjustHue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomAdjustHue() {
      maxDelta_ = 0.02F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomAdjustHue();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomAdjustHue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              maxDelta_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustHue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustHue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomAdjustHue.class, object_detection.protos.Preprocessor.RandomAdjustHue.Builder.class);
    }

    private int bitField0_;
    public static final int MAX_DELTA_FIELD_NUMBER = 1;
    private float maxDelta_;
    /**
     * <code>optional float max_delta = 1 [default = 0.02];</code>
     * @return Whether the maxDelta field is set.
     */
    @java.lang.Override
    public boolean hasMaxDelta() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional float max_delta = 1 [default = 0.02];</code>
     * @return The maxDelta.
     */
    @java.lang.Override
    public float getMaxDelta() {
      return maxDelta_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, maxDelta_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, maxDelta_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomAdjustHue)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomAdjustHue other = (object_detection.protos.Preprocessor.RandomAdjustHue) obj;

      if (hasMaxDelta() != other.hasMaxDelta()) return false;
      if (hasMaxDelta()) {
        if (java.lang.Float.floatToIntBits(getMaxDelta())
            != java.lang.Float.floatToIntBits(
                other.getMaxDelta())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMaxDelta()) {
        hash = (37 * hash) + MAX_DELTA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxDelta());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomAdjustHue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustHue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustHue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustHue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustHue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustHue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustHue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustHue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustHue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustHue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustHue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustHue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomAdjustHue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly alters hue by a value of up to max_delta.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomAdjustHue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomAdjustHue)
        object_detection.protos.Preprocessor.RandomAdjustHueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustHue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustHue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomAdjustHue.class, object_detection.protos.Preprocessor.RandomAdjustHue.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomAdjustHue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        maxDelta_ = 0.02F;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustHue_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustHue getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomAdjustHue.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustHue build() {
        object_detection.protos.Preprocessor.RandomAdjustHue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustHue buildPartial() {
        object_detection.protos.Preprocessor.RandomAdjustHue result = new object_detection.protos.Preprocessor.RandomAdjustHue(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.maxDelta_ = maxDelta_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomAdjustHue) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomAdjustHue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomAdjustHue other) {
        if (other == object_detection.protos.Preprocessor.RandomAdjustHue.getDefaultInstance()) return this;
        if (other.hasMaxDelta()) {
          setMaxDelta(other.getMaxDelta());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomAdjustHue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomAdjustHue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float maxDelta_ = 0.02F;
      /**
       * <code>optional float max_delta = 1 [default = 0.02];</code>
       * @return Whether the maxDelta field is set.
       */
      @java.lang.Override
      public boolean hasMaxDelta() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional float max_delta = 1 [default = 0.02];</code>
       * @return The maxDelta.
       */
      @java.lang.Override
      public float getMaxDelta() {
        return maxDelta_;
      }
      /**
       * <code>optional float max_delta = 1 [default = 0.02];</code>
       * @param value The maxDelta to set.
       * @return This builder for chaining.
       */
      public Builder setMaxDelta(float value) {
        bitField0_ |= 0x00000001;
        maxDelta_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_delta = 1 [default = 0.02];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxDelta() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxDelta_ = 0.02F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomAdjustHue)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomAdjustHue)
    private static final object_detection.protos.Preprocessor.RandomAdjustHue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomAdjustHue();
    }

    public static object_detection.protos.Preprocessor.RandomAdjustHue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomAdjustHue>
        PARSER = new com.google.protobuf.AbstractParser<RandomAdjustHue>() {
      @java.lang.Override
      public RandomAdjustHue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomAdjustHue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomAdjustHue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomAdjustHue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomAdjustHue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomAdjustSaturationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomAdjustSaturation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float min_delta = 1 [default = 0.8];</code>
     * @return Whether the minDelta field is set.
     */
    boolean hasMinDelta();
    /**
     * <code>optional float min_delta = 1 [default = 0.8];</code>
     * @return The minDelta.
     */
    float getMinDelta();

    /**
     * <code>optional float max_delta = 2 [default = 1.25];</code>
     * @return Whether the maxDelta field is set.
     */
    boolean hasMaxDelta();
    /**
     * <code>optional float max_delta = 2 [default = 1.25];</code>
     * @return The maxDelta.
     */
    float getMaxDelta();
  }
  /**
   * <pre>
   * Randomly changes saturation by a value between [min_delta, max_delta].
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomAdjustSaturation}
   */
  public static final class RandomAdjustSaturation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomAdjustSaturation)
      RandomAdjustSaturationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomAdjustSaturation.newBuilder() to construct.
    private RandomAdjustSaturation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomAdjustSaturation() {
      minDelta_ = 0.8F;
      maxDelta_ = 1.25F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomAdjustSaturation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomAdjustSaturation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              minDelta_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              maxDelta_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustSaturation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustSaturation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomAdjustSaturation.class, object_detection.protos.Preprocessor.RandomAdjustSaturation.Builder.class);
    }

    private int bitField0_;
    public static final int MIN_DELTA_FIELD_NUMBER = 1;
    private float minDelta_;
    /**
     * <code>optional float min_delta = 1 [default = 0.8];</code>
     * @return Whether the minDelta field is set.
     */
    @java.lang.Override
    public boolean hasMinDelta() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional float min_delta = 1 [default = 0.8];</code>
     * @return The minDelta.
     */
    @java.lang.Override
    public float getMinDelta() {
      return minDelta_;
    }

    public static final int MAX_DELTA_FIELD_NUMBER = 2;
    private float maxDelta_;
    /**
     * <code>optional float max_delta = 2 [default = 1.25];</code>
     * @return Whether the maxDelta field is set.
     */
    @java.lang.Override
    public boolean hasMaxDelta() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional float max_delta = 2 [default = 1.25];</code>
     * @return The maxDelta.
     */
    @java.lang.Override
    public float getMaxDelta() {
      return maxDelta_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, minDelta_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, maxDelta_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, minDelta_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, maxDelta_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomAdjustSaturation)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomAdjustSaturation other = (object_detection.protos.Preprocessor.RandomAdjustSaturation) obj;

      if (hasMinDelta() != other.hasMinDelta()) return false;
      if (hasMinDelta()) {
        if (java.lang.Float.floatToIntBits(getMinDelta())
            != java.lang.Float.floatToIntBits(
                other.getMinDelta())) return false;
      }
      if (hasMaxDelta() != other.hasMaxDelta()) return false;
      if (hasMaxDelta()) {
        if (java.lang.Float.floatToIntBits(getMaxDelta())
            != java.lang.Float.floatToIntBits(
                other.getMaxDelta())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMinDelta()) {
        hash = (37 * hash) + MIN_DELTA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinDelta());
      }
      if (hasMaxDelta()) {
        hash = (37 * hash) + MAX_DELTA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxDelta());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomAdjustSaturation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustSaturation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustSaturation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustSaturation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustSaturation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustSaturation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustSaturation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustSaturation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustSaturation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustSaturation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustSaturation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomAdjustSaturation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomAdjustSaturation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly changes saturation by a value between [min_delta, max_delta].
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomAdjustSaturation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomAdjustSaturation)
        object_detection.protos.Preprocessor.RandomAdjustSaturationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustSaturation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustSaturation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomAdjustSaturation.class, object_detection.protos.Preprocessor.RandomAdjustSaturation.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomAdjustSaturation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        minDelta_ = 0.8F;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxDelta_ = 1.25F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAdjustSaturation_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustSaturation getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomAdjustSaturation.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustSaturation build() {
        object_detection.protos.Preprocessor.RandomAdjustSaturation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAdjustSaturation buildPartial() {
        object_detection.protos.Preprocessor.RandomAdjustSaturation result = new object_detection.protos.Preprocessor.RandomAdjustSaturation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.minDelta_ = minDelta_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxDelta_ = maxDelta_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomAdjustSaturation) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomAdjustSaturation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomAdjustSaturation other) {
        if (other == object_detection.protos.Preprocessor.RandomAdjustSaturation.getDefaultInstance()) return this;
        if (other.hasMinDelta()) {
          setMinDelta(other.getMinDelta());
        }
        if (other.hasMaxDelta()) {
          setMaxDelta(other.getMaxDelta());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomAdjustSaturation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomAdjustSaturation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float minDelta_ = 0.8F;
      /**
       * <code>optional float min_delta = 1 [default = 0.8];</code>
       * @return Whether the minDelta field is set.
       */
      @java.lang.Override
      public boolean hasMinDelta() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional float min_delta = 1 [default = 0.8];</code>
       * @return The minDelta.
       */
      @java.lang.Override
      public float getMinDelta() {
        return minDelta_;
      }
      /**
       * <code>optional float min_delta = 1 [default = 0.8];</code>
       * @param value The minDelta to set.
       * @return This builder for chaining.
       */
      public Builder setMinDelta(float value) {
        bitField0_ |= 0x00000001;
        minDelta_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float min_delta = 1 [default = 0.8];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinDelta() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minDelta_ = 0.8F;
        onChanged();
        return this;
      }

      private float maxDelta_ = 1.25F;
      /**
       * <code>optional float max_delta = 2 [default = 1.25];</code>
       * @return Whether the maxDelta field is set.
       */
      @java.lang.Override
      public boolean hasMaxDelta() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional float max_delta = 2 [default = 1.25];</code>
       * @return The maxDelta.
       */
      @java.lang.Override
      public float getMaxDelta() {
        return maxDelta_;
      }
      /**
       * <code>optional float max_delta = 2 [default = 1.25];</code>
       * @param value The maxDelta to set.
       * @return This builder for chaining.
       */
      public Builder setMaxDelta(float value) {
        bitField0_ |= 0x00000002;
        maxDelta_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_delta = 2 [default = 1.25];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxDelta() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxDelta_ = 1.25F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomAdjustSaturation)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomAdjustSaturation)
    private static final object_detection.protos.Preprocessor.RandomAdjustSaturation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomAdjustSaturation();
    }

    public static object_detection.protos.Preprocessor.RandomAdjustSaturation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomAdjustSaturation>
        PARSER = new com.google.protobuf.AbstractParser<RandomAdjustSaturation>() {
      @java.lang.Override
      public RandomAdjustSaturation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomAdjustSaturation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomAdjustSaturation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomAdjustSaturation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomAdjustSaturation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomDistortColorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomDistortColor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 color_ordering = 1;</code>
     * @return Whether the colorOrdering field is set.
     */
    boolean hasColorOrdering();
    /**
     * <code>optional int32 color_ordering = 1;</code>
     * @return The colorOrdering.
     */
    int getColorOrdering();
  }
  /**
   * <pre>
   * Performs a random color distortion. color_orderings should either be 0 or 1.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomDistortColor}
   */
  public static final class RandomDistortColor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomDistortColor)
      RandomDistortColorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomDistortColor.newBuilder() to construct.
    private RandomDistortColor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomDistortColor() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomDistortColor();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomDistortColor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              colorOrdering_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomDistortColor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomDistortColor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomDistortColor.class, object_detection.protos.Preprocessor.RandomDistortColor.Builder.class);
    }

    private int bitField0_;
    public static final int COLOR_ORDERING_FIELD_NUMBER = 1;
    private int colorOrdering_;
    /**
     * <code>optional int32 color_ordering = 1;</code>
     * @return Whether the colorOrdering field is set.
     */
    @java.lang.Override
    public boolean hasColorOrdering() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 color_ordering = 1;</code>
     * @return The colorOrdering.
     */
    @java.lang.Override
    public int getColorOrdering() {
      return colorOrdering_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, colorOrdering_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, colorOrdering_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomDistortColor)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomDistortColor other = (object_detection.protos.Preprocessor.RandomDistortColor) obj;

      if (hasColorOrdering() != other.hasColorOrdering()) return false;
      if (hasColorOrdering()) {
        if (getColorOrdering()
            != other.getColorOrdering()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasColorOrdering()) {
        hash = (37 * hash) + COLOR_ORDERING_FIELD_NUMBER;
        hash = (53 * hash) + getColorOrdering();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomDistortColor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomDistortColor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomDistortColor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomDistortColor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomDistortColor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomDistortColor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomDistortColor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomDistortColor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomDistortColor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomDistortColor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomDistortColor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomDistortColor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomDistortColor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Performs a random color distortion. color_orderings should either be 0 or 1.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomDistortColor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomDistortColor)
        object_detection.protos.Preprocessor.RandomDistortColorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomDistortColor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomDistortColor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomDistortColor.class, object_detection.protos.Preprocessor.RandomDistortColor.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomDistortColor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        colorOrdering_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomDistortColor_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomDistortColor getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomDistortColor.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomDistortColor build() {
        object_detection.protos.Preprocessor.RandomDistortColor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomDistortColor buildPartial() {
        object_detection.protos.Preprocessor.RandomDistortColor result = new object_detection.protos.Preprocessor.RandomDistortColor(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.colorOrdering_ = colorOrdering_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomDistortColor) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomDistortColor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomDistortColor other) {
        if (other == object_detection.protos.Preprocessor.RandomDistortColor.getDefaultInstance()) return this;
        if (other.hasColorOrdering()) {
          setColorOrdering(other.getColorOrdering());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomDistortColor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomDistortColor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int colorOrdering_ ;
      /**
       * <code>optional int32 color_ordering = 1;</code>
       * @return Whether the colorOrdering field is set.
       */
      @java.lang.Override
      public boolean hasColorOrdering() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 color_ordering = 1;</code>
       * @return The colorOrdering.
       */
      @java.lang.Override
      public int getColorOrdering() {
        return colorOrdering_;
      }
      /**
       * <code>optional int32 color_ordering = 1;</code>
       * @param value The colorOrdering to set.
       * @return This builder for chaining.
       */
      public Builder setColorOrdering(int value) {
        bitField0_ |= 0x00000001;
        colorOrdering_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 color_ordering = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearColorOrdering() {
        bitField0_ = (bitField0_ & ~0x00000001);
        colorOrdering_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomDistortColor)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomDistortColor)
    private static final object_detection.protos.Preprocessor.RandomDistortColor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomDistortColor();
    }

    public static object_detection.protos.Preprocessor.RandomDistortColor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomDistortColor>
        PARSER = new com.google.protobuf.AbstractParser<RandomDistortColor>() {
      @java.lang.Override
      public RandomDistortColor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomDistortColor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomDistortColor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomDistortColor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomDistortColor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomJitterBoxesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomJitterBoxes)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float ratio = 1 [default = 0.05];</code>
     * @return Whether the ratio field is set.
     */
    boolean hasRatio();
    /**
     * <code>optional float ratio = 1 [default = 0.05];</code>
     * @return The ratio.
     */
    float getRatio();
  }
  /**
   * <pre>
   * Randomly jitters corners of boxes in the image determined by ratio.
   * ie. If a box is [100, 200] and ratio is 0.02, the corners can move by [1, 4].
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomJitterBoxes}
   */
  public static final class RandomJitterBoxes extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomJitterBoxes)
      RandomJitterBoxesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomJitterBoxes.newBuilder() to construct.
    private RandomJitterBoxes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomJitterBoxes() {
      ratio_ = 0.05F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomJitterBoxes();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomJitterBoxes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              ratio_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomJitterBoxes_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomJitterBoxes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomJitterBoxes.class, object_detection.protos.Preprocessor.RandomJitterBoxes.Builder.class);
    }

    private int bitField0_;
    public static final int RATIO_FIELD_NUMBER = 1;
    private float ratio_;
    /**
     * <code>optional float ratio = 1 [default = 0.05];</code>
     * @return Whether the ratio field is set.
     */
    @java.lang.Override
    public boolean hasRatio() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional float ratio = 1 [default = 0.05];</code>
     * @return The ratio.
     */
    @java.lang.Override
    public float getRatio() {
      return ratio_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, ratio_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, ratio_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomJitterBoxes)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomJitterBoxes other = (object_detection.protos.Preprocessor.RandomJitterBoxes) obj;

      if (hasRatio() != other.hasRatio()) return false;
      if (hasRatio()) {
        if (java.lang.Float.floatToIntBits(getRatio())
            != java.lang.Float.floatToIntBits(
                other.getRatio())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRatio()) {
        hash = (37 * hash) + RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRatio());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomJitterBoxes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomJitterBoxes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomJitterBoxes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomJitterBoxes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomJitterBoxes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomJitterBoxes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomJitterBoxes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomJitterBoxes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomJitterBoxes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomJitterBoxes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomJitterBoxes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomJitterBoxes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomJitterBoxes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly jitters corners of boxes in the image determined by ratio.
     * ie. If a box is [100, 200] and ratio is 0.02, the corners can move by [1, 4].
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomJitterBoxes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomJitterBoxes)
        object_detection.protos.Preprocessor.RandomJitterBoxesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomJitterBoxes_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomJitterBoxes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomJitterBoxes.class, object_detection.protos.Preprocessor.RandomJitterBoxes.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomJitterBoxes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        ratio_ = 0.05F;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomJitterBoxes_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomJitterBoxes getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomJitterBoxes.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomJitterBoxes build() {
        object_detection.protos.Preprocessor.RandomJitterBoxes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomJitterBoxes buildPartial() {
        object_detection.protos.Preprocessor.RandomJitterBoxes result = new object_detection.protos.Preprocessor.RandomJitterBoxes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ratio_ = ratio_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomJitterBoxes) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomJitterBoxes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomJitterBoxes other) {
        if (other == object_detection.protos.Preprocessor.RandomJitterBoxes.getDefaultInstance()) return this;
        if (other.hasRatio()) {
          setRatio(other.getRatio());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomJitterBoxes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomJitterBoxes) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float ratio_ = 0.05F;
      /**
       * <code>optional float ratio = 1 [default = 0.05];</code>
       * @return Whether the ratio field is set.
       */
      @java.lang.Override
      public boolean hasRatio() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional float ratio = 1 [default = 0.05];</code>
       * @return The ratio.
       */
      @java.lang.Override
      public float getRatio() {
        return ratio_;
      }
      /**
       * <code>optional float ratio = 1 [default = 0.05];</code>
       * @param value The ratio to set.
       * @return This builder for chaining.
       */
      public Builder setRatio(float value) {
        bitField0_ |= 0x00000001;
        ratio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float ratio = 1 [default = 0.05];</code>
       * @return This builder for chaining.
       */
      public Builder clearRatio() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ratio_ = 0.05F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomJitterBoxes)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomJitterBoxes)
    private static final object_detection.protos.Preprocessor.RandomJitterBoxes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomJitterBoxes();
    }

    public static object_detection.protos.Preprocessor.RandomJitterBoxes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomJitterBoxes>
        PARSER = new com.google.protobuf.AbstractParser<RandomJitterBoxes>() {
      @java.lang.Override
      public RandomJitterBoxes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomJitterBoxes(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomJitterBoxes> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomJitterBoxes> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomJitterBoxes getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomCropImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomCropImage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Cropped image must cover at least one box by this fraction.
     * </pre>
     *
     * <code>optional float min_object_covered = 1 [default = 1];</code>
     * @return Whether the minObjectCovered field is set.
     */
    boolean hasMinObjectCovered();
    /**
     * <pre>
     * Cropped image must cover at least one box by this fraction.
     * </pre>
     *
     * <code>optional float min_object_covered = 1 [default = 1];</code>
     * @return The minObjectCovered.
     */
    float getMinObjectCovered();

    /**
     * <pre>
     * Aspect ratio bounds of cropped image.
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2 [default = 0.75];</code>
     * @return Whether the minAspectRatio field is set.
     */
    boolean hasMinAspectRatio();
    /**
     * <pre>
     * Aspect ratio bounds of cropped image.
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2 [default = 0.75];</code>
     * @return The minAspectRatio.
     */
    float getMinAspectRatio();

    /**
     * <code>optional float max_aspect_ratio = 3 [default = 1.33];</code>
     * @return Whether the maxAspectRatio field is set.
     */
    boolean hasMaxAspectRatio();
    /**
     * <code>optional float max_aspect_ratio = 3 [default = 1.33];</code>
     * @return The maxAspectRatio.
     */
    float getMaxAspectRatio();

    /**
     * <pre>
     * Allowed area ratio of cropped image to original image.
     * </pre>
     *
     * <code>optional float min_area = 4 [default = 0.1];</code>
     * @return Whether the minArea field is set.
     */
    boolean hasMinArea();
    /**
     * <pre>
     * Allowed area ratio of cropped image to original image.
     * </pre>
     *
     * <code>optional float min_area = 4 [default = 0.1];</code>
     * @return The minArea.
     */
    float getMinArea();

    /**
     * <code>optional float max_area = 5 [default = 1];</code>
     * @return Whether the maxArea field is set.
     */
    boolean hasMaxArea();
    /**
     * <code>optional float max_area = 5 [default = 1];</code>
     * @return The maxArea.
     */
    float getMaxArea();

    /**
     * <pre>
     * Minimum overlap threshold of cropped boxes to keep in new image. If the
     * ratio between a cropped bounding box and the original is less than this
     * value, it is removed from the new image.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6 [default = 0.3];</code>
     * @return Whether the overlapThresh field is set.
     */
    boolean hasOverlapThresh();
    /**
     * <pre>
     * Minimum overlap threshold of cropped boxes to keep in new image. If the
     * ratio between a cropped bounding box and the original is less than this
     * value, it is removed from the new image.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6 [default = 0.3];</code>
     * @return The overlapThresh.
     */
    float getOverlapThresh();

    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 8 [default = true];</code>
     * @return Whether the clipBoxes field is set.
     */
    boolean hasClipBoxes();
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 8 [default = true];</code>
     * @return The clipBoxes.
     */
    boolean getClipBoxes();

    /**
     * <pre>
     * Probability of keeping the original image.
     * </pre>
     *
     * <code>optional float random_coef = 7 [default = 0];</code>
     * @return Whether the randomCoef field is set.
     */
    boolean hasRandomCoef();
    /**
     * <pre>
     * Probability of keeping the original image.
     * </pre>
     *
     * <code>optional float random_coef = 7 [default = 0];</code>
     * @return The randomCoef.
     */
    float getRandomCoef();
  }
  /**
   * <pre>
   * Randomly crops the image and bounding boxes.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomCropImage}
   */
  public static final class RandomCropImage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomCropImage)
      RandomCropImageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomCropImage.newBuilder() to construct.
    private RandomCropImage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomCropImage() {
      minObjectCovered_ = 1F;
      minAspectRatio_ = 0.75F;
      maxAspectRatio_ = 1.33F;
      minArea_ = 0.1F;
      maxArea_ = 1F;
      overlapThresh_ = 0.3F;
      clipBoxes_ = true;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomCropImage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomCropImage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              minObjectCovered_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              minAspectRatio_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              maxAspectRatio_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              minArea_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              maxArea_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              overlapThresh_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000080;
              randomCoef_ = input.readFloat();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              clipBoxes_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomCropImage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomCropImage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomCropImage.class, object_detection.protos.Preprocessor.RandomCropImage.Builder.class);
    }

    private int bitField0_;
    public static final int MIN_OBJECT_COVERED_FIELD_NUMBER = 1;
    private float minObjectCovered_;
    /**
     * <pre>
     * Cropped image must cover at least one box by this fraction.
     * </pre>
     *
     * <code>optional float min_object_covered = 1 [default = 1];</code>
     * @return Whether the minObjectCovered field is set.
     */
    @java.lang.Override
    public boolean hasMinObjectCovered() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Cropped image must cover at least one box by this fraction.
     * </pre>
     *
     * <code>optional float min_object_covered = 1 [default = 1];</code>
     * @return The minObjectCovered.
     */
    @java.lang.Override
    public float getMinObjectCovered() {
      return minObjectCovered_;
    }

    public static final int MIN_ASPECT_RATIO_FIELD_NUMBER = 2;
    private float minAspectRatio_;
    /**
     * <pre>
     * Aspect ratio bounds of cropped image.
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2 [default = 0.75];</code>
     * @return Whether the minAspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasMinAspectRatio() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Aspect ratio bounds of cropped image.
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2 [default = 0.75];</code>
     * @return The minAspectRatio.
     */
    @java.lang.Override
    public float getMinAspectRatio() {
      return minAspectRatio_;
    }

    public static final int MAX_ASPECT_RATIO_FIELD_NUMBER = 3;
    private float maxAspectRatio_;
    /**
     * <code>optional float max_aspect_ratio = 3 [default = 1.33];</code>
     * @return Whether the maxAspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasMaxAspectRatio() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional float max_aspect_ratio = 3 [default = 1.33];</code>
     * @return The maxAspectRatio.
     */
    @java.lang.Override
    public float getMaxAspectRatio() {
      return maxAspectRatio_;
    }

    public static final int MIN_AREA_FIELD_NUMBER = 4;
    private float minArea_;
    /**
     * <pre>
     * Allowed area ratio of cropped image to original image.
     * </pre>
     *
     * <code>optional float min_area = 4 [default = 0.1];</code>
     * @return Whether the minArea field is set.
     */
    @java.lang.Override
    public boolean hasMinArea() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Allowed area ratio of cropped image to original image.
     * </pre>
     *
     * <code>optional float min_area = 4 [default = 0.1];</code>
     * @return The minArea.
     */
    @java.lang.Override
    public float getMinArea() {
      return minArea_;
    }

    public static final int MAX_AREA_FIELD_NUMBER = 5;
    private float maxArea_;
    /**
     * <code>optional float max_area = 5 [default = 1];</code>
     * @return Whether the maxArea field is set.
     */
    @java.lang.Override
    public boolean hasMaxArea() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional float max_area = 5 [default = 1];</code>
     * @return The maxArea.
     */
    @java.lang.Override
    public float getMaxArea() {
      return maxArea_;
    }

    public static final int OVERLAP_THRESH_FIELD_NUMBER = 6;
    private float overlapThresh_;
    /**
     * <pre>
     * Minimum overlap threshold of cropped boxes to keep in new image. If the
     * ratio between a cropped bounding box and the original is less than this
     * value, it is removed from the new image.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6 [default = 0.3];</code>
     * @return Whether the overlapThresh field is set.
     */
    @java.lang.Override
    public boolean hasOverlapThresh() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Minimum overlap threshold of cropped boxes to keep in new image. If the
     * ratio between a cropped bounding box and the original is less than this
     * value, it is removed from the new image.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6 [default = 0.3];</code>
     * @return The overlapThresh.
     */
    @java.lang.Override
    public float getOverlapThresh() {
      return overlapThresh_;
    }

    public static final int CLIP_BOXES_FIELD_NUMBER = 8;
    private boolean clipBoxes_;
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 8 [default = true];</code>
     * @return Whether the clipBoxes field is set.
     */
    @java.lang.Override
    public boolean hasClipBoxes() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 8 [default = true];</code>
     * @return The clipBoxes.
     */
    @java.lang.Override
    public boolean getClipBoxes() {
      return clipBoxes_;
    }

    public static final int RANDOM_COEF_FIELD_NUMBER = 7;
    private float randomCoef_;
    /**
     * <pre>
     * Probability of keeping the original image.
     * </pre>
     *
     * <code>optional float random_coef = 7 [default = 0];</code>
     * @return Whether the randomCoef field is set.
     */
    @java.lang.Override
    public boolean hasRandomCoef() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Probability of keeping the original image.
     * </pre>
     *
     * <code>optional float random_coef = 7 [default = 0];</code>
     * @return The randomCoef.
     */
    @java.lang.Override
    public float getRandomCoef() {
      return randomCoef_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, minObjectCovered_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, minAspectRatio_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, maxAspectRatio_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(4, minArea_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeFloat(5, maxArea_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFloat(6, overlapThresh_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeFloat(7, randomCoef_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeBool(8, clipBoxes_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, minObjectCovered_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, minAspectRatio_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, maxAspectRatio_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, minArea_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, maxArea_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, overlapThresh_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, randomCoef_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, clipBoxes_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomCropImage)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomCropImage other = (object_detection.protos.Preprocessor.RandomCropImage) obj;

      if (hasMinObjectCovered() != other.hasMinObjectCovered()) return false;
      if (hasMinObjectCovered()) {
        if (java.lang.Float.floatToIntBits(getMinObjectCovered())
            != java.lang.Float.floatToIntBits(
                other.getMinObjectCovered())) return false;
      }
      if (hasMinAspectRatio() != other.hasMinAspectRatio()) return false;
      if (hasMinAspectRatio()) {
        if (java.lang.Float.floatToIntBits(getMinAspectRatio())
            != java.lang.Float.floatToIntBits(
                other.getMinAspectRatio())) return false;
      }
      if (hasMaxAspectRatio() != other.hasMaxAspectRatio()) return false;
      if (hasMaxAspectRatio()) {
        if (java.lang.Float.floatToIntBits(getMaxAspectRatio())
            != java.lang.Float.floatToIntBits(
                other.getMaxAspectRatio())) return false;
      }
      if (hasMinArea() != other.hasMinArea()) return false;
      if (hasMinArea()) {
        if (java.lang.Float.floatToIntBits(getMinArea())
            != java.lang.Float.floatToIntBits(
                other.getMinArea())) return false;
      }
      if (hasMaxArea() != other.hasMaxArea()) return false;
      if (hasMaxArea()) {
        if (java.lang.Float.floatToIntBits(getMaxArea())
            != java.lang.Float.floatToIntBits(
                other.getMaxArea())) return false;
      }
      if (hasOverlapThresh() != other.hasOverlapThresh()) return false;
      if (hasOverlapThresh()) {
        if (java.lang.Float.floatToIntBits(getOverlapThresh())
            != java.lang.Float.floatToIntBits(
                other.getOverlapThresh())) return false;
      }
      if (hasClipBoxes() != other.hasClipBoxes()) return false;
      if (hasClipBoxes()) {
        if (getClipBoxes()
            != other.getClipBoxes()) return false;
      }
      if (hasRandomCoef() != other.hasRandomCoef()) return false;
      if (hasRandomCoef()) {
        if (java.lang.Float.floatToIntBits(getRandomCoef())
            != java.lang.Float.floatToIntBits(
                other.getRandomCoef())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMinObjectCovered()) {
        hash = (37 * hash) + MIN_OBJECT_COVERED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinObjectCovered());
      }
      if (hasMinAspectRatio()) {
        hash = (37 * hash) + MIN_ASPECT_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinAspectRatio());
      }
      if (hasMaxAspectRatio()) {
        hash = (37 * hash) + MAX_ASPECT_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxAspectRatio());
      }
      if (hasMinArea()) {
        hash = (37 * hash) + MIN_AREA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinArea());
      }
      if (hasMaxArea()) {
        hash = (37 * hash) + MAX_AREA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxArea());
      }
      if (hasOverlapThresh()) {
        hash = (37 * hash) + OVERLAP_THRESH_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getOverlapThresh());
      }
      if (hasClipBoxes()) {
        hash = (37 * hash) + CLIP_BOXES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getClipBoxes());
      }
      if (hasRandomCoef()) {
        hash = (37 * hash) + RANDOM_COEF_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRandomCoef());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomCropImage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomCropImage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomCropImage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomCropImage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomCropImage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomCropImage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomCropImage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomCropImage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomCropImage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomCropImage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomCropImage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomCropImage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomCropImage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly crops the image and bounding boxes.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomCropImage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomCropImage)
        object_detection.protos.Preprocessor.RandomCropImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomCropImage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomCropImage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomCropImage.class, object_detection.protos.Preprocessor.RandomCropImage.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomCropImage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        minObjectCovered_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000001);
        minAspectRatio_ = 0.75F;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxAspectRatio_ = 1.33F;
        bitField0_ = (bitField0_ & ~0x00000004);
        minArea_ = 0.1F;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxArea_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000010);
        overlapThresh_ = 0.3F;
        bitField0_ = (bitField0_ & ~0x00000020);
        clipBoxes_ = true;
        bitField0_ = (bitField0_ & ~0x00000040);
        randomCoef_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomCropImage_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomCropImage getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomCropImage.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomCropImage build() {
        object_detection.protos.Preprocessor.RandomCropImage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomCropImage buildPartial() {
        object_detection.protos.Preprocessor.RandomCropImage result = new object_detection.protos.Preprocessor.RandomCropImage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.minObjectCovered_ = minObjectCovered_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minAspectRatio_ = minAspectRatio_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxAspectRatio_ = maxAspectRatio_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.minArea_ = minArea_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxArea_ = maxArea_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          to_bitField0_ |= 0x00000020;
        }
        result.overlapThresh_ = overlapThresh_;
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000040;
        }
        result.clipBoxes_ = clipBoxes_;
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.randomCoef_ = randomCoef_;
          to_bitField0_ |= 0x00000080;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomCropImage) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomCropImage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomCropImage other) {
        if (other == object_detection.protos.Preprocessor.RandomCropImage.getDefaultInstance()) return this;
        if (other.hasMinObjectCovered()) {
          setMinObjectCovered(other.getMinObjectCovered());
        }
        if (other.hasMinAspectRatio()) {
          setMinAspectRatio(other.getMinAspectRatio());
        }
        if (other.hasMaxAspectRatio()) {
          setMaxAspectRatio(other.getMaxAspectRatio());
        }
        if (other.hasMinArea()) {
          setMinArea(other.getMinArea());
        }
        if (other.hasMaxArea()) {
          setMaxArea(other.getMaxArea());
        }
        if (other.hasOverlapThresh()) {
          setOverlapThresh(other.getOverlapThresh());
        }
        if (other.hasClipBoxes()) {
          setClipBoxes(other.getClipBoxes());
        }
        if (other.hasRandomCoef()) {
          setRandomCoef(other.getRandomCoef());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomCropImage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomCropImage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float minObjectCovered_ = 1F;
      /**
       * <pre>
       * Cropped image must cover at least one box by this fraction.
       * </pre>
       *
       * <code>optional float min_object_covered = 1 [default = 1];</code>
       * @return Whether the minObjectCovered field is set.
       */
      @java.lang.Override
      public boolean hasMinObjectCovered() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Cropped image must cover at least one box by this fraction.
       * </pre>
       *
       * <code>optional float min_object_covered = 1 [default = 1];</code>
       * @return The minObjectCovered.
       */
      @java.lang.Override
      public float getMinObjectCovered() {
        return minObjectCovered_;
      }
      /**
       * <pre>
       * Cropped image must cover at least one box by this fraction.
       * </pre>
       *
       * <code>optional float min_object_covered = 1 [default = 1];</code>
       * @param value The minObjectCovered to set.
       * @return This builder for chaining.
       */
      public Builder setMinObjectCovered(float value) {
        bitField0_ |= 0x00000001;
        minObjectCovered_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cropped image must cover at least one box by this fraction.
       * </pre>
       *
       * <code>optional float min_object_covered = 1 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinObjectCovered() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minObjectCovered_ = 1F;
        onChanged();
        return this;
      }

      private float minAspectRatio_ = 0.75F;
      /**
       * <pre>
       * Aspect ratio bounds of cropped image.
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2 [default = 0.75];</code>
       * @return Whether the minAspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasMinAspectRatio() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Aspect ratio bounds of cropped image.
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2 [default = 0.75];</code>
       * @return The minAspectRatio.
       */
      @java.lang.Override
      public float getMinAspectRatio() {
        return minAspectRatio_;
      }
      /**
       * <pre>
       * Aspect ratio bounds of cropped image.
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2 [default = 0.75];</code>
       * @param value The minAspectRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMinAspectRatio(float value) {
        bitField0_ |= 0x00000002;
        minAspectRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Aspect ratio bounds of cropped image.
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2 [default = 0.75];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinAspectRatio() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minAspectRatio_ = 0.75F;
        onChanged();
        return this;
      }

      private float maxAspectRatio_ = 1.33F;
      /**
       * <code>optional float max_aspect_ratio = 3 [default = 1.33];</code>
       * @return Whether the maxAspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasMaxAspectRatio() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional float max_aspect_ratio = 3 [default = 1.33];</code>
       * @return The maxAspectRatio.
       */
      @java.lang.Override
      public float getMaxAspectRatio() {
        return maxAspectRatio_;
      }
      /**
       * <code>optional float max_aspect_ratio = 3 [default = 1.33];</code>
       * @param value The maxAspectRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMaxAspectRatio(float value) {
        bitField0_ |= 0x00000004;
        maxAspectRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_aspect_ratio = 3 [default = 1.33];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxAspectRatio() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxAspectRatio_ = 1.33F;
        onChanged();
        return this;
      }

      private float minArea_ = 0.1F;
      /**
       * <pre>
       * Allowed area ratio of cropped image to original image.
       * </pre>
       *
       * <code>optional float min_area = 4 [default = 0.1];</code>
       * @return Whether the minArea field is set.
       */
      @java.lang.Override
      public boolean hasMinArea() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Allowed area ratio of cropped image to original image.
       * </pre>
       *
       * <code>optional float min_area = 4 [default = 0.1];</code>
       * @return The minArea.
       */
      @java.lang.Override
      public float getMinArea() {
        return minArea_;
      }
      /**
       * <pre>
       * Allowed area ratio of cropped image to original image.
       * </pre>
       *
       * <code>optional float min_area = 4 [default = 0.1];</code>
       * @param value The minArea to set.
       * @return This builder for chaining.
       */
      public Builder setMinArea(float value) {
        bitField0_ |= 0x00000008;
        minArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Allowed area ratio of cropped image to original image.
       * </pre>
       *
       * <code>optional float min_area = 4 [default = 0.1];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinArea() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minArea_ = 0.1F;
        onChanged();
        return this;
      }

      private float maxArea_ = 1F;
      /**
       * <code>optional float max_area = 5 [default = 1];</code>
       * @return Whether the maxArea field is set.
       */
      @java.lang.Override
      public boolean hasMaxArea() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional float max_area = 5 [default = 1];</code>
       * @return The maxArea.
       */
      @java.lang.Override
      public float getMaxArea() {
        return maxArea_;
      }
      /**
       * <code>optional float max_area = 5 [default = 1];</code>
       * @param value The maxArea to set.
       * @return This builder for chaining.
       */
      public Builder setMaxArea(float value) {
        bitField0_ |= 0x00000010;
        maxArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_area = 5 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxArea() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxArea_ = 1F;
        onChanged();
        return this;
      }

      private float overlapThresh_ = 0.3F;
      /**
       * <pre>
       * Minimum overlap threshold of cropped boxes to keep in new image. If the
       * ratio between a cropped bounding box and the original is less than this
       * value, it is removed from the new image.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6 [default = 0.3];</code>
       * @return Whether the overlapThresh field is set.
       */
      @java.lang.Override
      public boolean hasOverlapThresh() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Minimum overlap threshold of cropped boxes to keep in new image. If the
       * ratio between a cropped bounding box and the original is less than this
       * value, it is removed from the new image.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6 [default = 0.3];</code>
       * @return The overlapThresh.
       */
      @java.lang.Override
      public float getOverlapThresh() {
        return overlapThresh_;
      }
      /**
       * <pre>
       * Minimum overlap threshold of cropped boxes to keep in new image. If the
       * ratio between a cropped bounding box and the original is less than this
       * value, it is removed from the new image.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6 [default = 0.3];</code>
       * @param value The overlapThresh to set.
       * @return This builder for chaining.
       */
      public Builder setOverlapThresh(float value) {
        bitField0_ |= 0x00000020;
        overlapThresh_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Minimum overlap threshold of cropped boxes to keep in new image. If the
       * ratio between a cropped bounding box and the original is less than this
       * value, it is removed from the new image.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6 [default = 0.3];</code>
       * @return This builder for chaining.
       */
      public Builder clearOverlapThresh() {
        bitField0_ = (bitField0_ & ~0x00000020);
        overlapThresh_ = 0.3F;
        onChanged();
        return this;
      }

      private boolean clipBoxes_ = true;
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 8 [default = true];</code>
       * @return Whether the clipBoxes field is set.
       */
      @java.lang.Override
      public boolean hasClipBoxes() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 8 [default = true];</code>
       * @return The clipBoxes.
       */
      @java.lang.Override
      public boolean getClipBoxes() {
        return clipBoxes_;
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 8 [default = true];</code>
       * @param value The clipBoxes to set.
       * @return This builder for chaining.
       */
      public Builder setClipBoxes(boolean value) {
        bitField0_ |= 0x00000040;
        clipBoxes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 8 [default = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearClipBoxes() {
        bitField0_ = (bitField0_ & ~0x00000040);
        clipBoxes_ = true;
        onChanged();
        return this;
      }

      private float randomCoef_ ;
      /**
       * <pre>
       * Probability of keeping the original image.
       * </pre>
       *
       * <code>optional float random_coef = 7 [default = 0];</code>
       * @return Whether the randomCoef field is set.
       */
      @java.lang.Override
      public boolean hasRandomCoef() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Probability of keeping the original image.
       * </pre>
       *
       * <code>optional float random_coef = 7 [default = 0];</code>
       * @return The randomCoef.
       */
      @java.lang.Override
      public float getRandomCoef() {
        return randomCoef_;
      }
      /**
       * <pre>
       * Probability of keeping the original image.
       * </pre>
       *
       * <code>optional float random_coef = 7 [default = 0];</code>
       * @param value The randomCoef to set.
       * @return This builder for chaining.
       */
      public Builder setRandomCoef(float value) {
        bitField0_ |= 0x00000080;
        randomCoef_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Probability of keeping the original image.
       * </pre>
       *
       * <code>optional float random_coef = 7 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearRandomCoef() {
        bitField0_ = (bitField0_ & ~0x00000080);
        randomCoef_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomCropImage)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomCropImage)
    private static final object_detection.protos.Preprocessor.RandomCropImage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomCropImage();
    }

    public static object_detection.protos.Preprocessor.RandomCropImage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomCropImage>
        PARSER = new com.google.protobuf.AbstractParser<RandomCropImage>() {
      @java.lang.Override
      public RandomCropImage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomCropImage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomCropImage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomCropImage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomCropImage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomPadImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomPadImage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Minimum dimensions for padded image. If unset, will use original image
     * dimension as a lower bound.
     * </pre>
     *
     * <code>optional int32 min_image_height = 1;</code>
     * @return Whether the minImageHeight field is set.
     */
    boolean hasMinImageHeight();
    /**
     * <pre>
     * Minimum dimensions for padded image. If unset, will use original image
     * dimension as a lower bound.
     * </pre>
     *
     * <code>optional int32 min_image_height = 1;</code>
     * @return The minImageHeight.
     */
    int getMinImageHeight();

    /**
     * <code>optional int32 min_image_width = 2;</code>
     * @return Whether the minImageWidth field is set.
     */
    boolean hasMinImageWidth();
    /**
     * <code>optional int32 min_image_width = 2;</code>
     * @return The minImageWidth.
     */
    int getMinImageWidth();

    /**
     * <pre>
     * Maximum dimensions for padded image. If unset, will use double the original
     * image dimension as a lower bound.
     * </pre>
     *
     * <code>optional int32 max_image_height = 3;</code>
     * @return Whether the maxImageHeight field is set.
     */
    boolean hasMaxImageHeight();
    /**
     * <pre>
     * Maximum dimensions for padded image. If unset, will use double the original
     * image dimension as a lower bound.
     * </pre>
     *
     * <code>optional int32 max_image_height = 3;</code>
     * @return The maxImageHeight.
     */
    int getMaxImageHeight();

    /**
     * <code>optional int32 max_image_width = 4;</code>
     * @return Whether the maxImageWidth field is set.
     */
    boolean hasMaxImageWidth();
    /**
     * <code>optional int32 max_image_width = 4;</code>
     * @return The maxImageWidth.
     */
    int getMaxImageWidth();

    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image.
     * </pre>
     *
     * <code>repeated float pad_color = 5;</code>
     * @return A list containing the padColor.
     */
    java.util.List<java.lang.Float> getPadColorList();
    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image.
     * </pre>
     *
     * <code>repeated float pad_color = 5;</code>
     * @return The count of padColor.
     */
    int getPadColorCount();
    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image.
     * </pre>
     *
     * <code>repeated float pad_color = 5;</code>
     * @param index The index of the element to return.
     * @return The padColor at the given index.
     */
    float getPadColor(int index);
  }
  /**
   * <pre>
   * Randomly adds padding to the image.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomPadImage}
   */
  public static final class RandomPadImage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomPadImage)
      RandomPadImageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomPadImage.newBuilder() to construct.
    private RandomPadImage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomPadImage() {
      padColor_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomPadImage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomPadImage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              minImageHeight_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              minImageWidth_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              maxImageHeight_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              maxImageWidth_ = input.readInt32();
              break;
            }
            case 45: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                padColor_ = newFloatList();
                mutable_bitField0_ |= 0x00000010;
              }
              padColor_.addFloat(input.readFloat());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                padColor_ = newFloatList();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                padColor_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          padColor_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomPadImage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomPadImage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomPadImage.class, object_detection.protos.Preprocessor.RandomPadImage.Builder.class);
    }

    private int bitField0_;
    public static final int MIN_IMAGE_HEIGHT_FIELD_NUMBER = 1;
    private int minImageHeight_;
    /**
     * <pre>
     * Minimum dimensions for padded image. If unset, will use original image
     * dimension as a lower bound.
     * </pre>
     *
     * <code>optional int32 min_image_height = 1;</code>
     * @return Whether the minImageHeight field is set.
     */
    @java.lang.Override
    public boolean hasMinImageHeight() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Minimum dimensions for padded image. If unset, will use original image
     * dimension as a lower bound.
     * </pre>
     *
     * <code>optional int32 min_image_height = 1;</code>
     * @return The minImageHeight.
     */
    @java.lang.Override
    public int getMinImageHeight() {
      return minImageHeight_;
    }

    public static final int MIN_IMAGE_WIDTH_FIELD_NUMBER = 2;
    private int minImageWidth_;
    /**
     * <code>optional int32 min_image_width = 2;</code>
     * @return Whether the minImageWidth field is set.
     */
    @java.lang.Override
    public boolean hasMinImageWidth() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 min_image_width = 2;</code>
     * @return The minImageWidth.
     */
    @java.lang.Override
    public int getMinImageWidth() {
      return minImageWidth_;
    }

    public static final int MAX_IMAGE_HEIGHT_FIELD_NUMBER = 3;
    private int maxImageHeight_;
    /**
     * <pre>
     * Maximum dimensions for padded image. If unset, will use double the original
     * image dimension as a lower bound.
     * </pre>
     *
     * <code>optional int32 max_image_height = 3;</code>
     * @return Whether the maxImageHeight field is set.
     */
    @java.lang.Override
    public boolean hasMaxImageHeight() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Maximum dimensions for padded image. If unset, will use double the original
     * image dimension as a lower bound.
     * </pre>
     *
     * <code>optional int32 max_image_height = 3;</code>
     * @return The maxImageHeight.
     */
    @java.lang.Override
    public int getMaxImageHeight() {
      return maxImageHeight_;
    }

    public static final int MAX_IMAGE_WIDTH_FIELD_NUMBER = 4;
    private int maxImageWidth_;
    /**
     * <code>optional int32 max_image_width = 4;</code>
     * @return Whether the maxImageWidth field is set.
     */
    @java.lang.Override
    public boolean hasMaxImageWidth() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional int32 max_image_width = 4;</code>
     * @return The maxImageWidth.
     */
    @java.lang.Override
    public int getMaxImageWidth() {
      return maxImageWidth_;
    }

    public static final int PAD_COLOR_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.FloatList padColor_;
    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image.
     * </pre>
     *
     * <code>repeated float pad_color = 5;</code>
     * @return A list containing the padColor.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getPadColorList() {
      return padColor_;
    }
    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image.
     * </pre>
     *
     * <code>repeated float pad_color = 5;</code>
     * @return The count of padColor.
     */
    public int getPadColorCount() {
      return padColor_.size();
    }
    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image.
     * </pre>
     *
     * <code>repeated float pad_color = 5;</code>
     * @param index The index of the element to return.
     * @return The padColor at the given index.
     */
    public float getPadColor(int index) {
      return padColor_.getFloat(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, minImageHeight_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, minImageWidth_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, maxImageHeight_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, maxImageWidth_);
      }
      for (int i = 0; i < padColor_.size(); i++) {
        output.writeFloat(5, padColor_.getFloat(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, minImageHeight_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, minImageWidth_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, maxImageHeight_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, maxImageWidth_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getPadColorList().size();
        size += dataSize;
        size += 1 * getPadColorList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomPadImage)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomPadImage other = (object_detection.protos.Preprocessor.RandomPadImage) obj;

      if (hasMinImageHeight() != other.hasMinImageHeight()) return false;
      if (hasMinImageHeight()) {
        if (getMinImageHeight()
            != other.getMinImageHeight()) return false;
      }
      if (hasMinImageWidth() != other.hasMinImageWidth()) return false;
      if (hasMinImageWidth()) {
        if (getMinImageWidth()
            != other.getMinImageWidth()) return false;
      }
      if (hasMaxImageHeight() != other.hasMaxImageHeight()) return false;
      if (hasMaxImageHeight()) {
        if (getMaxImageHeight()
            != other.getMaxImageHeight()) return false;
      }
      if (hasMaxImageWidth() != other.hasMaxImageWidth()) return false;
      if (hasMaxImageWidth()) {
        if (getMaxImageWidth()
            != other.getMaxImageWidth()) return false;
      }
      if (!getPadColorList()
          .equals(other.getPadColorList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMinImageHeight()) {
        hash = (37 * hash) + MIN_IMAGE_HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getMinImageHeight();
      }
      if (hasMinImageWidth()) {
        hash = (37 * hash) + MIN_IMAGE_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getMinImageWidth();
      }
      if (hasMaxImageHeight()) {
        hash = (37 * hash) + MAX_IMAGE_HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getMaxImageHeight();
      }
      if (hasMaxImageWidth()) {
        hash = (37 * hash) + MAX_IMAGE_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getMaxImageWidth();
      }
      if (getPadColorCount() > 0) {
        hash = (37 * hash) + PAD_COLOR_FIELD_NUMBER;
        hash = (53 * hash) + getPadColorList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomPadImage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomPadImage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomPadImage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomPadImage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomPadImage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomPadImage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomPadImage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomPadImage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomPadImage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomPadImage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomPadImage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomPadImage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomPadImage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly adds padding to the image.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomPadImage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomPadImage)
        object_detection.protos.Preprocessor.RandomPadImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomPadImage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomPadImage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomPadImage.class, object_detection.protos.Preprocessor.RandomPadImage.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomPadImage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        minImageHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        minImageWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxImageHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        maxImageWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        padColor_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomPadImage_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomPadImage getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomPadImage.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomPadImage build() {
        object_detection.protos.Preprocessor.RandomPadImage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomPadImage buildPartial() {
        object_detection.protos.Preprocessor.RandomPadImage result = new object_detection.protos.Preprocessor.RandomPadImage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.minImageHeight_ = minImageHeight_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.minImageWidth_ = minImageWidth_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.maxImageHeight_ = maxImageHeight_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.maxImageWidth_ = maxImageWidth_;
          to_bitField0_ |= 0x00000008;
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          padColor_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.padColor_ = padColor_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomPadImage) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomPadImage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomPadImage other) {
        if (other == object_detection.protos.Preprocessor.RandomPadImage.getDefaultInstance()) return this;
        if (other.hasMinImageHeight()) {
          setMinImageHeight(other.getMinImageHeight());
        }
        if (other.hasMinImageWidth()) {
          setMinImageWidth(other.getMinImageWidth());
        }
        if (other.hasMaxImageHeight()) {
          setMaxImageHeight(other.getMaxImageHeight());
        }
        if (other.hasMaxImageWidth()) {
          setMaxImageWidth(other.getMaxImageWidth());
        }
        if (!other.padColor_.isEmpty()) {
          if (padColor_.isEmpty()) {
            padColor_ = other.padColor_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensurePadColorIsMutable();
            padColor_.addAll(other.padColor_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomPadImage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomPadImage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int minImageHeight_ ;
      /**
       * <pre>
       * Minimum dimensions for padded image. If unset, will use original image
       * dimension as a lower bound.
       * </pre>
       *
       * <code>optional int32 min_image_height = 1;</code>
       * @return Whether the minImageHeight field is set.
       */
      @java.lang.Override
      public boolean hasMinImageHeight() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Minimum dimensions for padded image. If unset, will use original image
       * dimension as a lower bound.
       * </pre>
       *
       * <code>optional int32 min_image_height = 1;</code>
       * @return The minImageHeight.
       */
      @java.lang.Override
      public int getMinImageHeight() {
        return minImageHeight_;
      }
      /**
       * <pre>
       * Minimum dimensions for padded image. If unset, will use original image
       * dimension as a lower bound.
       * </pre>
       *
       * <code>optional int32 min_image_height = 1;</code>
       * @param value The minImageHeight to set.
       * @return This builder for chaining.
       */
      public Builder setMinImageHeight(int value) {
        bitField0_ |= 0x00000001;
        minImageHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Minimum dimensions for padded image. If unset, will use original image
       * dimension as a lower bound.
       * </pre>
       *
       * <code>optional int32 min_image_height = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinImageHeight() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minImageHeight_ = 0;
        onChanged();
        return this;
      }

      private int minImageWidth_ ;
      /**
       * <code>optional int32 min_image_width = 2;</code>
       * @return Whether the minImageWidth field is set.
       */
      @java.lang.Override
      public boolean hasMinImageWidth() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 min_image_width = 2;</code>
       * @return The minImageWidth.
       */
      @java.lang.Override
      public int getMinImageWidth() {
        return minImageWidth_;
      }
      /**
       * <code>optional int32 min_image_width = 2;</code>
       * @param value The minImageWidth to set.
       * @return This builder for chaining.
       */
      public Builder setMinImageWidth(int value) {
        bitField0_ |= 0x00000002;
        minImageWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 min_image_width = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinImageWidth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minImageWidth_ = 0;
        onChanged();
        return this;
      }

      private int maxImageHeight_ ;
      /**
       * <pre>
       * Maximum dimensions for padded image. If unset, will use double the original
       * image dimension as a lower bound.
       * </pre>
       *
       * <code>optional int32 max_image_height = 3;</code>
       * @return Whether the maxImageHeight field is set.
       */
      @java.lang.Override
      public boolean hasMaxImageHeight() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Maximum dimensions for padded image. If unset, will use double the original
       * image dimension as a lower bound.
       * </pre>
       *
       * <code>optional int32 max_image_height = 3;</code>
       * @return The maxImageHeight.
       */
      @java.lang.Override
      public int getMaxImageHeight() {
        return maxImageHeight_;
      }
      /**
       * <pre>
       * Maximum dimensions for padded image. If unset, will use double the original
       * image dimension as a lower bound.
       * </pre>
       *
       * <code>optional int32 max_image_height = 3;</code>
       * @param value The maxImageHeight to set.
       * @return This builder for chaining.
       */
      public Builder setMaxImageHeight(int value) {
        bitField0_ |= 0x00000004;
        maxImageHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum dimensions for padded image. If unset, will use double the original
       * image dimension as a lower bound.
       * </pre>
       *
       * <code>optional int32 max_image_height = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxImageHeight() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxImageHeight_ = 0;
        onChanged();
        return this;
      }

      private int maxImageWidth_ ;
      /**
       * <code>optional int32 max_image_width = 4;</code>
       * @return Whether the maxImageWidth field is set.
       */
      @java.lang.Override
      public boolean hasMaxImageWidth() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional int32 max_image_width = 4;</code>
       * @return The maxImageWidth.
       */
      @java.lang.Override
      public int getMaxImageWidth() {
        return maxImageWidth_;
      }
      /**
       * <code>optional int32 max_image_width = 4;</code>
       * @param value The maxImageWidth to set.
       * @return This builder for chaining.
       */
      public Builder setMaxImageWidth(int value) {
        bitField0_ |= 0x00000008;
        maxImageWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_image_width = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxImageWidth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        maxImageWidth_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList padColor_ = emptyFloatList();
      private void ensurePadColorIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          padColor_ = mutableCopy(padColor_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image.
       * </pre>
       *
       * <code>repeated float pad_color = 5;</code>
       * @return A list containing the padColor.
       */
      public java.util.List<java.lang.Float>
          getPadColorList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(padColor_) : padColor_;
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image.
       * </pre>
       *
       * <code>repeated float pad_color = 5;</code>
       * @return The count of padColor.
       */
      public int getPadColorCount() {
        return padColor_.size();
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image.
       * </pre>
       *
       * <code>repeated float pad_color = 5;</code>
       * @param index The index of the element to return.
       * @return The padColor at the given index.
       */
      public float getPadColor(int index) {
        return padColor_.getFloat(index);
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image.
       * </pre>
       *
       * <code>repeated float pad_color = 5;</code>
       * @param index The index to set the value at.
       * @param value The padColor to set.
       * @return This builder for chaining.
       */
      public Builder setPadColor(
          int index, float value) {
        ensurePadColorIsMutable();
        padColor_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image.
       * </pre>
       *
       * <code>repeated float pad_color = 5;</code>
       * @param value The padColor to add.
       * @return This builder for chaining.
       */
      public Builder addPadColor(float value) {
        ensurePadColorIsMutable();
        padColor_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image.
       * </pre>
       *
       * <code>repeated float pad_color = 5;</code>
       * @param values The padColor to add.
       * @return This builder for chaining.
       */
      public Builder addAllPadColor(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensurePadColorIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, padColor_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image.
       * </pre>
       *
       * <code>repeated float pad_color = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPadColor() {
        padColor_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomPadImage)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomPadImage)
    private static final object_detection.protos.Preprocessor.RandomPadImage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomPadImage();
    }

    public static object_detection.protos.Preprocessor.RandomPadImage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomPadImage>
        PARSER = new com.google.protobuf.AbstractParser<RandomPadImage>() {
      @java.lang.Override
      public RandomPadImage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomPadImage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomPadImage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomPadImage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomPadImage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomAbsolutePadImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomAbsolutePadImage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Height will be padded uniformly at random from [0, max_height_padding).
     * </pre>
     *
     * <code>optional int32 max_height_padding = 1;</code>
     * @return Whether the maxHeightPadding field is set.
     */
    boolean hasMaxHeightPadding();
    /**
     * <pre>
     * Height will be padded uniformly at random from [0, max_height_padding).
     * </pre>
     *
     * <code>optional int32 max_height_padding = 1;</code>
     * @return The maxHeightPadding.
     */
    int getMaxHeightPadding();

    /**
     * <pre>
     * Width will be padded uniformly at random from [0, max_width_padding).
     * </pre>
     *
     * <code>optional int32 max_width_padding = 2;</code>
     * @return Whether the maxWidthPadding field is set.
     */
    boolean hasMaxWidthPadding();
    /**
     * <pre>
     * Width will be padded uniformly at random from [0, max_width_padding).
     * </pre>
     *
     * <code>optional int32 max_width_padding = 2;</code>
     * @return The maxWidthPadding.
     */
    int getMaxWidthPadding();

    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image.
     * </pre>
     *
     * <code>repeated float pad_color = 3;</code>
     * @return A list containing the padColor.
     */
    java.util.List<java.lang.Float> getPadColorList();
    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image.
     * </pre>
     *
     * <code>repeated float pad_color = 3;</code>
     * @return The count of padColor.
     */
    int getPadColorCount();
    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image.
     * </pre>
     *
     * <code>repeated float pad_color = 3;</code>
     * @param index The index of the element to return.
     * @return The padColor at the given index.
     */
    float getPadColor(int index);
  }
  /**
   * <pre>
   * Randomly adds a padding of size [0, max_height_padding), [0, max_width_padding).
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomAbsolutePadImage}
   */
  public static final class RandomAbsolutePadImage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomAbsolutePadImage)
      RandomAbsolutePadImageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomAbsolutePadImage.newBuilder() to construct.
    private RandomAbsolutePadImage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomAbsolutePadImage() {
      padColor_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomAbsolutePadImage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomAbsolutePadImage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              maxHeightPadding_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              maxWidthPadding_ = input.readInt32();
              break;
            }
            case 29: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                padColor_ = newFloatList();
                mutable_bitField0_ |= 0x00000004;
              }
              padColor_.addFloat(input.readFloat());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                padColor_ = newFloatList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                padColor_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          padColor_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAbsolutePadImage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAbsolutePadImage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomAbsolutePadImage.class, object_detection.protos.Preprocessor.RandomAbsolutePadImage.Builder.class);
    }

    private int bitField0_;
    public static final int MAX_HEIGHT_PADDING_FIELD_NUMBER = 1;
    private int maxHeightPadding_;
    /**
     * <pre>
     * Height will be padded uniformly at random from [0, max_height_padding).
     * </pre>
     *
     * <code>optional int32 max_height_padding = 1;</code>
     * @return Whether the maxHeightPadding field is set.
     */
    @java.lang.Override
    public boolean hasMaxHeightPadding() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Height will be padded uniformly at random from [0, max_height_padding).
     * </pre>
     *
     * <code>optional int32 max_height_padding = 1;</code>
     * @return The maxHeightPadding.
     */
    @java.lang.Override
    public int getMaxHeightPadding() {
      return maxHeightPadding_;
    }

    public static final int MAX_WIDTH_PADDING_FIELD_NUMBER = 2;
    private int maxWidthPadding_;
    /**
     * <pre>
     * Width will be padded uniformly at random from [0, max_width_padding).
     * </pre>
     *
     * <code>optional int32 max_width_padding = 2;</code>
     * @return Whether the maxWidthPadding field is set.
     */
    @java.lang.Override
    public boolean hasMaxWidthPadding() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Width will be padded uniformly at random from [0, max_width_padding).
     * </pre>
     *
     * <code>optional int32 max_width_padding = 2;</code>
     * @return The maxWidthPadding.
     */
    @java.lang.Override
    public int getMaxWidthPadding() {
      return maxWidthPadding_;
    }

    public static final int PAD_COLOR_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.FloatList padColor_;
    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image.
     * </pre>
     *
     * <code>repeated float pad_color = 3;</code>
     * @return A list containing the padColor.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getPadColorList() {
      return padColor_;
    }
    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image.
     * </pre>
     *
     * <code>repeated float pad_color = 3;</code>
     * @return The count of padColor.
     */
    public int getPadColorCount() {
      return padColor_.size();
    }
    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image.
     * </pre>
     *
     * <code>repeated float pad_color = 3;</code>
     * @param index The index of the element to return.
     * @return The padColor at the given index.
     */
    public float getPadColor(int index) {
      return padColor_.getFloat(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, maxHeightPadding_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, maxWidthPadding_);
      }
      for (int i = 0; i < padColor_.size(); i++) {
        output.writeFloat(3, padColor_.getFloat(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, maxHeightPadding_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, maxWidthPadding_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getPadColorList().size();
        size += dataSize;
        size += 1 * getPadColorList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomAbsolutePadImage)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomAbsolutePadImage other = (object_detection.protos.Preprocessor.RandomAbsolutePadImage) obj;

      if (hasMaxHeightPadding() != other.hasMaxHeightPadding()) return false;
      if (hasMaxHeightPadding()) {
        if (getMaxHeightPadding()
            != other.getMaxHeightPadding()) return false;
      }
      if (hasMaxWidthPadding() != other.hasMaxWidthPadding()) return false;
      if (hasMaxWidthPadding()) {
        if (getMaxWidthPadding()
            != other.getMaxWidthPadding()) return false;
      }
      if (!getPadColorList()
          .equals(other.getPadColorList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMaxHeightPadding()) {
        hash = (37 * hash) + MAX_HEIGHT_PADDING_FIELD_NUMBER;
        hash = (53 * hash) + getMaxHeightPadding();
      }
      if (hasMaxWidthPadding()) {
        hash = (37 * hash) + MAX_WIDTH_PADDING_FIELD_NUMBER;
        hash = (53 * hash) + getMaxWidthPadding();
      }
      if (getPadColorCount() > 0) {
        hash = (37 * hash) + PAD_COLOR_FIELD_NUMBER;
        hash = (53 * hash) + getPadColorList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomAbsolutePadImage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomAbsolutePadImage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAbsolutePadImage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomAbsolutePadImage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAbsolutePadImage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomAbsolutePadImage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAbsolutePadImage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomAbsolutePadImage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAbsolutePadImage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomAbsolutePadImage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomAbsolutePadImage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomAbsolutePadImage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomAbsolutePadImage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly adds a padding of size [0, max_height_padding), [0, max_width_padding).
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomAbsolutePadImage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomAbsolutePadImage)
        object_detection.protos.Preprocessor.RandomAbsolutePadImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAbsolutePadImage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAbsolutePadImage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomAbsolutePadImage.class, object_detection.protos.Preprocessor.RandomAbsolutePadImage.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomAbsolutePadImage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        maxHeightPadding_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxWidthPadding_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        padColor_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomAbsolutePadImage_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAbsolutePadImage getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomAbsolutePadImage.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAbsolutePadImage build() {
        object_detection.protos.Preprocessor.RandomAbsolutePadImage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomAbsolutePadImage buildPartial() {
        object_detection.protos.Preprocessor.RandomAbsolutePadImage result = new object_detection.protos.Preprocessor.RandomAbsolutePadImage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.maxHeightPadding_ = maxHeightPadding_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.maxWidthPadding_ = maxWidthPadding_;
          to_bitField0_ |= 0x00000002;
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          padColor_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.padColor_ = padColor_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomAbsolutePadImage) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomAbsolutePadImage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomAbsolutePadImage other) {
        if (other == object_detection.protos.Preprocessor.RandomAbsolutePadImage.getDefaultInstance()) return this;
        if (other.hasMaxHeightPadding()) {
          setMaxHeightPadding(other.getMaxHeightPadding());
        }
        if (other.hasMaxWidthPadding()) {
          setMaxWidthPadding(other.getMaxWidthPadding());
        }
        if (!other.padColor_.isEmpty()) {
          if (padColor_.isEmpty()) {
            padColor_ = other.padColor_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePadColorIsMutable();
            padColor_.addAll(other.padColor_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomAbsolutePadImage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomAbsolutePadImage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int maxHeightPadding_ ;
      /**
       * <pre>
       * Height will be padded uniformly at random from [0, max_height_padding).
       * </pre>
       *
       * <code>optional int32 max_height_padding = 1;</code>
       * @return Whether the maxHeightPadding field is set.
       */
      @java.lang.Override
      public boolean hasMaxHeightPadding() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Height will be padded uniformly at random from [0, max_height_padding).
       * </pre>
       *
       * <code>optional int32 max_height_padding = 1;</code>
       * @return The maxHeightPadding.
       */
      @java.lang.Override
      public int getMaxHeightPadding() {
        return maxHeightPadding_;
      }
      /**
       * <pre>
       * Height will be padded uniformly at random from [0, max_height_padding).
       * </pre>
       *
       * <code>optional int32 max_height_padding = 1;</code>
       * @param value The maxHeightPadding to set.
       * @return This builder for chaining.
       */
      public Builder setMaxHeightPadding(int value) {
        bitField0_ |= 0x00000001;
        maxHeightPadding_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Height will be padded uniformly at random from [0, max_height_padding).
       * </pre>
       *
       * <code>optional int32 max_height_padding = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxHeightPadding() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxHeightPadding_ = 0;
        onChanged();
        return this;
      }

      private int maxWidthPadding_ ;
      /**
       * <pre>
       * Width will be padded uniformly at random from [0, max_width_padding).
       * </pre>
       *
       * <code>optional int32 max_width_padding = 2;</code>
       * @return Whether the maxWidthPadding field is set.
       */
      @java.lang.Override
      public boolean hasMaxWidthPadding() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Width will be padded uniformly at random from [0, max_width_padding).
       * </pre>
       *
       * <code>optional int32 max_width_padding = 2;</code>
       * @return The maxWidthPadding.
       */
      @java.lang.Override
      public int getMaxWidthPadding() {
        return maxWidthPadding_;
      }
      /**
       * <pre>
       * Width will be padded uniformly at random from [0, max_width_padding).
       * </pre>
       *
       * <code>optional int32 max_width_padding = 2;</code>
       * @param value The maxWidthPadding to set.
       * @return This builder for chaining.
       */
      public Builder setMaxWidthPadding(int value) {
        bitField0_ |= 0x00000002;
        maxWidthPadding_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Width will be padded uniformly at random from [0, max_width_padding).
       * </pre>
       *
       * <code>optional int32 max_width_padding = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxWidthPadding() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxWidthPadding_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList padColor_ = emptyFloatList();
      private void ensurePadColorIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          padColor_ = mutableCopy(padColor_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image.
       * </pre>
       *
       * <code>repeated float pad_color = 3;</code>
       * @return A list containing the padColor.
       */
      public java.util.List<java.lang.Float>
          getPadColorList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(padColor_) : padColor_;
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image.
       * </pre>
       *
       * <code>repeated float pad_color = 3;</code>
       * @return The count of padColor.
       */
      public int getPadColorCount() {
        return padColor_.size();
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image.
       * </pre>
       *
       * <code>repeated float pad_color = 3;</code>
       * @param index The index of the element to return.
       * @return The padColor at the given index.
       */
      public float getPadColor(int index) {
        return padColor_.getFloat(index);
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image.
       * </pre>
       *
       * <code>repeated float pad_color = 3;</code>
       * @param index The index to set the value at.
       * @param value The padColor to set.
       * @return This builder for chaining.
       */
      public Builder setPadColor(
          int index, float value) {
        ensurePadColorIsMutable();
        padColor_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image.
       * </pre>
       *
       * <code>repeated float pad_color = 3;</code>
       * @param value The padColor to add.
       * @return This builder for chaining.
       */
      public Builder addPadColor(float value) {
        ensurePadColorIsMutable();
        padColor_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image.
       * </pre>
       *
       * <code>repeated float pad_color = 3;</code>
       * @param values The padColor to add.
       * @return This builder for chaining.
       */
      public Builder addAllPadColor(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensurePadColorIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, padColor_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image.
       * </pre>
       *
       * <code>repeated float pad_color = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPadColor() {
        padColor_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomAbsolutePadImage)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomAbsolutePadImage)
    private static final object_detection.protos.Preprocessor.RandomAbsolutePadImage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomAbsolutePadImage();
    }

    public static object_detection.protos.Preprocessor.RandomAbsolutePadImage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomAbsolutePadImage>
        PARSER = new com.google.protobuf.AbstractParser<RandomAbsolutePadImage>() {
      @java.lang.Override
      public RandomAbsolutePadImage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomAbsolutePadImage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomAbsolutePadImage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomAbsolutePadImage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomAbsolutePadImage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomCropPadImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomCropPadImage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Cropping operation must cover at least one box by this fraction.
     * </pre>
     *
     * <code>optional float min_object_covered = 1 [default = 1];</code>
     * @return Whether the minObjectCovered field is set.
     */
    boolean hasMinObjectCovered();
    /**
     * <pre>
     * Cropping operation must cover at least one box by this fraction.
     * </pre>
     *
     * <code>optional float min_object_covered = 1 [default = 1];</code>
     * @return The minObjectCovered.
     */
    float getMinObjectCovered();

    /**
     * <pre>
     * Aspect ratio bounds of image after cropping operation.
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2 [default = 0.75];</code>
     * @return Whether the minAspectRatio field is set.
     */
    boolean hasMinAspectRatio();
    /**
     * <pre>
     * Aspect ratio bounds of image after cropping operation.
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2 [default = 0.75];</code>
     * @return The minAspectRatio.
     */
    float getMinAspectRatio();

    /**
     * <code>optional float max_aspect_ratio = 3 [default = 1.33];</code>
     * @return Whether the maxAspectRatio field is set.
     */
    boolean hasMaxAspectRatio();
    /**
     * <code>optional float max_aspect_ratio = 3 [default = 1.33];</code>
     * @return The maxAspectRatio.
     */
    float getMaxAspectRatio();

    /**
     * <pre>
     * Allowed area ratio of image after cropping operation.
     * </pre>
     *
     * <code>optional float min_area = 4 [default = 0.1];</code>
     * @return Whether the minArea field is set.
     */
    boolean hasMinArea();
    /**
     * <pre>
     * Allowed area ratio of image after cropping operation.
     * </pre>
     *
     * <code>optional float min_area = 4 [default = 0.1];</code>
     * @return The minArea.
     */
    float getMinArea();

    /**
     * <code>optional float max_area = 5 [default = 1];</code>
     * @return Whether the maxArea field is set.
     */
    boolean hasMaxArea();
    /**
     * <code>optional float max_area = 5 [default = 1];</code>
     * @return The maxArea.
     */
    float getMaxArea();

    /**
     * <pre>
     * Minimum overlap threshold of cropped boxes to keep in new image. If the
     * ratio between a cropped bounding box and the original is less than this
     * value, it is removed from the new image.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6 [default = 0.3];</code>
     * @return Whether the overlapThresh field is set.
     */
    boolean hasOverlapThresh();
    /**
     * <pre>
     * Minimum overlap threshold of cropped boxes to keep in new image. If the
     * ratio between a cropped bounding box and the original is less than this
     * value, it is removed from the new image.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6 [default = 0.3];</code>
     * @return The overlapThresh.
     */
    float getOverlapThresh();

    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 11 [default = true];</code>
     * @return Whether the clipBoxes field is set.
     */
    boolean hasClipBoxes();
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 11 [default = true];</code>
     * @return The clipBoxes.
     */
    boolean getClipBoxes();

    /**
     * <pre>
     * Probability of keeping the original image during the crop operation.
     * </pre>
     *
     * <code>optional float random_coef = 7 [default = 0];</code>
     * @return Whether the randomCoef field is set.
     */
    boolean hasRandomCoef();
    /**
     * <pre>
     * Probability of keeping the original image during the crop operation.
     * </pre>
     *
     * <code>optional float random_coef = 7 [default = 0];</code>
     * @return The randomCoef.
     */
    float getRandomCoef();

    /**
     * <pre>
     * Maximum dimensions for padded image. If unset, will use double the original
     * image dimension as a lower bound. Both of the following fields should be
     * length 2.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 8;</code>
     * @return A list containing the minPaddedSizeRatio.
     */
    java.util.List<java.lang.Float> getMinPaddedSizeRatioList();
    /**
     * <pre>
     * Maximum dimensions for padded image. If unset, will use double the original
     * image dimension as a lower bound. Both of the following fields should be
     * length 2.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 8;</code>
     * @return The count of minPaddedSizeRatio.
     */
    int getMinPaddedSizeRatioCount();
    /**
     * <pre>
     * Maximum dimensions for padded image. If unset, will use double the original
     * image dimension as a lower bound. Both of the following fields should be
     * length 2.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 8;</code>
     * @param index The index of the element to return.
     * @return The minPaddedSizeRatio at the given index.
     */
    float getMinPaddedSizeRatio(int index);

    /**
     * <code>repeated float max_padded_size_ratio = 9;</code>
     * @return A list containing the maxPaddedSizeRatio.
     */
    java.util.List<java.lang.Float> getMaxPaddedSizeRatioList();
    /**
     * <code>repeated float max_padded_size_ratio = 9;</code>
     * @return The count of maxPaddedSizeRatio.
     */
    int getMaxPaddedSizeRatioCount();
    /**
     * <code>repeated float max_padded_size_ratio = 9;</code>
     * @param index The index of the element to return.
     * @return The maxPaddedSizeRatio at the given index.
     */
    float getMaxPaddedSizeRatio(int index);

    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image. This field should be of length 3.
     * </pre>
     *
     * <code>repeated float pad_color = 10;</code>
     * @return A list containing the padColor.
     */
    java.util.List<java.lang.Float> getPadColorList();
    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image. This field should be of length 3.
     * </pre>
     *
     * <code>repeated float pad_color = 10;</code>
     * @return The count of padColor.
     */
    int getPadColorCount();
    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image. This field should be of length 3.
     * </pre>
     *
     * <code>repeated float pad_color = 10;</code>
     * @param index The index of the element to return.
     * @return The padColor at the given index.
     */
    float getPadColor(int index);
  }
  /**
   * <pre>
   * Randomly crops an image followed by a random pad.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomCropPadImage}
   */
  public static final class RandomCropPadImage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomCropPadImage)
      RandomCropPadImageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomCropPadImage.newBuilder() to construct.
    private RandomCropPadImage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomCropPadImage() {
      minObjectCovered_ = 1F;
      minAspectRatio_ = 0.75F;
      maxAspectRatio_ = 1.33F;
      minArea_ = 0.1F;
      maxArea_ = 1F;
      overlapThresh_ = 0.3F;
      clipBoxes_ = true;
      minPaddedSizeRatio_ = emptyFloatList();
      maxPaddedSizeRatio_ = emptyFloatList();
      padColor_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomCropPadImage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomCropPadImage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              minObjectCovered_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              minAspectRatio_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              maxAspectRatio_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              minArea_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              maxArea_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              overlapThresh_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000080;
              randomCoef_ = input.readFloat();
              break;
            }
            case 69: {
              if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                minPaddedSizeRatio_ = newFloatList();
                mutable_bitField0_ |= 0x00000100;
              }
              minPaddedSizeRatio_.addFloat(input.readFloat());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) != 0) && input.getBytesUntilLimit() > 0) {
                minPaddedSizeRatio_ = newFloatList();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                minPaddedSizeRatio_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 77: {
              if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                maxPaddedSizeRatio_ = newFloatList();
                mutable_bitField0_ |= 0x00000200;
              }
              maxPaddedSizeRatio_.addFloat(input.readFloat());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) != 0) && input.getBytesUntilLimit() > 0) {
                maxPaddedSizeRatio_ = newFloatList();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                maxPaddedSizeRatio_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 85: {
              if (!((mutable_bitField0_ & 0x00000400) != 0)) {
                padColor_ = newFloatList();
                mutable_bitField0_ |= 0x00000400;
              }
              padColor_.addFloat(input.readFloat());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) != 0) && input.getBytesUntilLimit() > 0) {
                padColor_ = newFloatList();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                padColor_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              bitField0_ |= 0x00000040;
              clipBoxes_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) != 0)) {
          minPaddedSizeRatio_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000200) != 0)) {
          maxPaddedSizeRatio_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000400) != 0)) {
          padColor_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomCropPadImage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomCropPadImage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomCropPadImage.class, object_detection.protos.Preprocessor.RandomCropPadImage.Builder.class);
    }

    private int bitField0_;
    public static final int MIN_OBJECT_COVERED_FIELD_NUMBER = 1;
    private float minObjectCovered_;
    /**
     * <pre>
     * Cropping operation must cover at least one box by this fraction.
     * </pre>
     *
     * <code>optional float min_object_covered = 1 [default = 1];</code>
     * @return Whether the minObjectCovered field is set.
     */
    @java.lang.Override
    public boolean hasMinObjectCovered() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Cropping operation must cover at least one box by this fraction.
     * </pre>
     *
     * <code>optional float min_object_covered = 1 [default = 1];</code>
     * @return The minObjectCovered.
     */
    @java.lang.Override
    public float getMinObjectCovered() {
      return minObjectCovered_;
    }

    public static final int MIN_ASPECT_RATIO_FIELD_NUMBER = 2;
    private float minAspectRatio_;
    /**
     * <pre>
     * Aspect ratio bounds of image after cropping operation.
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2 [default = 0.75];</code>
     * @return Whether the minAspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasMinAspectRatio() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Aspect ratio bounds of image after cropping operation.
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2 [default = 0.75];</code>
     * @return The minAspectRatio.
     */
    @java.lang.Override
    public float getMinAspectRatio() {
      return minAspectRatio_;
    }

    public static final int MAX_ASPECT_RATIO_FIELD_NUMBER = 3;
    private float maxAspectRatio_;
    /**
     * <code>optional float max_aspect_ratio = 3 [default = 1.33];</code>
     * @return Whether the maxAspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasMaxAspectRatio() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional float max_aspect_ratio = 3 [default = 1.33];</code>
     * @return The maxAspectRatio.
     */
    @java.lang.Override
    public float getMaxAspectRatio() {
      return maxAspectRatio_;
    }

    public static final int MIN_AREA_FIELD_NUMBER = 4;
    private float minArea_;
    /**
     * <pre>
     * Allowed area ratio of image after cropping operation.
     * </pre>
     *
     * <code>optional float min_area = 4 [default = 0.1];</code>
     * @return Whether the minArea field is set.
     */
    @java.lang.Override
    public boolean hasMinArea() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Allowed area ratio of image after cropping operation.
     * </pre>
     *
     * <code>optional float min_area = 4 [default = 0.1];</code>
     * @return The minArea.
     */
    @java.lang.Override
    public float getMinArea() {
      return minArea_;
    }

    public static final int MAX_AREA_FIELD_NUMBER = 5;
    private float maxArea_;
    /**
     * <code>optional float max_area = 5 [default = 1];</code>
     * @return Whether the maxArea field is set.
     */
    @java.lang.Override
    public boolean hasMaxArea() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional float max_area = 5 [default = 1];</code>
     * @return The maxArea.
     */
    @java.lang.Override
    public float getMaxArea() {
      return maxArea_;
    }

    public static final int OVERLAP_THRESH_FIELD_NUMBER = 6;
    private float overlapThresh_;
    /**
     * <pre>
     * Minimum overlap threshold of cropped boxes to keep in new image. If the
     * ratio between a cropped bounding box and the original is less than this
     * value, it is removed from the new image.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6 [default = 0.3];</code>
     * @return Whether the overlapThresh field is set.
     */
    @java.lang.Override
    public boolean hasOverlapThresh() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Minimum overlap threshold of cropped boxes to keep in new image. If the
     * ratio between a cropped bounding box and the original is less than this
     * value, it is removed from the new image.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6 [default = 0.3];</code>
     * @return The overlapThresh.
     */
    @java.lang.Override
    public float getOverlapThresh() {
      return overlapThresh_;
    }

    public static final int CLIP_BOXES_FIELD_NUMBER = 11;
    private boolean clipBoxes_;
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 11 [default = true];</code>
     * @return Whether the clipBoxes field is set.
     */
    @java.lang.Override
    public boolean hasClipBoxes() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 11 [default = true];</code>
     * @return The clipBoxes.
     */
    @java.lang.Override
    public boolean getClipBoxes() {
      return clipBoxes_;
    }

    public static final int RANDOM_COEF_FIELD_NUMBER = 7;
    private float randomCoef_;
    /**
     * <pre>
     * Probability of keeping the original image during the crop operation.
     * </pre>
     *
     * <code>optional float random_coef = 7 [default = 0];</code>
     * @return Whether the randomCoef field is set.
     */
    @java.lang.Override
    public boolean hasRandomCoef() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Probability of keeping the original image during the crop operation.
     * </pre>
     *
     * <code>optional float random_coef = 7 [default = 0];</code>
     * @return The randomCoef.
     */
    @java.lang.Override
    public float getRandomCoef() {
      return randomCoef_;
    }

    public static final int MIN_PADDED_SIZE_RATIO_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.FloatList minPaddedSizeRatio_;
    /**
     * <pre>
     * Maximum dimensions for padded image. If unset, will use double the original
     * image dimension as a lower bound. Both of the following fields should be
     * length 2.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 8;</code>
     * @return A list containing the minPaddedSizeRatio.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getMinPaddedSizeRatioList() {
      return minPaddedSizeRatio_;
    }
    /**
     * <pre>
     * Maximum dimensions for padded image. If unset, will use double the original
     * image dimension as a lower bound. Both of the following fields should be
     * length 2.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 8;</code>
     * @return The count of minPaddedSizeRatio.
     */
    public int getMinPaddedSizeRatioCount() {
      return minPaddedSizeRatio_.size();
    }
    /**
     * <pre>
     * Maximum dimensions for padded image. If unset, will use double the original
     * image dimension as a lower bound. Both of the following fields should be
     * length 2.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 8;</code>
     * @param index The index of the element to return.
     * @return The minPaddedSizeRatio at the given index.
     */
    public float getMinPaddedSizeRatio(int index) {
      return minPaddedSizeRatio_.getFloat(index);
    }

    public static final int MAX_PADDED_SIZE_RATIO_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.FloatList maxPaddedSizeRatio_;
    /**
     * <code>repeated float max_padded_size_ratio = 9;</code>
     * @return A list containing the maxPaddedSizeRatio.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getMaxPaddedSizeRatioList() {
      return maxPaddedSizeRatio_;
    }
    /**
     * <code>repeated float max_padded_size_ratio = 9;</code>
     * @return The count of maxPaddedSizeRatio.
     */
    public int getMaxPaddedSizeRatioCount() {
      return maxPaddedSizeRatio_.size();
    }
    /**
     * <code>repeated float max_padded_size_ratio = 9;</code>
     * @param index The index of the element to return.
     * @return The maxPaddedSizeRatio at the given index.
     */
    public float getMaxPaddedSizeRatio(int index) {
      return maxPaddedSizeRatio_.getFloat(index);
    }

    public static final int PAD_COLOR_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.FloatList padColor_;
    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image. This field should be of length 3.
     * </pre>
     *
     * <code>repeated float pad_color = 10;</code>
     * @return A list containing the padColor.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getPadColorList() {
      return padColor_;
    }
    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image. This field should be of length 3.
     * </pre>
     *
     * <code>repeated float pad_color = 10;</code>
     * @return The count of padColor.
     */
    public int getPadColorCount() {
      return padColor_.size();
    }
    /**
     * <pre>
     * Color of the padding. If unset, will pad using average color of the input
     * image. This field should be of length 3.
     * </pre>
     *
     * <code>repeated float pad_color = 10;</code>
     * @param index The index of the element to return.
     * @return The padColor at the given index.
     */
    public float getPadColor(int index) {
      return padColor_.getFloat(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, minObjectCovered_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, minAspectRatio_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, maxAspectRatio_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(4, minArea_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeFloat(5, maxArea_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFloat(6, overlapThresh_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeFloat(7, randomCoef_);
      }
      for (int i = 0; i < minPaddedSizeRatio_.size(); i++) {
        output.writeFloat(8, minPaddedSizeRatio_.getFloat(i));
      }
      for (int i = 0; i < maxPaddedSizeRatio_.size(); i++) {
        output.writeFloat(9, maxPaddedSizeRatio_.getFloat(i));
      }
      for (int i = 0; i < padColor_.size(); i++) {
        output.writeFloat(10, padColor_.getFloat(i));
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeBool(11, clipBoxes_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, minObjectCovered_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, minAspectRatio_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, maxAspectRatio_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, minArea_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, maxArea_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, overlapThresh_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, randomCoef_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getMinPaddedSizeRatioList().size();
        size += dataSize;
        size += 1 * getMinPaddedSizeRatioList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getMaxPaddedSizeRatioList().size();
        size += dataSize;
        size += 1 * getMaxPaddedSizeRatioList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getPadColorList().size();
        size += dataSize;
        size += 1 * getPadColorList().size();
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, clipBoxes_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomCropPadImage)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomCropPadImage other = (object_detection.protos.Preprocessor.RandomCropPadImage) obj;

      if (hasMinObjectCovered() != other.hasMinObjectCovered()) return false;
      if (hasMinObjectCovered()) {
        if (java.lang.Float.floatToIntBits(getMinObjectCovered())
            != java.lang.Float.floatToIntBits(
                other.getMinObjectCovered())) return false;
      }
      if (hasMinAspectRatio() != other.hasMinAspectRatio()) return false;
      if (hasMinAspectRatio()) {
        if (java.lang.Float.floatToIntBits(getMinAspectRatio())
            != java.lang.Float.floatToIntBits(
                other.getMinAspectRatio())) return false;
      }
      if (hasMaxAspectRatio() != other.hasMaxAspectRatio()) return false;
      if (hasMaxAspectRatio()) {
        if (java.lang.Float.floatToIntBits(getMaxAspectRatio())
            != java.lang.Float.floatToIntBits(
                other.getMaxAspectRatio())) return false;
      }
      if (hasMinArea() != other.hasMinArea()) return false;
      if (hasMinArea()) {
        if (java.lang.Float.floatToIntBits(getMinArea())
            != java.lang.Float.floatToIntBits(
                other.getMinArea())) return false;
      }
      if (hasMaxArea() != other.hasMaxArea()) return false;
      if (hasMaxArea()) {
        if (java.lang.Float.floatToIntBits(getMaxArea())
            != java.lang.Float.floatToIntBits(
                other.getMaxArea())) return false;
      }
      if (hasOverlapThresh() != other.hasOverlapThresh()) return false;
      if (hasOverlapThresh()) {
        if (java.lang.Float.floatToIntBits(getOverlapThresh())
            != java.lang.Float.floatToIntBits(
                other.getOverlapThresh())) return false;
      }
      if (hasClipBoxes() != other.hasClipBoxes()) return false;
      if (hasClipBoxes()) {
        if (getClipBoxes()
            != other.getClipBoxes()) return false;
      }
      if (hasRandomCoef() != other.hasRandomCoef()) return false;
      if (hasRandomCoef()) {
        if (java.lang.Float.floatToIntBits(getRandomCoef())
            != java.lang.Float.floatToIntBits(
                other.getRandomCoef())) return false;
      }
      if (!getMinPaddedSizeRatioList()
          .equals(other.getMinPaddedSizeRatioList())) return false;
      if (!getMaxPaddedSizeRatioList()
          .equals(other.getMaxPaddedSizeRatioList())) return false;
      if (!getPadColorList()
          .equals(other.getPadColorList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMinObjectCovered()) {
        hash = (37 * hash) + MIN_OBJECT_COVERED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinObjectCovered());
      }
      if (hasMinAspectRatio()) {
        hash = (37 * hash) + MIN_ASPECT_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinAspectRatio());
      }
      if (hasMaxAspectRatio()) {
        hash = (37 * hash) + MAX_ASPECT_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxAspectRatio());
      }
      if (hasMinArea()) {
        hash = (37 * hash) + MIN_AREA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinArea());
      }
      if (hasMaxArea()) {
        hash = (37 * hash) + MAX_AREA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxArea());
      }
      if (hasOverlapThresh()) {
        hash = (37 * hash) + OVERLAP_THRESH_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getOverlapThresh());
      }
      if (hasClipBoxes()) {
        hash = (37 * hash) + CLIP_BOXES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getClipBoxes());
      }
      if (hasRandomCoef()) {
        hash = (37 * hash) + RANDOM_COEF_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRandomCoef());
      }
      if (getMinPaddedSizeRatioCount() > 0) {
        hash = (37 * hash) + MIN_PADDED_SIZE_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + getMinPaddedSizeRatioList().hashCode();
      }
      if (getMaxPaddedSizeRatioCount() > 0) {
        hash = (37 * hash) + MAX_PADDED_SIZE_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + getMaxPaddedSizeRatioList().hashCode();
      }
      if (getPadColorCount() > 0) {
        hash = (37 * hash) + PAD_COLOR_FIELD_NUMBER;
        hash = (53 * hash) + getPadColorList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomCropPadImage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomCropPadImage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomCropPadImage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomCropPadImage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomCropPadImage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomCropPadImage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomCropPadImage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomCropPadImage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomCropPadImage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomCropPadImage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomCropPadImage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomCropPadImage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomCropPadImage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly crops an image followed by a random pad.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomCropPadImage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomCropPadImage)
        object_detection.protos.Preprocessor.RandomCropPadImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomCropPadImage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomCropPadImage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomCropPadImage.class, object_detection.protos.Preprocessor.RandomCropPadImage.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomCropPadImage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        minObjectCovered_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000001);
        minAspectRatio_ = 0.75F;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxAspectRatio_ = 1.33F;
        bitField0_ = (bitField0_ & ~0x00000004);
        minArea_ = 0.1F;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxArea_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000010);
        overlapThresh_ = 0.3F;
        bitField0_ = (bitField0_ & ~0x00000020);
        clipBoxes_ = true;
        bitField0_ = (bitField0_ & ~0x00000040);
        randomCoef_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        minPaddedSizeRatio_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000100);
        maxPaddedSizeRatio_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000200);
        padColor_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomCropPadImage_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomCropPadImage getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomCropPadImage.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomCropPadImage build() {
        object_detection.protos.Preprocessor.RandomCropPadImage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomCropPadImage buildPartial() {
        object_detection.protos.Preprocessor.RandomCropPadImage result = new object_detection.protos.Preprocessor.RandomCropPadImage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.minObjectCovered_ = minObjectCovered_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minAspectRatio_ = minAspectRatio_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxAspectRatio_ = maxAspectRatio_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.minArea_ = minArea_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxArea_ = maxArea_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          to_bitField0_ |= 0x00000020;
        }
        result.overlapThresh_ = overlapThresh_;
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000040;
        }
        result.clipBoxes_ = clipBoxes_;
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.randomCoef_ = randomCoef_;
          to_bitField0_ |= 0x00000080;
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          minPaddedSizeRatio_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.minPaddedSizeRatio_ = minPaddedSizeRatio_;
        if (((bitField0_ & 0x00000200) != 0)) {
          maxPaddedSizeRatio_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.maxPaddedSizeRatio_ = maxPaddedSizeRatio_;
        if (((bitField0_ & 0x00000400) != 0)) {
          padColor_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.padColor_ = padColor_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomCropPadImage) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomCropPadImage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomCropPadImage other) {
        if (other == object_detection.protos.Preprocessor.RandomCropPadImage.getDefaultInstance()) return this;
        if (other.hasMinObjectCovered()) {
          setMinObjectCovered(other.getMinObjectCovered());
        }
        if (other.hasMinAspectRatio()) {
          setMinAspectRatio(other.getMinAspectRatio());
        }
        if (other.hasMaxAspectRatio()) {
          setMaxAspectRatio(other.getMaxAspectRatio());
        }
        if (other.hasMinArea()) {
          setMinArea(other.getMinArea());
        }
        if (other.hasMaxArea()) {
          setMaxArea(other.getMaxArea());
        }
        if (other.hasOverlapThresh()) {
          setOverlapThresh(other.getOverlapThresh());
        }
        if (other.hasClipBoxes()) {
          setClipBoxes(other.getClipBoxes());
        }
        if (other.hasRandomCoef()) {
          setRandomCoef(other.getRandomCoef());
        }
        if (!other.minPaddedSizeRatio_.isEmpty()) {
          if (minPaddedSizeRatio_.isEmpty()) {
            minPaddedSizeRatio_ = other.minPaddedSizeRatio_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureMinPaddedSizeRatioIsMutable();
            minPaddedSizeRatio_.addAll(other.minPaddedSizeRatio_);
          }
          onChanged();
        }
        if (!other.maxPaddedSizeRatio_.isEmpty()) {
          if (maxPaddedSizeRatio_.isEmpty()) {
            maxPaddedSizeRatio_ = other.maxPaddedSizeRatio_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureMaxPaddedSizeRatioIsMutable();
            maxPaddedSizeRatio_.addAll(other.maxPaddedSizeRatio_);
          }
          onChanged();
        }
        if (!other.padColor_.isEmpty()) {
          if (padColor_.isEmpty()) {
            padColor_ = other.padColor_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensurePadColorIsMutable();
            padColor_.addAll(other.padColor_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomCropPadImage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomCropPadImage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float minObjectCovered_ = 1F;
      /**
       * <pre>
       * Cropping operation must cover at least one box by this fraction.
       * </pre>
       *
       * <code>optional float min_object_covered = 1 [default = 1];</code>
       * @return Whether the minObjectCovered field is set.
       */
      @java.lang.Override
      public boolean hasMinObjectCovered() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Cropping operation must cover at least one box by this fraction.
       * </pre>
       *
       * <code>optional float min_object_covered = 1 [default = 1];</code>
       * @return The minObjectCovered.
       */
      @java.lang.Override
      public float getMinObjectCovered() {
        return minObjectCovered_;
      }
      /**
       * <pre>
       * Cropping operation must cover at least one box by this fraction.
       * </pre>
       *
       * <code>optional float min_object_covered = 1 [default = 1];</code>
       * @param value The minObjectCovered to set.
       * @return This builder for chaining.
       */
      public Builder setMinObjectCovered(float value) {
        bitField0_ |= 0x00000001;
        minObjectCovered_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cropping operation must cover at least one box by this fraction.
       * </pre>
       *
       * <code>optional float min_object_covered = 1 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinObjectCovered() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minObjectCovered_ = 1F;
        onChanged();
        return this;
      }

      private float minAspectRatio_ = 0.75F;
      /**
       * <pre>
       * Aspect ratio bounds of image after cropping operation.
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2 [default = 0.75];</code>
       * @return Whether the minAspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasMinAspectRatio() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Aspect ratio bounds of image after cropping operation.
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2 [default = 0.75];</code>
       * @return The minAspectRatio.
       */
      @java.lang.Override
      public float getMinAspectRatio() {
        return minAspectRatio_;
      }
      /**
       * <pre>
       * Aspect ratio bounds of image after cropping operation.
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2 [default = 0.75];</code>
       * @param value The minAspectRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMinAspectRatio(float value) {
        bitField0_ |= 0x00000002;
        minAspectRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Aspect ratio bounds of image after cropping operation.
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2 [default = 0.75];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinAspectRatio() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minAspectRatio_ = 0.75F;
        onChanged();
        return this;
      }

      private float maxAspectRatio_ = 1.33F;
      /**
       * <code>optional float max_aspect_ratio = 3 [default = 1.33];</code>
       * @return Whether the maxAspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasMaxAspectRatio() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional float max_aspect_ratio = 3 [default = 1.33];</code>
       * @return The maxAspectRatio.
       */
      @java.lang.Override
      public float getMaxAspectRatio() {
        return maxAspectRatio_;
      }
      /**
       * <code>optional float max_aspect_ratio = 3 [default = 1.33];</code>
       * @param value The maxAspectRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMaxAspectRatio(float value) {
        bitField0_ |= 0x00000004;
        maxAspectRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_aspect_ratio = 3 [default = 1.33];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxAspectRatio() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxAspectRatio_ = 1.33F;
        onChanged();
        return this;
      }

      private float minArea_ = 0.1F;
      /**
       * <pre>
       * Allowed area ratio of image after cropping operation.
       * </pre>
       *
       * <code>optional float min_area = 4 [default = 0.1];</code>
       * @return Whether the minArea field is set.
       */
      @java.lang.Override
      public boolean hasMinArea() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Allowed area ratio of image after cropping operation.
       * </pre>
       *
       * <code>optional float min_area = 4 [default = 0.1];</code>
       * @return The minArea.
       */
      @java.lang.Override
      public float getMinArea() {
        return minArea_;
      }
      /**
       * <pre>
       * Allowed area ratio of image after cropping operation.
       * </pre>
       *
       * <code>optional float min_area = 4 [default = 0.1];</code>
       * @param value The minArea to set.
       * @return This builder for chaining.
       */
      public Builder setMinArea(float value) {
        bitField0_ |= 0x00000008;
        minArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Allowed area ratio of image after cropping operation.
       * </pre>
       *
       * <code>optional float min_area = 4 [default = 0.1];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinArea() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minArea_ = 0.1F;
        onChanged();
        return this;
      }

      private float maxArea_ = 1F;
      /**
       * <code>optional float max_area = 5 [default = 1];</code>
       * @return Whether the maxArea field is set.
       */
      @java.lang.Override
      public boolean hasMaxArea() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional float max_area = 5 [default = 1];</code>
       * @return The maxArea.
       */
      @java.lang.Override
      public float getMaxArea() {
        return maxArea_;
      }
      /**
       * <code>optional float max_area = 5 [default = 1];</code>
       * @param value The maxArea to set.
       * @return This builder for chaining.
       */
      public Builder setMaxArea(float value) {
        bitField0_ |= 0x00000010;
        maxArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_area = 5 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxArea() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxArea_ = 1F;
        onChanged();
        return this;
      }

      private float overlapThresh_ = 0.3F;
      /**
       * <pre>
       * Minimum overlap threshold of cropped boxes to keep in new image. If the
       * ratio between a cropped bounding box and the original is less than this
       * value, it is removed from the new image.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6 [default = 0.3];</code>
       * @return Whether the overlapThresh field is set.
       */
      @java.lang.Override
      public boolean hasOverlapThresh() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Minimum overlap threshold of cropped boxes to keep in new image. If the
       * ratio between a cropped bounding box and the original is less than this
       * value, it is removed from the new image.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6 [default = 0.3];</code>
       * @return The overlapThresh.
       */
      @java.lang.Override
      public float getOverlapThresh() {
        return overlapThresh_;
      }
      /**
       * <pre>
       * Minimum overlap threshold of cropped boxes to keep in new image. If the
       * ratio between a cropped bounding box and the original is less than this
       * value, it is removed from the new image.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6 [default = 0.3];</code>
       * @param value The overlapThresh to set.
       * @return This builder for chaining.
       */
      public Builder setOverlapThresh(float value) {
        bitField0_ |= 0x00000020;
        overlapThresh_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Minimum overlap threshold of cropped boxes to keep in new image. If the
       * ratio between a cropped bounding box and the original is less than this
       * value, it is removed from the new image.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6 [default = 0.3];</code>
       * @return This builder for chaining.
       */
      public Builder clearOverlapThresh() {
        bitField0_ = (bitField0_ & ~0x00000020);
        overlapThresh_ = 0.3F;
        onChanged();
        return this;
      }

      private boolean clipBoxes_ = true;
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 11 [default = true];</code>
       * @return Whether the clipBoxes field is set.
       */
      @java.lang.Override
      public boolean hasClipBoxes() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 11 [default = true];</code>
       * @return The clipBoxes.
       */
      @java.lang.Override
      public boolean getClipBoxes() {
        return clipBoxes_;
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 11 [default = true];</code>
       * @param value The clipBoxes to set.
       * @return This builder for chaining.
       */
      public Builder setClipBoxes(boolean value) {
        bitField0_ |= 0x00000040;
        clipBoxes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 11 [default = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearClipBoxes() {
        bitField0_ = (bitField0_ & ~0x00000040);
        clipBoxes_ = true;
        onChanged();
        return this;
      }

      private float randomCoef_ ;
      /**
       * <pre>
       * Probability of keeping the original image during the crop operation.
       * </pre>
       *
       * <code>optional float random_coef = 7 [default = 0];</code>
       * @return Whether the randomCoef field is set.
       */
      @java.lang.Override
      public boolean hasRandomCoef() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Probability of keeping the original image during the crop operation.
       * </pre>
       *
       * <code>optional float random_coef = 7 [default = 0];</code>
       * @return The randomCoef.
       */
      @java.lang.Override
      public float getRandomCoef() {
        return randomCoef_;
      }
      /**
       * <pre>
       * Probability of keeping the original image during the crop operation.
       * </pre>
       *
       * <code>optional float random_coef = 7 [default = 0];</code>
       * @param value The randomCoef to set.
       * @return This builder for chaining.
       */
      public Builder setRandomCoef(float value) {
        bitField0_ |= 0x00000080;
        randomCoef_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Probability of keeping the original image during the crop operation.
       * </pre>
       *
       * <code>optional float random_coef = 7 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearRandomCoef() {
        bitField0_ = (bitField0_ & ~0x00000080);
        randomCoef_ = 0F;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList minPaddedSizeRatio_ = emptyFloatList();
      private void ensureMinPaddedSizeRatioIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          minPaddedSizeRatio_ = mutableCopy(minPaddedSizeRatio_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <pre>
       * Maximum dimensions for padded image. If unset, will use double the original
       * image dimension as a lower bound. Both of the following fields should be
       * length 2.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 8;</code>
       * @return A list containing the minPaddedSizeRatio.
       */
      public java.util.List<java.lang.Float>
          getMinPaddedSizeRatioList() {
        return ((bitField0_ & 0x00000100) != 0) ?
                 java.util.Collections.unmodifiableList(minPaddedSizeRatio_) : minPaddedSizeRatio_;
      }
      /**
       * <pre>
       * Maximum dimensions for padded image. If unset, will use double the original
       * image dimension as a lower bound. Both of the following fields should be
       * length 2.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 8;</code>
       * @return The count of minPaddedSizeRatio.
       */
      public int getMinPaddedSizeRatioCount() {
        return minPaddedSizeRatio_.size();
      }
      /**
       * <pre>
       * Maximum dimensions for padded image. If unset, will use double the original
       * image dimension as a lower bound. Both of the following fields should be
       * length 2.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 8;</code>
       * @param index The index of the element to return.
       * @return The minPaddedSizeRatio at the given index.
       */
      public float getMinPaddedSizeRatio(int index) {
        return minPaddedSizeRatio_.getFloat(index);
      }
      /**
       * <pre>
       * Maximum dimensions for padded image. If unset, will use double the original
       * image dimension as a lower bound. Both of the following fields should be
       * length 2.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 8;</code>
       * @param index The index to set the value at.
       * @param value The minPaddedSizeRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMinPaddedSizeRatio(
          int index, float value) {
        ensureMinPaddedSizeRatioIsMutable();
        minPaddedSizeRatio_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum dimensions for padded image. If unset, will use double the original
       * image dimension as a lower bound. Both of the following fields should be
       * length 2.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 8;</code>
       * @param value The minPaddedSizeRatio to add.
       * @return This builder for chaining.
       */
      public Builder addMinPaddedSizeRatio(float value) {
        ensureMinPaddedSizeRatioIsMutable();
        minPaddedSizeRatio_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum dimensions for padded image. If unset, will use double the original
       * image dimension as a lower bound. Both of the following fields should be
       * length 2.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 8;</code>
       * @param values The minPaddedSizeRatio to add.
       * @return This builder for chaining.
       */
      public Builder addAllMinPaddedSizeRatio(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureMinPaddedSizeRatioIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, minPaddedSizeRatio_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum dimensions for padded image. If unset, will use double the original
       * image dimension as a lower bound. Both of the following fields should be
       * length 2.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinPaddedSizeRatio() {
        minPaddedSizeRatio_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList maxPaddedSizeRatio_ = emptyFloatList();
      private void ensureMaxPaddedSizeRatioIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          maxPaddedSizeRatio_ = mutableCopy(maxPaddedSizeRatio_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated float max_padded_size_ratio = 9;</code>
       * @return A list containing the maxPaddedSizeRatio.
       */
      public java.util.List<java.lang.Float>
          getMaxPaddedSizeRatioList() {
        return ((bitField0_ & 0x00000200) != 0) ?
                 java.util.Collections.unmodifiableList(maxPaddedSizeRatio_) : maxPaddedSizeRatio_;
      }
      /**
       * <code>repeated float max_padded_size_ratio = 9;</code>
       * @return The count of maxPaddedSizeRatio.
       */
      public int getMaxPaddedSizeRatioCount() {
        return maxPaddedSizeRatio_.size();
      }
      /**
       * <code>repeated float max_padded_size_ratio = 9;</code>
       * @param index The index of the element to return.
       * @return The maxPaddedSizeRatio at the given index.
       */
      public float getMaxPaddedSizeRatio(int index) {
        return maxPaddedSizeRatio_.getFloat(index);
      }
      /**
       * <code>repeated float max_padded_size_ratio = 9;</code>
       * @param index The index to set the value at.
       * @param value The maxPaddedSizeRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMaxPaddedSizeRatio(
          int index, float value) {
        ensureMaxPaddedSizeRatioIsMutable();
        maxPaddedSizeRatio_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float max_padded_size_ratio = 9;</code>
       * @param value The maxPaddedSizeRatio to add.
       * @return This builder for chaining.
       */
      public Builder addMaxPaddedSizeRatio(float value) {
        ensureMaxPaddedSizeRatioIsMutable();
        maxPaddedSizeRatio_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float max_padded_size_ratio = 9;</code>
       * @param values The maxPaddedSizeRatio to add.
       * @return This builder for chaining.
       */
      public Builder addAllMaxPaddedSizeRatio(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureMaxPaddedSizeRatioIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, maxPaddedSizeRatio_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float max_padded_size_ratio = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxPaddedSizeRatio() {
        maxPaddedSizeRatio_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList padColor_ = emptyFloatList();
      private void ensurePadColorIsMutable() {
        if (!((bitField0_ & 0x00000400) != 0)) {
          padColor_ = mutableCopy(padColor_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image. This field should be of length 3.
       * </pre>
       *
       * <code>repeated float pad_color = 10;</code>
       * @return A list containing the padColor.
       */
      public java.util.List<java.lang.Float>
          getPadColorList() {
        return ((bitField0_ & 0x00000400) != 0) ?
                 java.util.Collections.unmodifiableList(padColor_) : padColor_;
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image. This field should be of length 3.
       * </pre>
       *
       * <code>repeated float pad_color = 10;</code>
       * @return The count of padColor.
       */
      public int getPadColorCount() {
        return padColor_.size();
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image. This field should be of length 3.
       * </pre>
       *
       * <code>repeated float pad_color = 10;</code>
       * @param index The index of the element to return.
       * @return The padColor at the given index.
       */
      public float getPadColor(int index) {
        return padColor_.getFloat(index);
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image. This field should be of length 3.
       * </pre>
       *
       * <code>repeated float pad_color = 10;</code>
       * @param index The index to set the value at.
       * @param value The padColor to set.
       * @return This builder for chaining.
       */
      public Builder setPadColor(
          int index, float value) {
        ensurePadColorIsMutable();
        padColor_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image. This field should be of length 3.
       * </pre>
       *
       * <code>repeated float pad_color = 10;</code>
       * @param value The padColor to add.
       * @return This builder for chaining.
       */
      public Builder addPadColor(float value) {
        ensurePadColorIsMutable();
        padColor_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image. This field should be of length 3.
       * </pre>
       *
       * <code>repeated float pad_color = 10;</code>
       * @param values The padColor to add.
       * @return This builder for chaining.
       */
      public Builder addAllPadColor(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensurePadColorIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, padColor_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Color of the padding. If unset, will pad using average color of the input
       * image. This field should be of length 3.
       * </pre>
       *
       * <code>repeated float pad_color = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearPadColor() {
        padColor_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomCropPadImage)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomCropPadImage)
    private static final object_detection.protos.Preprocessor.RandomCropPadImage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomCropPadImage();
    }

    public static object_detection.protos.Preprocessor.RandomCropPadImage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomCropPadImage>
        PARSER = new com.google.protobuf.AbstractParser<RandomCropPadImage>() {
      @java.lang.Override
      public RandomCropPadImage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomCropPadImage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomCropPadImage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomCropPadImage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomCropPadImage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomCropToAspectRatioOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomCropToAspectRatio)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Aspect ratio.
     * </pre>
     *
     * <code>optional float aspect_ratio = 1 [default = 1];</code>
     * @return Whether the aspectRatio field is set.
     */
    boolean hasAspectRatio();
    /**
     * <pre>
     * Aspect ratio.
     * </pre>
     *
     * <code>optional float aspect_ratio = 1 [default = 1];</code>
     * @return The aspectRatio.
     */
    float getAspectRatio();

    /**
     * <pre>
     * Minimum overlap threshold of cropped boxes to keep in new image. If the
     * ratio between a cropped bounding box and the original is less than this
     * value, it is removed from the new image.
     * </pre>
     *
     * <code>optional float overlap_thresh = 2 [default = 0.3];</code>
     * @return Whether the overlapThresh field is set.
     */
    boolean hasOverlapThresh();
    /**
     * <pre>
     * Minimum overlap threshold of cropped boxes to keep in new image. If the
     * ratio between a cropped bounding box and the original is less than this
     * value, it is removed from the new image.
     * </pre>
     *
     * <code>optional float overlap_thresh = 2 [default = 0.3];</code>
     * @return The overlapThresh.
     */
    float getOverlapThresh();

    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 3 [default = true];</code>
     * @return Whether the clipBoxes field is set.
     */
    boolean hasClipBoxes();
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 3 [default = true];</code>
     * @return The clipBoxes.
     */
    boolean getClipBoxes();
  }
  /**
   * <pre>
   * Randomly crops an iamge to a given aspect ratio.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomCropToAspectRatio}
   */
  public static final class RandomCropToAspectRatio extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomCropToAspectRatio)
      RandomCropToAspectRatioOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomCropToAspectRatio.newBuilder() to construct.
    private RandomCropToAspectRatio(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomCropToAspectRatio() {
      aspectRatio_ = 1F;
      overlapThresh_ = 0.3F;
      clipBoxes_ = true;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomCropToAspectRatio();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomCropToAspectRatio(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              aspectRatio_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              overlapThresh_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              clipBoxes_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomCropToAspectRatio_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomCropToAspectRatio_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomCropToAspectRatio.class, object_detection.protos.Preprocessor.RandomCropToAspectRatio.Builder.class);
    }

    private int bitField0_;
    public static final int ASPECT_RATIO_FIELD_NUMBER = 1;
    private float aspectRatio_;
    /**
     * <pre>
     * Aspect ratio.
     * </pre>
     *
     * <code>optional float aspect_ratio = 1 [default = 1];</code>
     * @return Whether the aspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasAspectRatio() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Aspect ratio.
     * </pre>
     *
     * <code>optional float aspect_ratio = 1 [default = 1];</code>
     * @return The aspectRatio.
     */
    @java.lang.Override
    public float getAspectRatio() {
      return aspectRatio_;
    }

    public static final int OVERLAP_THRESH_FIELD_NUMBER = 2;
    private float overlapThresh_;
    /**
     * <pre>
     * Minimum overlap threshold of cropped boxes to keep in new image. If the
     * ratio between a cropped bounding box and the original is less than this
     * value, it is removed from the new image.
     * </pre>
     *
     * <code>optional float overlap_thresh = 2 [default = 0.3];</code>
     * @return Whether the overlapThresh field is set.
     */
    @java.lang.Override
    public boolean hasOverlapThresh() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Minimum overlap threshold of cropped boxes to keep in new image. If the
     * ratio between a cropped bounding box and the original is less than this
     * value, it is removed from the new image.
     * </pre>
     *
     * <code>optional float overlap_thresh = 2 [default = 0.3];</code>
     * @return The overlapThresh.
     */
    @java.lang.Override
    public float getOverlapThresh() {
      return overlapThresh_;
    }

    public static final int CLIP_BOXES_FIELD_NUMBER = 3;
    private boolean clipBoxes_;
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 3 [default = true];</code>
     * @return Whether the clipBoxes field is set.
     */
    @java.lang.Override
    public boolean hasClipBoxes() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 3 [default = true];</code>
     * @return The clipBoxes.
     */
    @java.lang.Override
    public boolean getClipBoxes() {
      return clipBoxes_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, aspectRatio_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, overlapThresh_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(3, clipBoxes_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, aspectRatio_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, overlapThresh_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, clipBoxes_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomCropToAspectRatio)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomCropToAspectRatio other = (object_detection.protos.Preprocessor.RandomCropToAspectRatio) obj;

      if (hasAspectRatio() != other.hasAspectRatio()) return false;
      if (hasAspectRatio()) {
        if (java.lang.Float.floatToIntBits(getAspectRatio())
            != java.lang.Float.floatToIntBits(
                other.getAspectRatio())) return false;
      }
      if (hasOverlapThresh() != other.hasOverlapThresh()) return false;
      if (hasOverlapThresh()) {
        if (java.lang.Float.floatToIntBits(getOverlapThresh())
            != java.lang.Float.floatToIntBits(
                other.getOverlapThresh())) return false;
      }
      if (hasClipBoxes() != other.hasClipBoxes()) return false;
      if (hasClipBoxes()) {
        if (getClipBoxes()
            != other.getClipBoxes()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAspectRatio()) {
        hash = (37 * hash) + ASPECT_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getAspectRatio());
      }
      if (hasOverlapThresh()) {
        hash = (37 * hash) + OVERLAP_THRESH_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getOverlapThresh());
      }
      if (hasClipBoxes()) {
        hash = (37 * hash) + CLIP_BOXES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getClipBoxes());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomCropToAspectRatio parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomCropToAspectRatio parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomCropToAspectRatio parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomCropToAspectRatio parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomCropToAspectRatio parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomCropToAspectRatio parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomCropToAspectRatio parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomCropToAspectRatio parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomCropToAspectRatio parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomCropToAspectRatio parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomCropToAspectRatio parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomCropToAspectRatio parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomCropToAspectRatio prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly crops an iamge to a given aspect ratio.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomCropToAspectRatio}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomCropToAspectRatio)
        object_detection.protos.Preprocessor.RandomCropToAspectRatioOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomCropToAspectRatio_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomCropToAspectRatio_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomCropToAspectRatio.class, object_detection.protos.Preprocessor.RandomCropToAspectRatio.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomCropToAspectRatio.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        aspectRatio_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000001);
        overlapThresh_ = 0.3F;
        bitField0_ = (bitField0_ & ~0x00000002);
        clipBoxes_ = true;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomCropToAspectRatio_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomCropToAspectRatio getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomCropToAspectRatio.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomCropToAspectRatio build() {
        object_detection.protos.Preprocessor.RandomCropToAspectRatio result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomCropToAspectRatio buildPartial() {
        object_detection.protos.Preprocessor.RandomCropToAspectRatio result = new object_detection.protos.Preprocessor.RandomCropToAspectRatio(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.aspectRatio_ = aspectRatio_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.overlapThresh_ = overlapThresh_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clipBoxes_ = clipBoxes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomCropToAspectRatio) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomCropToAspectRatio)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomCropToAspectRatio other) {
        if (other == object_detection.protos.Preprocessor.RandomCropToAspectRatio.getDefaultInstance()) return this;
        if (other.hasAspectRatio()) {
          setAspectRatio(other.getAspectRatio());
        }
        if (other.hasOverlapThresh()) {
          setOverlapThresh(other.getOverlapThresh());
        }
        if (other.hasClipBoxes()) {
          setClipBoxes(other.getClipBoxes());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomCropToAspectRatio parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomCropToAspectRatio) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float aspectRatio_ = 1F;
      /**
       * <pre>
       * Aspect ratio.
       * </pre>
       *
       * <code>optional float aspect_ratio = 1 [default = 1];</code>
       * @return Whether the aspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasAspectRatio() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Aspect ratio.
       * </pre>
       *
       * <code>optional float aspect_ratio = 1 [default = 1];</code>
       * @return The aspectRatio.
       */
      @java.lang.Override
      public float getAspectRatio() {
        return aspectRatio_;
      }
      /**
       * <pre>
       * Aspect ratio.
       * </pre>
       *
       * <code>optional float aspect_ratio = 1 [default = 1];</code>
       * @param value The aspectRatio to set.
       * @return This builder for chaining.
       */
      public Builder setAspectRatio(float value) {
        bitField0_ |= 0x00000001;
        aspectRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Aspect ratio.
       * </pre>
       *
       * <code>optional float aspect_ratio = 1 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearAspectRatio() {
        bitField0_ = (bitField0_ & ~0x00000001);
        aspectRatio_ = 1F;
        onChanged();
        return this;
      }

      private float overlapThresh_ = 0.3F;
      /**
       * <pre>
       * Minimum overlap threshold of cropped boxes to keep in new image. If the
       * ratio between a cropped bounding box and the original is less than this
       * value, it is removed from the new image.
       * </pre>
       *
       * <code>optional float overlap_thresh = 2 [default = 0.3];</code>
       * @return Whether the overlapThresh field is set.
       */
      @java.lang.Override
      public boolean hasOverlapThresh() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Minimum overlap threshold of cropped boxes to keep in new image. If the
       * ratio between a cropped bounding box and the original is less than this
       * value, it is removed from the new image.
       * </pre>
       *
       * <code>optional float overlap_thresh = 2 [default = 0.3];</code>
       * @return The overlapThresh.
       */
      @java.lang.Override
      public float getOverlapThresh() {
        return overlapThresh_;
      }
      /**
       * <pre>
       * Minimum overlap threshold of cropped boxes to keep in new image. If the
       * ratio between a cropped bounding box and the original is less than this
       * value, it is removed from the new image.
       * </pre>
       *
       * <code>optional float overlap_thresh = 2 [default = 0.3];</code>
       * @param value The overlapThresh to set.
       * @return This builder for chaining.
       */
      public Builder setOverlapThresh(float value) {
        bitField0_ |= 0x00000002;
        overlapThresh_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Minimum overlap threshold of cropped boxes to keep in new image. If the
       * ratio between a cropped bounding box and the original is less than this
       * value, it is removed from the new image.
       * </pre>
       *
       * <code>optional float overlap_thresh = 2 [default = 0.3];</code>
       * @return This builder for chaining.
       */
      public Builder clearOverlapThresh() {
        bitField0_ = (bitField0_ & ~0x00000002);
        overlapThresh_ = 0.3F;
        onChanged();
        return this;
      }

      private boolean clipBoxes_ = true;
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 3 [default = true];</code>
       * @return Whether the clipBoxes field is set.
       */
      @java.lang.Override
      public boolean hasClipBoxes() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 3 [default = true];</code>
       * @return The clipBoxes.
       */
      @java.lang.Override
      public boolean getClipBoxes() {
        return clipBoxes_;
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 3 [default = true];</code>
       * @param value The clipBoxes to set.
       * @return This builder for chaining.
       */
      public Builder setClipBoxes(boolean value) {
        bitField0_ |= 0x00000004;
        clipBoxes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 3 [default = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearClipBoxes() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clipBoxes_ = true;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomCropToAspectRatio)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomCropToAspectRatio)
    private static final object_detection.protos.Preprocessor.RandomCropToAspectRatio DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomCropToAspectRatio();
    }

    public static object_detection.protos.Preprocessor.RandomCropToAspectRatio getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomCropToAspectRatio>
        PARSER = new com.google.protobuf.AbstractParser<RandomCropToAspectRatio>() {
      @java.lang.Override
      public RandomCropToAspectRatio parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomCropToAspectRatio(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomCropToAspectRatio> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomCropToAspectRatio> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomCropToAspectRatio getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomBlackPatchesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomBlackPatches)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The maximum number of black patches to add.
     * </pre>
     *
     * <code>optional int32 max_black_patches = 1 [default = 10];</code>
     * @return Whether the maxBlackPatches field is set.
     */
    boolean hasMaxBlackPatches();
    /**
     * <pre>
     * The maximum number of black patches to add.
     * </pre>
     *
     * <code>optional int32 max_black_patches = 1 [default = 10];</code>
     * @return The maxBlackPatches.
     */
    int getMaxBlackPatches();

    /**
     * <pre>
     * The probability of a black patch being added to an image.
     * </pre>
     *
     * <code>optional float probability = 2 [default = 0.5];</code>
     * @return Whether the probability field is set.
     */
    boolean hasProbability();
    /**
     * <pre>
     * The probability of a black patch being added to an image.
     * </pre>
     *
     * <code>optional float probability = 2 [default = 0.5];</code>
     * @return The probability.
     */
    float getProbability();

    /**
     * <pre>
     * Ratio between the dimension of the black patch to the minimum dimension of
     * the image (patch_width = patch_height = min(image_height, image_width)).
     * </pre>
     *
     * <code>optional float size_to_image_ratio = 3 [default = 0.1];</code>
     * @return Whether the sizeToImageRatio field is set.
     */
    boolean hasSizeToImageRatio();
    /**
     * <pre>
     * Ratio between the dimension of the black patch to the minimum dimension of
     * the image (patch_width = patch_height = min(image_height, image_width)).
     * </pre>
     *
     * <code>optional float size_to_image_ratio = 3 [default = 0.1];</code>
     * @return The sizeToImageRatio.
     */
    float getSizeToImageRatio();
  }
  /**
   * <pre>
   * Randomly adds black square patches to an image.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomBlackPatches}
   */
  public static final class RandomBlackPatches extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomBlackPatches)
      RandomBlackPatchesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomBlackPatches.newBuilder() to construct.
    private RandomBlackPatches(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomBlackPatches() {
      maxBlackPatches_ = 10;
      probability_ = 0.5F;
      sizeToImageRatio_ = 0.1F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomBlackPatches();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomBlackPatches(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              maxBlackPatches_ = input.readInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              probability_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              sizeToImageRatio_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomBlackPatches_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomBlackPatches_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomBlackPatches.class, object_detection.protos.Preprocessor.RandomBlackPatches.Builder.class);
    }

    private int bitField0_;
    public static final int MAX_BLACK_PATCHES_FIELD_NUMBER = 1;
    private int maxBlackPatches_;
    /**
     * <pre>
     * The maximum number of black patches to add.
     * </pre>
     *
     * <code>optional int32 max_black_patches = 1 [default = 10];</code>
     * @return Whether the maxBlackPatches field is set.
     */
    @java.lang.Override
    public boolean hasMaxBlackPatches() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The maximum number of black patches to add.
     * </pre>
     *
     * <code>optional int32 max_black_patches = 1 [default = 10];</code>
     * @return The maxBlackPatches.
     */
    @java.lang.Override
    public int getMaxBlackPatches() {
      return maxBlackPatches_;
    }

    public static final int PROBABILITY_FIELD_NUMBER = 2;
    private float probability_;
    /**
     * <pre>
     * The probability of a black patch being added to an image.
     * </pre>
     *
     * <code>optional float probability = 2 [default = 0.5];</code>
     * @return Whether the probability field is set.
     */
    @java.lang.Override
    public boolean hasProbability() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The probability of a black patch being added to an image.
     * </pre>
     *
     * <code>optional float probability = 2 [default = 0.5];</code>
     * @return The probability.
     */
    @java.lang.Override
    public float getProbability() {
      return probability_;
    }

    public static final int SIZE_TO_IMAGE_RATIO_FIELD_NUMBER = 3;
    private float sizeToImageRatio_;
    /**
     * <pre>
     * Ratio between the dimension of the black patch to the minimum dimension of
     * the image (patch_width = patch_height = min(image_height, image_width)).
     * </pre>
     *
     * <code>optional float size_to_image_ratio = 3 [default = 0.1];</code>
     * @return Whether the sizeToImageRatio field is set.
     */
    @java.lang.Override
    public boolean hasSizeToImageRatio() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Ratio between the dimension of the black patch to the minimum dimension of
     * the image (patch_width = patch_height = min(image_height, image_width)).
     * </pre>
     *
     * <code>optional float size_to_image_ratio = 3 [default = 0.1];</code>
     * @return The sizeToImageRatio.
     */
    @java.lang.Override
    public float getSizeToImageRatio() {
      return sizeToImageRatio_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, maxBlackPatches_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, probability_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, sizeToImageRatio_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, maxBlackPatches_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, probability_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, sizeToImageRatio_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomBlackPatches)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomBlackPatches other = (object_detection.protos.Preprocessor.RandomBlackPatches) obj;

      if (hasMaxBlackPatches() != other.hasMaxBlackPatches()) return false;
      if (hasMaxBlackPatches()) {
        if (getMaxBlackPatches()
            != other.getMaxBlackPatches()) return false;
      }
      if (hasProbability() != other.hasProbability()) return false;
      if (hasProbability()) {
        if (java.lang.Float.floatToIntBits(getProbability())
            != java.lang.Float.floatToIntBits(
                other.getProbability())) return false;
      }
      if (hasSizeToImageRatio() != other.hasSizeToImageRatio()) return false;
      if (hasSizeToImageRatio()) {
        if (java.lang.Float.floatToIntBits(getSizeToImageRatio())
            != java.lang.Float.floatToIntBits(
                other.getSizeToImageRatio())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMaxBlackPatches()) {
        hash = (37 * hash) + MAX_BLACK_PATCHES_FIELD_NUMBER;
        hash = (53 * hash) + getMaxBlackPatches();
      }
      if (hasProbability()) {
        hash = (37 * hash) + PROBABILITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getProbability());
      }
      if (hasSizeToImageRatio()) {
        hash = (37 * hash) + SIZE_TO_IMAGE_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getSizeToImageRatio());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomBlackPatches parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomBlackPatches parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomBlackPatches parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomBlackPatches parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomBlackPatches parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomBlackPatches parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomBlackPatches parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomBlackPatches parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomBlackPatches parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomBlackPatches parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomBlackPatches parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomBlackPatches parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomBlackPatches prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly adds black square patches to an image.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomBlackPatches}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomBlackPatches)
        object_detection.protos.Preprocessor.RandomBlackPatchesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomBlackPatches_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomBlackPatches_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomBlackPatches.class, object_detection.protos.Preprocessor.RandomBlackPatches.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomBlackPatches.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        maxBlackPatches_ = 10;
        bitField0_ = (bitField0_ & ~0x00000001);
        probability_ = 0.5F;
        bitField0_ = (bitField0_ & ~0x00000002);
        sizeToImageRatio_ = 0.1F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomBlackPatches_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomBlackPatches getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomBlackPatches.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomBlackPatches build() {
        object_detection.protos.Preprocessor.RandomBlackPatches result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomBlackPatches buildPartial() {
        object_detection.protos.Preprocessor.RandomBlackPatches result = new object_detection.protos.Preprocessor.RandomBlackPatches(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.maxBlackPatches_ = maxBlackPatches_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.probability_ = probability_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sizeToImageRatio_ = sizeToImageRatio_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomBlackPatches) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomBlackPatches)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomBlackPatches other) {
        if (other == object_detection.protos.Preprocessor.RandomBlackPatches.getDefaultInstance()) return this;
        if (other.hasMaxBlackPatches()) {
          setMaxBlackPatches(other.getMaxBlackPatches());
        }
        if (other.hasProbability()) {
          setProbability(other.getProbability());
        }
        if (other.hasSizeToImageRatio()) {
          setSizeToImageRatio(other.getSizeToImageRatio());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomBlackPatches parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomBlackPatches) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int maxBlackPatches_ = 10;
      /**
       * <pre>
       * The maximum number of black patches to add.
       * </pre>
       *
       * <code>optional int32 max_black_patches = 1 [default = 10];</code>
       * @return Whether the maxBlackPatches field is set.
       */
      @java.lang.Override
      public boolean hasMaxBlackPatches() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The maximum number of black patches to add.
       * </pre>
       *
       * <code>optional int32 max_black_patches = 1 [default = 10];</code>
       * @return The maxBlackPatches.
       */
      @java.lang.Override
      public int getMaxBlackPatches() {
        return maxBlackPatches_;
      }
      /**
       * <pre>
       * The maximum number of black patches to add.
       * </pre>
       *
       * <code>optional int32 max_black_patches = 1 [default = 10];</code>
       * @param value The maxBlackPatches to set.
       * @return This builder for chaining.
       */
      public Builder setMaxBlackPatches(int value) {
        bitField0_ |= 0x00000001;
        maxBlackPatches_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The maximum number of black patches to add.
       * </pre>
       *
       * <code>optional int32 max_black_patches = 1 [default = 10];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxBlackPatches() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxBlackPatches_ = 10;
        onChanged();
        return this;
      }

      private float probability_ = 0.5F;
      /**
       * <pre>
       * The probability of a black patch being added to an image.
       * </pre>
       *
       * <code>optional float probability = 2 [default = 0.5];</code>
       * @return Whether the probability field is set.
       */
      @java.lang.Override
      public boolean hasProbability() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The probability of a black patch being added to an image.
       * </pre>
       *
       * <code>optional float probability = 2 [default = 0.5];</code>
       * @return The probability.
       */
      @java.lang.Override
      public float getProbability() {
        return probability_;
      }
      /**
       * <pre>
       * The probability of a black patch being added to an image.
       * </pre>
       *
       * <code>optional float probability = 2 [default = 0.5];</code>
       * @param value The probability to set.
       * @return This builder for chaining.
       */
      public Builder setProbability(float value) {
        bitField0_ |= 0x00000002;
        probability_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The probability of a black patch being added to an image.
       * </pre>
       *
       * <code>optional float probability = 2 [default = 0.5];</code>
       * @return This builder for chaining.
       */
      public Builder clearProbability() {
        bitField0_ = (bitField0_ & ~0x00000002);
        probability_ = 0.5F;
        onChanged();
        return this;
      }

      private float sizeToImageRatio_ = 0.1F;
      /**
       * <pre>
       * Ratio between the dimension of the black patch to the minimum dimension of
       * the image (patch_width = patch_height = min(image_height, image_width)).
       * </pre>
       *
       * <code>optional float size_to_image_ratio = 3 [default = 0.1];</code>
       * @return Whether the sizeToImageRatio field is set.
       */
      @java.lang.Override
      public boolean hasSizeToImageRatio() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Ratio between the dimension of the black patch to the minimum dimension of
       * the image (patch_width = patch_height = min(image_height, image_width)).
       * </pre>
       *
       * <code>optional float size_to_image_ratio = 3 [default = 0.1];</code>
       * @return The sizeToImageRatio.
       */
      @java.lang.Override
      public float getSizeToImageRatio() {
        return sizeToImageRatio_;
      }
      /**
       * <pre>
       * Ratio between the dimension of the black patch to the minimum dimension of
       * the image (patch_width = patch_height = min(image_height, image_width)).
       * </pre>
       *
       * <code>optional float size_to_image_ratio = 3 [default = 0.1];</code>
       * @param value The sizeToImageRatio to set.
       * @return This builder for chaining.
       */
      public Builder setSizeToImageRatio(float value) {
        bitField0_ |= 0x00000004;
        sizeToImageRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ratio between the dimension of the black patch to the minimum dimension of
       * the image (patch_width = patch_height = min(image_height, image_width)).
       * </pre>
       *
       * <code>optional float size_to_image_ratio = 3 [default = 0.1];</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeToImageRatio() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sizeToImageRatio_ = 0.1F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomBlackPatches)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomBlackPatches)
    private static final object_detection.protos.Preprocessor.RandomBlackPatches DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomBlackPatches();
    }

    public static object_detection.protos.Preprocessor.RandomBlackPatches getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomBlackPatches>
        PARSER = new com.google.protobuf.AbstractParser<RandomBlackPatches>() {
      @java.lang.Override
      public RandomBlackPatches parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomBlackPatches(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomBlackPatches> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomBlackPatches> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomBlackPatches getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomResizeMethodOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomResizeMethod)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 target_height = 1;</code>
     * @return Whether the targetHeight field is set.
     */
    boolean hasTargetHeight();
    /**
     * <code>optional int32 target_height = 1;</code>
     * @return The targetHeight.
     */
    int getTargetHeight();

    /**
     * <code>optional int32 target_width = 2;</code>
     * @return Whether the targetWidth field is set.
     */
    boolean hasTargetWidth();
    /**
     * <code>optional int32 target_width = 2;</code>
     * @return The targetWidth.
     */
    int getTargetWidth();
  }
  /**
   * <pre>
   * Randomly resizes the image up to [target_height, target_width].
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomResizeMethod}
   */
  public static final class RandomResizeMethod extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomResizeMethod)
      RandomResizeMethodOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomResizeMethod.newBuilder() to construct.
    private RandomResizeMethod(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomResizeMethod() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomResizeMethod();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomResizeMethod(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              targetHeight_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              targetWidth_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomResizeMethod_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomResizeMethod_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomResizeMethod.class, object_detection.protos.Preprocessor.RandomResizeMethod.Builder.class);
    }

    private int bitField0_;
    public static final int TARGET_HEIGHT_FIELD_NUMBER = 1;
    private int targetHeight_;
    /**
     * <code>optional int32 target_height = 1;</code>
     * @return Whether the targetHeight field is set.
     */
    @java.lang.Override
    public boolean hasTargetHeight() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 target_height = 1;</code>
     * @return The targetHeight.
     */
    @java.lang.Override
    public int getTargetHeight() {
      return targetHeight_;
    }

    public static final int TARGET_WIDTH_FIELD_NUMBER = 2;
    private int targetWidth_;
    /**
     * <code>optional int32 target_width = 2;</code>
     * @return Whether the targetWidth field is set.
     */
    @java.lang.Override
    public boolean hasTargetWidth() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 target_width = 2;</code>
     * @return The targetWidth.
     */
    @java.lang.Override
    public int getTargetWidth() {
      return targetWidth_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, targetHeight_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, targetWidth_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, targetHeight_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, targetWidth_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomResizeMethod)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomResizeMethod other = (object_detection.protos.Preprocessor.RandomResizeMethod) obj;

      if (hasTargetHeight() != other.hasTargetHeight()) return false;
      if (hasTargetHeight()) {
        if (getTargetHeight()
            != other.getTargetHeight()) return false;
      }
      if (hasTargetWidth() != other.hasTargetWidth()) return false;
      if (hasTargetWidth()) {
        if (getTargetWidth()
            != other.getTargetWidth()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTargetHeight()) {
        hash = (37 * hash) + TARGET_HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getTargetHeight();
      }
      if (hasTargetWidth()) {
        hash = (37 * hash) + TARGET_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getTargetWidth();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomResizeMethod parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomResizeMethod parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomResizeMethod parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomResizeMethod parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomResizeMethod parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomResizeMethod parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomResizeMethod parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomResizeMethod parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomResizeMethod parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomResizeMethod parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomResizeMethod parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomResizeMethod parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomResizeMethod prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly resizes the image up to [target_height, target_width].
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomResizeMethod}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomResizeMethod)
        object_detection.protos.Preprocessor.RandomResizeMethodOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomResizeMethod_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomResizeMethod_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomResizeMethod.class, object_detection.protos.Preprocessor.RandomResizeMethod.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomResizeMethod.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        targetHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        targetWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomResizeMethod_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomResizeMethod getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomResizeMethod.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomResizeMethod build() {
        object_detection.protos.Preprocessor.RandomResizeMethod result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomResizeMethod buildPartial() {
        object_detection.protos.Preprocessor.RandomResizeMethod result = new object_detection.protos.Preprocessor.RandomResizeMethod(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.targetHeight_ = targetHeight_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.targetWidth_ = targetWidth_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomResizeMethod) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomResizeMethod)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomResizeMethod other) {
        if (other == object_detection.protos.Preprocessor.RandomResizeMethod.getDefaultInstance()) return this;
        if (other.hasTargetHeight()) {
          setTargetHeight(other.getTargetHeight());
        }
        if (other.hasTargetWidth()) {
          setTargetWidth(other.getTargetWidth());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomResizeMethod parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomResizeMethod) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int targetHeight_ ;
      /**
       * <code>optional int32 target_height = 1;</code>
       * @return Whether the targetHeight field is set.
       */
      @java.lang.Override
      public boolean hasTargetHeight() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 target_height = 1;</code>
       * @return The targetHeight.
       */
      @java.lang.Override
      public int getTargetHeight() {
        return targetHeight_;
      }
      /**
       * <code>optional int32 target_height = 1;</code>
       * @param value The targetHeight to set.
       * @return This builder for chaining.
       */
      public Builder setTargetHeight(int value) {
        bitField0_ |= 0x00000001;
        targetHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 target_height = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetHeight() {
        bitField0_ = (bitField0_ & ~0x00000001);
        targetHeight_ = 0;
        onChanged();
        return this;
      }

      private int targetWidth_ ;
      /**
       * <code>optional int32 target_width = 2;</code>
       * @return Whether the targetWidth field is set.
       */
      @java.lang.Override
      public boolean hasTargetWidth() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 target_width = 2;</code>
       * @return The targetWidth.
       */
      @java.lang.Override
      public int getTargetWidth() {
        return targetWidth_;
      }
      /**
       * <code>optional int32 target_width = 2;</code>
       * @param value The targetWidth to set.
       * @return This builder for chaining.
       */
      public Builder setTargetWidth(int value) {
        bitField0_ |= 0x00000002;
        targetWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 target_width = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetWidth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        targetWidth_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomResizeMethod)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomResizeMethod)
    private static final object_detection.protos.Preprocessor.RandomResizeMethod DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomResizeMethod();
    }

    public static object_detection.protos.Preprocessor.RandomResizeMethod getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomResizeMethod>
        PARSER = new com.google.protobuf.AbstractParser<RandomResizeMethod>() {
      @java.lang.Override
      public RandomResizeMethod parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomResizeMethod(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomResizeMethod> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomResizeMethod> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomResizeMethod getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RGBtoGrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RGBtoGray)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Converts the RGB image to a grayscale image. This also converts the image
   * depth from 3 to 1, unlike RandomRGBtoGray which does not change the image
   * depth.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RGBtoGray}
   */
  public static final class RGBtoGray extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RGBtoGray)
      RGBtoGrayOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RGBtoGray.newBuilder() to construct.
    private RGBtoGray(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RGBtoGray() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RGBtoGray();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RGBtoGray(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RGBtoGray_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RGBtoGray_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RGBtoGray.class, object_detection.protos.Preprocessor.RGBtoGray.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RGBtoGray)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RGBtoGray other = (object_detection.protos.Preprocessor.RGBtoGray) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RGBtoGray parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RGBtoGray parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RGBtoGray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RGBtoGray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RGBtoGray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RGBtoGray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RGBtoGray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RGBtoGray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RGBtoGray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RGBtoGray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RGBtoGray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RGBtoGray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RGBtoGray prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Converts the RGB image to a grayscale image. This also converts the image
     * depth from 3 to 1, unlike RandomRGBtoGray which does not change the image
     * depth.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RGBtoGray}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RGBtoGray)
        object_detection.protos.Preprocessor.RGBtoGrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RGBtoGray_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RGBtoGray_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RGBtoGray.class, object_detection.protos.Preprocessor.RGBtoGray.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RGBtoGray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RGBtoGray_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RGBtoGray getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RGBtoGray.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RGBtoGray build() {
        object_detection.protos.Preprocessor.RGBtoGray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RGBtoGray buildPartial() {
        object_detection.protos.Preprocessor.RGBtoGray result = new object_detection.protos.Preprocessor.RGBtoGray(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RGBtoGray) {
          return mergeFrom((object_detection.protos.Preprocessor.RGBtoGray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RGBtoGray other) {
        if (other == object_detection.protos.Preprocessor.RGBtoGray.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RGBtoGray parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RGBtoGray) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RGBtoGray)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RGBtoGray)
    private static final object_detection.protos.Preprocessor.RGBtoGray DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RGBtoGray();
    }

    public static object_detection.protos.Preprocessor.RGBtoGray getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RGBtoGray>
        PARSER = new com.google.protobuf.AbstractParser<RGBtoGray>() {
      @java.lang.Override
      public RGBtoGray parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RGBtoGray(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RGBtoGray> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RGBtoGray> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RGBtoGray getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScaleBoxesToPixelCoordinatesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.ScaleBoxesToPixelCoordinates)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Scales boxes from normalized coordinates to pixel coordinates.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.ScaleBoxesToPixelCoordinates}
   */
  public static final class ScaleBoxesToPixelCoordinates extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.ScaleBoxesToPixelCoordinates)
      ScaleBoxesToPixelCoordinatesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ScaleBoxesToPixelCoordinates.newBuilder() to construct.
    private ScaleBoxesToPixelCoordinates(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ScaleBoxesToPixelCoordinates() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ScaleBoxesToPixelCoordinates();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ScaleBoxesToPixelCoordinates(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_ScaleBoxesToPixelCoordinates_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_ScaleBoxesToPixelCoordinates_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.class, object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates other = (object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Scales boxes from normalized coordinates to pixel coordinates.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.ScaleBoxesToPixelCoordinates}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.ScaleBoxesToPixelCoordinates)
        object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinatesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_ScaleBoxesToPixelCoordinates_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_ScaleBoxesToPixelCoordinates_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.class, object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_ScaleBoxesToPixelCoordinates_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates build() {
        object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates buildPartial() {
        object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates result = new object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates) {
          return mergeFrom((object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates other) {
        if (other == object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.ScaleBoxesToPixelCoordinates)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.ScaleBoxesToPixelCoordinates)
    private static final object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates();
    }

    public static object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ScaleBoxesToPixelCoordinates>
        PARSER = new com.google.protobuf.AbstractParser<ScaleBoxesToPixelCoordinates>() {
      @java.lang.Override
      public ScaleBoxesToPixelCoordinates parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ScaleBoxesToPixelCoordinates(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ScaleBoxesToPixelCoordinates> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScaleBoxesToPixelCoordinates> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.ScaleBoxesToPixelCoordinates getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResizeImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.ResizeImage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 new_height = 1;</code>
     * @return Whether the newHeight field is set.
     */
    boolean hasNewHeight();
    /**
     * <code>optional int32 new_height = 1;</code>
     * @return The newHeight.
     */
    int getNewHeight();

    /**
     * <code>optional int32 new_width = 2;</code>
     * @return Whether the newWidth field is set.
     */
    boolean hasNewWidth();
    /**
     * <code>optional int32 new_width = 2;</code>
     * @return The newWidth.
     */
    int getNewWidth();

    /**
     * <code>optional .object_detection.protos.ResizeImage.Method method = 3 [default = BILINEAR];</code>
     * @return Whether the method field is set.
     */
    boolean hasMethod();
    /**
     * <code>optional .object_detection.protos.ResizeImage.Method method = 3 [default = BILINEAR];</code>
     * @return The method.
     */
    object_detection.protos.Preprocessor.ResizeImage.Method getMethod();
  }
  /**
   * <pre>
   * Resizes images to [new_height, new_width].
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.ResizeImage}
   */
  public static final class ResizeImage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.ResizeImage)
      ResizeImageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ResizeImage.newBuilder() to construct.
    private ResizeImage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResizeImage() {
      method_ = 3;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ResizeImage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ResizeImage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              newHeight_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              newWidth_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              object_detection.protos.Preprocessor.ResizeImage.Method value = object_detection.protos.Preprocessor.ResizeImage.Method.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                method_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_ResizeImage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_ResizeImage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.ResizeImage.class, object_detection.protos.Preprocessor.ResizeImage.Builder.class);
    }

    /**
     * Protobuf enum {@code object_detection.protos.ResizeImage.Method}
     */
    public enum Method
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>AREA = 1;</code>
       */
      AREA(1),
      /**
       * <code>BICUBIC = 2;</code>
       */
      BICUBIC(2),
      /**
       * <code>BILINEAR = 3;</code>
       */
      BILINEAR(3),
      /**
       * <code>NEAREST_NEIGHBOR = 4;</code>
       */
      NEAREST_NEIGHBOR(4),
      ;

      /**
       * <code>AREA = 1;</code>
       */
      public static final int AREA_VALUE = 1;
      /**
       * <code>BICUBIC = 2;</code>
       */
      public static final int BICUBIC_VALUE = 2;
      /**
       * <code>BILINEAR = 3;</code>
       */
      public static final int BILINEAR_VALUE = 3;
      /**
       * <code>NEAREST_NEIGHBOR = 4;</code>
       */
      public static final int NEAREST_NEIGHBOR_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Method valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Method forNumber(int value) {
        switch (value) {
          case 1: return AREA;
          case 2: return BICUBIC;
          case 3: return BILINEAR;
          case 4: return NEAREST_NEIGHBOR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Method>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Method> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Method>() {
              public Method findValueByNumber(int number) {
                return Method.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.ResizeImage.getDescriptor().getEnumTypes().get(0);
      }

      private static final Method[] VALUES = values();

      public static Method valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Method(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:object_detection.protos.ResizeImage.Method)
    }

    private int bitField0_;
    public static final int NEW_HEIGHT_FIELD_NUMBER = 1;
    private int newHeight_;
    /**
     * <code>optional int32 new_height = 1;</code>
     * @return Whether the newHeight field is set.
     */
    @java.lang.Override
    public boolean hasNewHeight() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 new_height = 1;</code>
     * @return The newHeight.
     */
    @java.lang.Override
    public int getNewHeight() {
      return newHeight_;
    }

    public static final int NEW_WIDTH_FIELD_NUMBER = 2;
    private int newWidth_;
    /**
     * <code>optional int32 new_width = 2;</code>
     * @return Whether the newWidth field is set.
     */
    @java.lang.Override
    public boolean hasNewWidth() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 new_width = 2;</code>
     * @return The newWidth.
     */
    @java.lang.Override
    public int getNewWidth() {
      return newWidth_;
    }

    public static final int METHOD_FIELD_NUMBER = 3;
    private int method_;
    /**
     * <code>optional .object_detection.protos.ResizeImage.Method method = 3 [default = BILINEAR];</code>
     * @return Whether the method field is set.
     */
    @java.lang.Override public boolean hasMethod() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .object_detection.protos.ResizeImage.Method method = 3 [default = BILINEAR];</code>
     * @return The method.
     */
    @java.lang.Override public object_detection.protos.Preprocessor.ResizeImage.Method getMethod() {
      @SuppressWarnings("deprecation")
      object_detection.protos.Preprocessor.ResizeImage.Method result = object_detection.protos.Preprocessor.ResizeImage.Method.valueOf(method_);
      return result == null ? object_detection.protos.Preprocessor.ResizeImage.Method.BILINEAR : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, newHeight_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, newWidth_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeEnum(3, method_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, newHeight_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, newWidth_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, method_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.ResizeImage)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.ResizeImage other = (object_detection.protos.Preprocessor.ResizeImage) obj;

      if (hasNewHeight() != other.hasNewHeight()) return false;
      if (hasNewHeight()) {
        if (getNewHeight()
            != other.getNewHeight()) return false;
      }
      if (hasNewWidth() != other.hasNewWidth()) return false;
      if (hasNewWidth()) {
        if (getNewWidth()
            != other.getNewWidth()) return false;
      }
      if (hasMethod() != other.hasMethod()) return false;
      if (hasMethod()) {
        if (method_ != other.method_) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNewHeight()) {
        hash = (37 * hash) + NEW_HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getNewHeight();
      }
      if (hasNewWidth()) {
        hash = (37 * hash) + NEW_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getNewWidth();
      }
      if (hasMethod()) {
        hash = (37 * hash) + METHOD_FIELD_NUMBER;
        hash = (53 * hash) + method_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.ResizeImage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.ResizeImage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.ResizeImage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.ResizeImage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.ResizeImage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.ResizeImage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.ResizeImage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.ResizeImage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.ResizeImage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.ResizeImage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.ResizeImage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.ResizeImage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.ResizeImage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Resizes images to [new_height, new_width].
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.ResizeImage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.ResizeImage)
        object_detection.protos.Preprocessor.ResizeImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_ResizeImage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_ResizeImage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.ResizeImage.class, object_detection.protos.Preprocessor.ResizeImage.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.ResizeImage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        newHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        newWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        method_ = 3;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_ResizeImage_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.ResizeImage getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.ResizeImage.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.ResizeImage build() {
        object_detection.protos.Preprocessor.ResizeImage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.ResizeImage buildPartial() {
        object_detection.protos.Preprocessor.ResizeImage result = new object_detection.protos.Preprocessor.ResizeImage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.newHeight_ = newHeight_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.newWidth_ = newWidth_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.method_ = method_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.ResizeImage) {
          return mergeFrom((object_detection.protos.Preprocessor.ResizeImage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.ResizeImage other) {
        if (other == object_detection.protos.Preprocessor.ResizeImage.getDefaultInstance()) return this;
        if (other.hasNewHeight()) {
          setNewHeight(other.getNewHeight());
        }
        if (other.hasNewWidth()) {
          setNewWidth(other.getNewWidth());
        }
        if (other.hasMethod()) {
          setMethod(other.getMethod());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.ResizeImage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.ResizeImage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int newHeight_ ;
      /**
       * <code>optional int32 new_height = 1;</code>
       * @return Whether the newHeight field is set.
       */
      @java.lang.Override
      public boolean hasNewHeight() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 new_height = 1;</code>
       * @return The newHeight.
       */
      @java.lang.Override
      public int getNewHeight() {
        return newHeight_;
      }
      /**
       * <code>optional int32 new_height = 1;</code>
       * @param value The newHeight to set.
       * @return This builder for chaining.
       */
      public Builder setNewHeight(int value) {
        bitField0_ |= 0x00000001;
        newHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 new_height = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewHeight() {
        bitField0_ = (bitField0_ & ~0x00000001);
        newHeight_ = 0;
        onChanged();
        return this;
      }

      private int newWidth_ ;
      /**
       * <code>optional int32 new_width = 2;</code>
       * @return Whether the newWidth field is set.
       */
      @java.lang.Override
      public boolean hasNewWidth() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 new_width = 2;</code>
       * @return The newWidth.
       */
      @java.lang.Override
      public int getNewWidth() {
        return newWidth_;
      }
      /**
       * <code>optional int32 new_width = 2;</code>
       * @param value The newWidth to set.
       * @return This builder for chaining.
       */
      public Builder setNewWidth(int value) {
        bitField0_ |= 0x00000002;
        newWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 new_width = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewWidth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        newWidth_ = 0;
        onChanged();
        return this;
      }

      private int method_ = 3;
      /**
       * <code>optional .object_detection.protos.ResizeImage.Method method = 3 [default = BILINEAR];</code>
       * @return Whether the method field is set.
       */
      @java.lang.Override public boolean hasMethod() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .object_detection.protos.ResizeImage.Method method = 3 [default = BILINEAR];</code>
       * @return The method.
       */
      @java.lang.Override
      public object_detection.protos.Preprocessor.ResizeImage.Method getMethod() {
        @SuppressWarnings("deprecation")
        object_detection.protos.Preprocessor.ResizeImage.Method result = object_detection.protos.Preprocessor.ResizeImage.Method.valueOf(method_);
        return result == null ? object_detection.protos.Preprocessor.ResizeImage.Method.BILINEAR : result;
      }
      /**
       * <code>optional .object_detection.protos.ResizeImage.Method method = 3 [default = BILINEAR];</code>
       * @param value The method to set.
       * @return This builder for chaining.
       */
      public Builder setMethod(object_detection.protos.Preprocessor.ResizeImage.Method value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        method_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .object_detection.protos.ResizeImage.Method method = 3 [default = BILINEAR];</code>
       * @return This builder for chaining.
       */
      public Builder clearMethod() {
        bitField0_ = (bitField0_ & ~0x00000004);
        method_ = 3;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.ResizeImage)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.ResizeImage)
    private static final object_detection.protos.Preprocessor.ResizeImage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.ResizeImage();
    }

    public static object_detection.protos.Preprocessor.ResizeImage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ResizeImage>
        PARSER = new com.google.protobuf.AbstractParser<ResizeImage>() {
      @java.lang.Override
      public ResizeImage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ResizeImage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResizeImage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResizeImage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.ResizeImage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SubtractChannelMeanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.SubtractChannelMean)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The mean to subtract from each channel. Should be of same dimension of
     * channels in the input image.
     * </pre>
     *
     * <code>repeated float means = 1;</code>
     * @return A list containing the means.
     */
    java.util.List<java.lang.Float> getMeansList();
    /**
     * <pre>
     * The mean to subtract from each channel. Should be of same dimension of
     * channels in the input image.
     * </pre>
     *
     * <code>repeated float means = 1;</code>
     * @return The count of means.
     */
    int getMeansCount();
    /**
     * <pre>
     * The mean to subtract from each channel. Should be of same dimension of
     * channels in the input image.
     * </pre>
     *
     * <code>repeated float means = 1;</code>
     * @param index The index of the element to return.
     * @return The means at the given index.
     */
    float getMeans(int index);
  }
  /**
   * <pre>
   * Normalizes an image by subtracting a mean from each channel.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.SubtractChannelMean}
   */
  public static final class SubtractChannelMean extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.SubtractChannelMean)
      SubtractChannelMeanOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SubtractChannelMean.newBuilder() to construct.
    private SubtractChannelMean(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SubtractChannelMean() {
      means_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SubtractChannelMean();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SubtractChannelMean(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                means_ = newFloatList();
                mutable_bitField0_ |= 0x00000001;
              }
              means_.addFloat(input.readFloat());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                means_ = newFloatList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                means_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          means_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SubtractChannelMean_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SubtractChannelMean_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.SubtractChannelMean.class, object_detection.protos.Preprocessor.SubtractChannelMean.Builder.class);
    }

    public static final int MEANS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.FloatList means_;
    /**
     * <pre>
     * The mean to subtract from each channel. Should be of same dimension of
     * channels in the input image.
     * </pre>
     *
     * <code>repeated float means = 1;</code>
     * @return A list containing the means.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getMeansList() {
      return means_;
    }
    /**
     * <pre>
     * The mean to subtract from each channel. Should be of same dimension of
     * channels in the input image.
     * </pre>
     *
     * <code>repeated float means = 1;</code>
     * @return The count of means.
     */
    public int getMeansCount() {
      return means_.size();
    }
    /**
     * <pre>
     * The mean to subtract from each channel. Should be of same dimension of
     * channels in the input image.
     * </pre>
     *
     * <code>repeated float means = 1;</code>
     * @param index The index of the element to return.
     * @return The means at the given index.
     */
    public float getMeans(int index) {
      return means_.getFloat(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < means_.size(); i++) {
        output.writeFloat(1, means_.getFloat(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * getMeansList().size();
        size += dataSize;
        size += 1 * getMeansList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.SubtractChannelMean)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.SubtractChannelMean other = (object_detection.protos.Preprocessor.SubtractChannelMean) obj;

      if (!getMeansList()
          .equals(other.getMeansList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMeansCount() > 0) {
        hash = (37 * hash) + MEANS_FIELD_NUMBER;
        hash = (53 * hash) + getMeansList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.SubtractChannelMean parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SubtractChannelMean parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SubtractChannelMean parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SubtractChannelMean parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SubtractChannelMean parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SubtractChannelMean parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SubtractChannelMean parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SubtractChannelMean parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SubtractChannelMean parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SubtractChannelMean parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SubtractChannelMean parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SubtractChannelMean parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.SubtractChannelMean prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Normalizes an image by subtracting a mean from each channel.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.SubtractChannelMean}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.SubtractChannelMean)
        object_detection.protos.Preprocessor.SubtractChannelMeanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SubtractChannelMean_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SubtractChannelMean_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.SubtractChannelMean.class, object_detection.protos.Preprocessor.SubtractChannelMean.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.SubtractChannelMean.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        means_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SubtractChannelMean_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SubtractChannelMean getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.SubtractChannelMean.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SubtractChannelMean build() {
        object_detection.protos.Preprocessor.SubtractChannelMean result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SubtractChannelMean buildPartial() {
        object_detection.protos.Preprocessor.SubtractChannelMean result = new object_detection.protos.Preprocessor.SubtractChannelMean(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          means_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.means_ = means_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.SubtractChannelMean) {
          return mergeFrom((object_detection.protos.Preprocessor.SubtractChannelMean)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.SubtractChannelMean other) {
        if (other == object_detection.protos.Preprocessor.SubtractChannelMean.getDefaultInstance()) return this;
        if (!other.means_.isEmpty()) {
          if (means_.isEmpty()) {
            means_ = other.means_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMeansIsMutable();
            means_.addAll(other.means_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.SubtractChannelMean parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.SubtractChannelMean) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.FloatList means_ = emptyFloatList();
      private void ensureMeansIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          means_ = mutableCopy(means_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * The mean to subtract from each channel. Should be of same dimension of
       * channels in the input image.
       * </pre>
       *
       * <code>repeated float means = 1;</code>
       * @return A list containing the means.
       */
      public java.util.List<java.lang.Float>
          getMeansList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(means_) : means_;
      }
      /**
       * <pre>
       * The mean to subtract from each channel. Should be of same dimension of
       * channels in the input image.
       * </pre>
       *
       * <code>repeated float means = 1;</code>
       * @return The count of means.
       */
      public int getMeansCount() {
        return means_.size();
      }
      /**
       * <pre>
       * The mean to subtract from each channel. Should be of same dimension of
       * channels in the input image.
       * </pre>
       *
       * <code>repeated float means = 1;</code>
       * @param index The index of the element to return.
       * @return The means at the given index.
       */
      public float getMeans(int index) {
        return means_.getFloat(index);
      }
      /**
       * <pre>
       * The mean to subtract from each channel. Should be of same dimension of
       * channels in the input image.
       * </pre>
       *
       * <code>repeated float means = 1;</code>
       * @param index The index to set the value at.
       * @param value The means to set.
       * @return This builder for chaining.
       */
      public Builder setMeans(
          int index, float value) {
        ensureMeansIsMutable();
        means_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The mean to subtract from each channel. Should be of same dimension of
       * channels in the input image.
       * </pre>
       *
       * <code>repeated float means = 1;</code>
       * @param value The means to add.
       * @return This builder for chaining.
       */
      public Builder addMeans(float value) {
        ensureMeansIsMutable();
        means_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The mean to subtract from each channel. Should be of same dimension of
       * channels in the input image.
       * </pre>
       *
       * <code>repeated float means = 1;</code>
       * @param values The means to add.
       * @return This builder for chaining.
       */
      public Builder addAllMeans(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureMeansIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, means_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The mean to subtract from each channel. Should be of same dimension of
       * channels in the input image.
       * </pre>
       *
       * <code>repeated float means = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMeans() {
        means_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.SubtractChannelMean)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.SubtractChannelMean)
    private static final object_detection.protos.Preprocessor.SubtractChannelMean DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.SubtractChannelMean();
    }

    public static object_detection.protos.Preprocessor.SubtractChannelMean getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SubtractChannelMean>
        PARSER = new com.google.protobuf.AbstractParser<SubtractChannelMean>() {
      @java.lang.Override
      public SubtractChannelMean parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SubtractChannelMean(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SubtractChannelMean> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SubtractChannelMean> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.SubtractChannelMean getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSDRandomCropOperationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.SSDRandomCropOperation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Cropped image must cover at least this fraction of one original bounding
     * box.
     * </pre>
     *
     * <code>optional float min_object_covered = 1;</code>
     * @return Whether the minObjectCovered field is set.
     */
    boolean hasMinObjectCovered();
    /**
     * <pre>
     * Cropped image must cover at least this fraction of one original bounding
     * box.
     * </pre>
     *
     * <code>optional float min_object_covered = 1;</code>
     * @return The minObjectCovered.
     */
    float getMinObjectCovered();

    /**
     * <pre>
     * The aspect ratio of the cropped image must be within the range of
     * [min_aspect_ratio, max_aspect_ratio].
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2;</code>
     * @return Whether the minAspectRatio field is set.
     */
    boolean hasMinAspectRatio();
    /**
     * <pre>
     * The aspect ratio of the cropped image must be within the range of
     * [min_aspect_ratio, max_aspect_ratio].
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2;</code>
     * @return The minAspectRatio.
     */
    float getMinAspectRatio();

    /**
     * <code>optional float max_aspect_ratio = 3;</code>
     * @return Whether the maxAspectRatio field is set.
     */
    boolean hasMaxAspectRatio();
    /**
     * <code>optional float max_aspect_ratio = 3;</code>
     * @return The maxAspectRatio.
     */
    float getMaxAspectRatio();

    /**
     * <pre>
     * The area of the cropped image must be within the range of
     * [min_area, max_area].
     * </pre>
     *
     * <code>optional float min_area = 4;</code>
     * @return Whether the minArea field is set.
     */
    boolean hasMinArea();
    /**
     * <pre>
     * The area of the cropped image must be within the range of
     * [min_area, max_area].
     * </pre>
     *
     * <code>optional float min_area = 4;</code>
     * @return The minArea.
     */
    float getMinArea();

    /**
     * <code>optional float max_area = 5;</code>
     * @return Whether the maxArea field is set.
     */
    boolean hasMaxArea();
    /**
     * <code>optional float max_area = 5;</code>
     * @return The maxArea.
     */
    float getMaxArea();

    /**
     * <pre>
     * Cropped box area ratio must be above this threhold to be kept.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6;</code>
     * @return Whether the overlapThresh field is set.
     */
    boolean hasOverlapThresh();
    /**
     * <pre>
     * Cropped box area ratio must be above this threhold to be kept.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6;</code>
     * @return The overlapThresh.
     */
    float getOverlapThresh();

    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 8 [default = true];</code>
     * @return Whether the clipBoxes field is set.
     */
    boolean hasClipBoxes();
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 8 [default = true];</code>
     * @return The clipBoxes.
     */
    boolean getClipBoxes();

    /**
     * <pre>
     * Probability a crop operation is skipped.
     * </pre>
     *
     * <code>optional float random_coef = 7;</code>
     * @return Whether the randomCoef field is set.
     */
    boolean hasRandomCoef();
    /**
     * <pre>
     * Probability a crop operation is skipped.
     * </pre>
     *
     * <code>optional float random_coef = 7;</code>
     * @return The randomCoef.
     */
    float getRandomCoef();
  }
  /**
   * Protobuf type {@code object_detection.protos.SSDRandomCropOperation}
   */
  public static final class SSDRandomCropOperation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.SSDRandomCropOperation)
      SSDRandomCropOperationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SSDRandomCropOperation.newBuilder() to construct.
    private SSDRandomCropOperation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSDRandomCropOperation() {
      clipBoxes_ = true;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SSDRandomCropOperation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSDRandomCropOperation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              minObjectCovered_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              minAspectRatio_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              maxAspectRatio_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              minArea_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              maxArea_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              overlapThresh_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000080;
              randomCoef_ = input.readFloat();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              clipBoxes_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropOperation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropOperation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.SSDRandomCropOperation.class, object_detection.protos.Preprocessor.SSDRandomCropOperation.Builder.class);
    }

    private int bitField0_;
    public static final int MIN_OBJECT_COVERED_FIELD_NUMBER = 1;
    private float minObjectCovered_;
    /**
     * <pre>
     * Cropped image must cover at least this fraction of one original bounding
     * box.
     * </pre>
     *
     * <code>optional float min_object_covered = 1;</code>
     * @return Whether the minObjectCovered field is set.
     */
    @java.lang.Override
    public boolean hasMinObjectCovered() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Cropped image must cover at least this fraction of one original bounding
     * box.
     * </pre>
     *
     * <code>optional float min_object_covered = 1;</code>
     * @return The minObjectCovered.
     */
    @java.lang.Override
    public float getMinObjectCovered() {
      return minObjectCovered_;
    }

    public static final int MIN_ASPECT_RATIO_FIELD_NUMBER = 2;
    private float minAspectRatio_;
    /**
     * <pre>
     * The aspect ratio of the cropped image must be within the range of
     * [min_aspect_ratio, max_aspect_ratio].
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2;</code>
     * @return Whether the minAspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasMinAspectRatio() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The aspect ratio of the cropped image must be within the range of
     * [min_aspect_ratio, max_aspect_ratio].
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2;</code>
     * @return The minAspectRatio.
     */
    @java.lang.Override
    public float getMinAspectRatio() {
      return minAspectRatio_;
    }

    public static final int MAX_ASPECT_RATIO_FIELD_NUMBER = 3;
    private float maxAspectRatio_;
    /**
     * <code>optional float max_aspect_ratio = 3;</code>
     * @return Whether the maxAspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasMaxAspectRatio() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional float max_aspect_ratio = 3;</code>
     * @return The maxAspectRatio.
     */
    @java.lang.Override
    public float getMaxAspectRatio() {
      return maxAspectRatio_;
    }

    public static final int MIN_AREA_FIELD_NUMBER = 4;
    private float minArea_;
    /**
     * <pre>
     * The area of the cropped image must be within the range of
     * [min_area, max_area].
     * </pre>
     *
     * <code>optional float min_area = 4;</code>
     * @return Whether the minArea field is set.
     */
    @java.lang.Override
    public boolean hasMinArea() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The area of the cropped image must be within the range of
     * [min_area, max_area].
     * </pre>
     *
     * <code>optional float min_area = 4;</code>
     * @return The minArea.
     */
    @java.lang.Override
    public float getMinArea() {
      return minArea_;
    }

    public static final int MAX_AREA_FIELD_NUMBER = 5;
    private float maxArea_;
    /**
     * <code>optional float max_area = 5;</code>
     * @return Whether the maxArea field is set.
     */
    @java.lang.Override
    public boolean hasMaxArea() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional float max_area = 5;</code>
     * @return The maxArea.
     */
    @java.lang.Override
    public float getMaxArea() {
      return maxArea_;
    }

    public static final int OVERLAP_THRESH_FIELD_NUMBER = 6;
    private float overlapThresh_;
    /**
     * <pre>
     * Cropped box area ratio must be above this threhold to be kept.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6;</code>
     * @return Whether the overlapThresh field is set.
     */
    @java.lang.Override
    public boolean hasOverlapThresh() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Cropped box area ratio must be above this threhold to be kept.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6;</code>
     * @return The overlapThresh.
     */
    @java.lang.Override
    public float getOverlapThresh() {
      return overlapThresh_;
    }

    public static final int CLIP_BOXES_FIELD_NUMBER = 8;
    private boolean clipBoxes_;
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 8 [default = true];</code>
     * @return Whether the clipBoxes field is set.
     */
    @java.lang.Override
    public boolean hasClipBoxes() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 8 [default = true];</code>
     * @return The clipBoxes.
     */
    @java.lang.Override
    public boolean getClipBoxes() {
      return clipBoxes_;
    }

    public static final int RANDOM_COEF_FIELD_NUMBER = 7;
    private float randomCoef_;
    /**
     * <pre>
     * Probability a crop operation is skipped.
     * </pre>
     *
     * <code>optional float random_coef = 7;</code>
     * @return Whether the randomCoef field is set.
     */
    @java.lang.Override
    public boolean hasRandomCoef() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Probability a crop operation is skipped.
     * </pre>
     *
     * <code>optional float random_coef = 7;</code>
     * @return The randomCoef.
     */
    @java.lang.Override
    public float getRandomCoef() {
      return randomCoef_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, minObjectCovered_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, minAspectRatio_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, maxAspectRatio_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(4, minArea_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeFloat(5, maxArea_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFloat(6, overlapThresh_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeFloat(7, randomCoef_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeBool(8, clipBoxes_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, minObjectCovered_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, minAspectRatio_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, maxAspectRatio_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, minArea_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, maxArea_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, overlapThresh_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, randomCoef_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, clipBoxes_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.SSDRandomCropOperation)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.SSDRandomCropOperation other = (object_detection.protos.Preprocessor.SSDRandomCropOperation) obj;

      if (hasMinObjectCovered() != other.hasMinObjectCovered()) return false;
      if (hasMinObjectCovered()) {
        if (java.lang.Float.floatToIntBits(getMinObjectCovered())
            != java.lang.Float.floatToIntBits(
                other.getMinObjectCovered())) return false;
      }
      if (hasMinAspectRatio() != other.hasMinAspectRatio()) return false;
      if (hasMinAspectRatio()) {
        if (java.lang.Float.floatToIntBits(getMinAspectRatio())
            != java.lang.Float.floatToIntBits(
                other.getMinAspectRatio())) return false;
      }
      if (hasMaxAspectRatio() != other.hasMaxAspectRatio()) return false;
      if (hasMaxAspectRatio()) {
        if (java.lang.Float.floatToIntBits(getMaxAspectRatio())
            != java.lang.Float.floatToIntBits(
                other.getMaxAspectRatio())) return false;
      }
      if (hasMinArea() != other.hasMinArea()) return false;
      if (hasMinArea()) {
        if (java.lang.Float.floatToIntBits(getMinArea())
            != java.lang.Float.floatToIntBits(
                other.getMinArea())) return false;
      }
      if (hasMaxArea() != other.hasMaxArea()) return false;
      if (hasMaxArea()) {
        if (java.lang.Float.floatToIntBits(getMaxArea())
            != java.lang.Float.floatToIntBits(
                other.getMaxArea())) return false;
      }
      if (hasOverlapThresh() != other.hasOverlapThresh()) return false;
      if (hasOverlapThresh()) {
        if (java.lang.Float.floatToIntBits(getOverlapThresh())
            != java.lang.Float.floatToIntBits(
                other.getOverlapThresh())) return false;
      }
      if (hasClipBoxes() != other.hasClipBoxes()) return false;
      if (hasClipBoxes()) {
        if (getClipBoxes()
            != other.getClipBoxes()) return false;
      }
      if (hasRandomCoef() != other.hasRandomCoef()) return false;
      if (hasRandomCoef()) {
        if (java.lang.Float.floatToIntBits(getRandomCoef())
            != java.lang.Float.floatToIntBits(
                other.getRandomCoef())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMinObjectCovered()) {
        hash = (37 * hash) + MIN_OBJECT_COVERED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinObjectCovered());
      }
      if (hasMinAspectRatio()) {
        hash = (37 * hash) + MIN_ASPECT_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinAspectRatio());
      }
      if (hasMaxAspectRatio()) {
        hash = (37 * hash) + MAX_ASPECT_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxAspectRatio());
      }
      if (hasMinArea()) {
        hash = (37 * hash) + MIN_AREA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinArea());
      }
      if (hasMaxArea()) {
        hash = (37 * hash) + MAX_AREA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxArea());
      }
      if (hasOverlapThresh()) {
        hash = (37 * hash) + OVERLAP_THRESH_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getOverlapThresh());
      }
      if (hasClipBoxes()) {
        hash = (37 * hash) + CLIP_BOXES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getClipBoxes());
      }
      if (hasRandomCoef()) {
        hash = (37 * hash) + RANDOM_COEF_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRandomCoef());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.SSDRandomCropOperation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropOperation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropOperation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropOperation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropOperation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropOperation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropOperation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropOperation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropOperation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropOperation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropOperation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropOperation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.SSDRandomCropOperation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code object_detection.protos.SSDRandomCropOperation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.SSDRandomCropOperation)
        object_detection.protos.Preprocessor.SSDRandomCropOperationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropOperation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropOperation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.SSDRandomCropOperation.class, object_detection.protos.Preprocessor.SSDRandomCropOperation.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.SSDRandomCropOperation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        minObjectCovered_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        minAspectRatio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxAspectRatio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        minArea_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxArea_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        overlapThresh_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        clipBoxes_ = true;
        bitField0_ = (bitField0_ & ~0x00000040);
        randomCoef_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropOperation_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropOperation getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.SSDRandomCropOperation.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropOperation build() {
        object_detection.protos.Preprocessor.SSDRandomCropOperation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropOperation buildPartial() {
        object_detection.protos.Preprocessor.SSDRandomCropOperation result = new object_detection.protos.Preprocessor.SSDRandomCropOperation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.minObjectCovered_ = minObjectCovered_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.minAspectRatio_ = minAspectRatio_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.maxAspectRatio_ = maxAspectRatio_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.minArea_ = minArea_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.maxArea_ = maxArea_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.overlapThresh_ = overlapThresh_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000040;
        }
        result.clipBoxes_ = clipBoxes_;
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.randomCoef_ = randomCoef_;
          to_bitField0_ |= 0x00000080;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.SSDRandomCropOperation) {
          return mergeFrom((object_detection.protos.Preprocessor.SSDRandomCropOperation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.SSDRandomCropOperation other) {
        if (other == object_detection.protos.Preprocessor.SSDRandomCropOperation.getDefaultInstance()) return this;
        if (other.hasMinObjectCovered()) {
          setMinObjectCovered(other.getMinObjectCovered());
        }
        if (other.hasMinAspectRatio()) {
          setMinAspectRatio(other.getMinAspectRatio());
        }
        if (other.hasMaxAspectRatio()) {
          setMaxAspectRatio(other.getMaxAspectRatio());
        }
        if (other.hasMinArea()) {
          setMinArea(other.getMinArea());
        }
        if (other.hasMaxArea()) {
          setMaxArea(other.getMaxArea());
        }
        if (other.hasOverlapThresh()) {
          setOverlapThresh(other.getOverlapThresh());
        }
        if (other.hasClipBoxes()) {
          setClipBoxes(other.getClipBoxes());
        }
        if (other.hasRandomCoef()) {
          setRandomCoef(other.getRandomCoef());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.SSDRandomCropOperation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.SSDRandomCropOperation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float minObjectCovered_ ;
      /**
       * <pre>
       * Cropped image must cover at least this fraction of one original bounding
       * box.
       * </pre>
       *
       * <code>optional float min_object_covered = 1;</code>
       * @return Whether the minObjectCovered field is set.
       */
      @java.lang.Override
      public boolean hasMinObjectCovered() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Cropped image must cover at least this fraction of one original bounding
       * box.
       * </pre>
       *
       * <code>optional float min_object_covered = 1;</code>
       * @return The minObjectCovered.
       */
      @java.lang.Override
      public float getMinObjectCovered() {
        return minObjectCovered_;
      }
      /**
       * <pre>
       * Cropped image must cover at least this fraction of one original bounding
       * box.
       * </pre>
       *
       * <code>optional float min_object_covered = 1;</code>
       * @param value The minObjectCovered to set.
       * @return This builder for chaining.
       */
      public Builder setMinObjectCovered(float value) {
        bitField0_ |= 0x00000001;
        minObjectCovered_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cropped image must cover at least this fraction of one original bounding
       * box.
       * </pre>
       *
       * <code>optional float min_object_covered = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinObjectCovered() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minObjectCovered_ = 0F;
        onChanged();
        return this;
      }

      private float minAspectRatio_ ;
      /**
       * <pre>
       * The aspect ratio of the cropped image must be within the range of
       * [min_aspect_ratio, max_aspect_ratio].
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2;</code>
       * @return Whether the minAspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasMinAspectRatio() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The aspect ratio of the cropped image must be within the range of
       * [min_aspect_ratio, max_aspect_ratio].
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2;</code>
       * @return The minAspectRatio.
       */
      @java.lang.Override
      public float getMinAspectRatio() {
        return minAspectRatio_;
      }
      /**
       * <pre>
       * The aspect ratio of the cropped image must be within the range of
       * [min_aspect_ratio, max_aspect_ratio].
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2;</code>
       * @param value The minAspectRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMinAspectRatio(float value) {
        bitField0_ |= 0x00000002;
        minAspectRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The aspect ratio of the cropped image must be within the range of
       * [min_aspect_ratio, max_aspect_ratio].
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinAspectRatio() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minAspectRatio_ = 0F;
        onChanged();
        return this;
      }

      private float maxAspectRatio_ ;
      /**
       * <code>optional float max_aspect_ratio = 3;</code>
       * @return Whether the maxAspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasMaxAspectRatio() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional float max_aspect_ratio = 3;</code>
       * @return The maxAspectRatio.
       */
      @java.lang.Override
      public float getMaxAspectRatio() {
        return maxAspectRatio_;
      }
      /**
       * <code>optional float max_aspect_ratio = 3;</code>
       * @param value The maxAspectRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMaxAspectRatio(float value) {
        bitField0_ |= 0x00000004;
        maxAspectRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_aspect_ratio = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxAspectRatio() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxAspectRatio_ = 0F;
        onChanged();
        return this;
      }

      private float minArea_ ;
      /**
       * <pre>
       * The area of the cropped image must be within the range of
       * [min_area, max_area].
       * </pre>
       *
       * <code>optional float min_area = 4;</code>
       * @return Whether the minArea field is set.
       */
      @java.lang.Override
      public boolean hasMinArea() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The area of the cropped image must be within the range of
       * [min_area, max_area].
       * </pre>
       *
       * <code>optional float min_area = 4;</code>
       * @return The minArea.
       */
      @java.lang.Override
      public float getMinArea() {
        return minArea_;
      }
      /**
       * <pre>
       * The area of the cropped image must be within the range of
       * [min_area, max_area].
       * </pre>
       *
       * <code>optional float min_area = 4;</code>
       * @param value The minArea to set.
       * @return This builder for chaining.
       */
      public Builder setMinArea(float value) {
        bitField0_ |= 0x00000008;
        minArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The area of the cropped image must be within the range of
       * [min_area, max_area].
       * </pre>
       *
       * <code>optional float min_area = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinArea() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minArea_ = 0F;
        onChanged();
        return this;
      }

      private float maxArea_ ;
      /**
       * <code>optional float max_area = 5;</code>
       * @return Whether the maxArea field is set.
       */
      @java.lang.Override
      public boolean hasMaxArea() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional float max_area = 5;</code>
       * @return The maxArea.
       */
      @java.lang.Override
      public float getMaxArea() {
        return maxArea_;
      }
      /**
       * <code>optional float max_area = 5;</code>
       * @param value The maxArea to set.
       * @return This builder for chaining.
       */
      public Builder setMaxArea(float value) {
        bitField0_ |= 0x00000010;
        maxArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_area = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxArea() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxArea_ = 0F;
        onChanged();
        return this;
      }

      private float overlapThresh_ ;
      /**
       * <pre>
       * Cropped box area ratio must be above this threhold to be kept.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6;</code>
       * @return Whether the overlapThresh field is set.
       */
      @java.lang.Override
      public boolean hasOverlapThresh() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Cropped box area ratio must be above this threhold to be kept.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6;</code>
       * @return The overlapThresh.
       */
      @java.lang.Override
      public float getOverlapThresh() {
        return overlapThresh_;
      }
      /**
       * <pre>
       * Cropped box area ratio must be above this threhold to be kept.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6;</code>
       * @param value The overlapThresh to set.
       * @return This builder for chaining.
       */
      public Builder setOverlapThresh(float value) {
        bitField0_ |= 0x00000020;
        overlapThresh_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cropped box area ratio must be above this threhold to be kept.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearOverlapThresh() {
        bitField0_ = (bitField0_ & ~0x00000020);
        overlapThresh_ = 0F;
        onChanged();
        return this;
      }

      private boolean clipBoxes_ = true;
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 8 [default = true];</code>
       * @return Whether the clipBoxes field is set.
       */
      @java.lang.Override
      public boolean hasClipBoxes() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 8 [default = true];</code>
       * @return The clipBoxes.
       */
      @java.lang.Override
      public boolean getClipBoxes() {
        return clipBoxes_;
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 8 [default = true];</code>
       * @param value The clipBoxes to set.
       * @return This builder for chaining.
       */
      public Builder setClipBoxes(boolean value) {
        bitField0_ |= 0x00000040;
        clipBoxes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 8 [default = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearClipBoxes() {
        bitField0_ = (bitField0_ & ~0x00000040);
        clipBoxes_ = true;
        onChanged();
        return this;
      }

      private float randomCoef_ ;
      /**
       * <pre>
       * Probability a crop operation is skipped.
       * </pre>
       *
       * <code>optional float random_coef = 7;</code>
       * @return Whether the randomCoef field is set.
       */
      @java.lang.Override
      public boolean hasRandomCoef() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Probability a crop operation is skipped.
       * </pre>
       *
       * <code>optional float random_coef = 7;</code>
       * @return The randomCoef.
       */
      @java.lang.Override
      public float getRandomCoef() {
        return randomCoef_;
      }
      /**
       * <pre>
       * Probability a crop operation is skipped.
       * </pre>
       *
       * <code>optional float random_coef = 7;</code>
       * @param value The randomCoef to set.
       * @return This builder for chaining.
       */
      public Builder setRandomCoef(float value) {
        bitField0_ |= 0x00000080;
        randomCoef_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Probability a crop operation is skipped.
       * </pre>
       *
       * <code>optional float random_coef = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRandomCoef() {
        bitField0_ = (bitField0_ & ~0x00000080);
        randomCoef_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.SSDRandomCropOperation)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.SSDRandomCropOperation)
    private static final object_detection.protos.Preprocessor.SSDRandomCropOperation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.SSDRandomCropOperation();
    }

    public static object_detection.protos.Preprocessor.SSDRandomCropOperation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSDRandomCropOperation>
        PARSER = new com.google.protobuf.AbstractParser<SSDRandomCropOperation>() {
      @java.lang.Override
      public SSDRandomCropOperation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSDRandomCropOperation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSDRandomCropOperation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSDRandomCropOperation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropOperation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSDRandomCropOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.SSDRandomCrop)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
     */
    java.util.List<object_detection.protos.Preprocessor.SSDRandomCropOperation>
        getOperationsList();
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
     */
    object_detection.protos.Preprocessor.SSDRandomCropOperation getOperations(int index);
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
     */
    int getOperationsCount();
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
     */
    java.util.List<? extends object_detection.protos.Preprocessor.SSDRandomCropOperationOrBuilder>
        getOperationsOrBuilderList();
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
     */
    object_detection.protos.Preprocessor.SSDRandomCropOperationOrBuilder getOperationsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Randomly crops a image according to:
   *     Liu et al., SSD: Single shot multibox detector.
   * This preprocessing step defines multiple SSDRandomCropOperations. Only one
   * operation (chosen at random) is actually performed on an image.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.SSDRandomCrop}
   */
  public static final class SSDRandomCrop extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.SSDRandomCrop)
      SSDRandomCropOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SSDRandomCrop.newBuilder() to construct.
    private SSDRandomCrop(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSDRandomCrop() {
      operations_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SSDRandomCrop();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSDRandomCrop(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                operations_ = new java.util.ArrayList<object_detection.protos.Preprocessor.SSDRandomCropOperation>();
                mutable_bitField0_ |= 0x00000001;
              }
              operations_.add(
                  input.readMessage(object_detection.protos.Preprocessor.SSDRandomCropOperation.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          operations_ = java.util.Collections.unmodifiableList(operations_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCrop_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCrop_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.SSDRandomCrop.class, object_detection.protos.Preprocessor.SSDRandomCrop.Builder.class);
    }

    public static final int OPERATIONS_FIELD_NUMBER = 1;
    private java.util.List<object_detection.protos.Preprocessor.SSDRandomCropOperation> operations_;
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
     */
    @java.lang.Override
    public java.util.List<object_detection.protos.Preprocessor.SSDRandomCropOperation> getOperationsList() {
      return operations_;
    }
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends object_detection.protos.Preprocessor.SSDRandomCropOperationOrBuilder>
        getOperationsOrBuilderList() {
      return operations_;
    }
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
     */
    @java.lang.Override
    public int getOperationsCount() {
      return operations_.size();
    }
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropOperation getOperations(int index) {
      return operations_.get(index);
    }
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropOperationOrBuilder getOperationsOrBuilder(
        int index) {
      return operations_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < operations_.size(); i++) {
        output.writeMessage(1, operations_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < operations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, operations_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.SSDRandomCrop)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.SSDRandomCrop other = (object_detection.protos.Preprocessor.SSDRandomCrop) obj;

      if (!getOperationsList()
          .equals(other.getOperationsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOperationsCount() > 0) {
        hash = (37 * hash) + OPERATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOperationsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.SSDRandomCrop parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCrop parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCrop parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCrop parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCrop parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCrop parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCrop parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCrop parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCrop parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCrop parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCrop parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCrop parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.SSDRandomCrop prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly crops a image according to:
     *     Liu et al., SSD: Single shot multibox detector.
     * This preprocessing step defines multiple SSDRandomCropOperations. Only one
     * operation (chosen at random) is actually performed on an image.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.SSDRandomCrop}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.SSDRandomCrop)
        object_detection.protos.Preprocessor.SSDRandomCropOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCrop_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCrop_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.SSDRandomCrop.class, object_detection.protos.Preprocessor.SSDRandomCrop.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.SSDRandomCrop.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOperationsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (operationsBuilder_ == null) {
          operations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          operationsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCrop_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCrop getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.SSDRandomCrop.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCrop build() {
        object_detection.protos.Preprocessor.SSDRandomCrop result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCrop buildPartial() {
        object_detection.protos.Preprocessor.SSDRandomCrop result = new object_detection.protos.Preprocessor.SSDRandomCrop(this);
        int from_bitField0_ = bitField0_;
        if (operationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            operations_ = java.util.Collections.unmodifiableList(operations_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.operations_ = operations_;
        } else {
          result.operations_ = operationsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.SSDRandomCrop) {
          return mergeFrom((object_detection.protos.Preprocessor.SSDRandomCrop)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.SSDRandomCrop other) {
        if (other == object_detection.protos.Preprocessor.SSDRandomCrop.getDefaultInstance()) return this;
        if (operationsBuilder_ == null) {
          if (!other.operations_.isEmpty()) {
            if (operations_.isEmpty()) {
              operations_ = other.operations_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOperationsIsMutable();
              operations_.addAll(other.operations_);
            }
            onChanged();
          }
        } else {
          if (!other.operations_.isEmpty()) {
            if (operationsBuilder_.isEmpty()) {
              operationsBuilder_.dispose();
              operationsBuilder_ = null;
              operations_ = other.operations_;
              bitField0_ = (bitField0_ & ~0x00000001);
              operationsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOperationsFieldBuilder() : null;
            } else {
              operationsBuilder_.addAllMessages(other.operations_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.SSDRandomCrop parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.SSDRandomCrop) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<object_detection.protos.Preprocessor.SSDRandomCropOperation> operations_ =
        java.util.Collections.emptyList();
      private void ensureOperationsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          operations_ = new java.util.ArrayList<object_detection.protos.Preprocessor.SSDRandomCropOperation>(operations_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          object_detection.protos.Preprocessor.SSDRandomCropOperation, object_detection.protos.Preprocessor.SSDRandomCropOperation.Builder, object_detection.protos.Preprocessor.SSDRandomCropOperationOrBuilder> operationsBuilder_;

      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public java.util.List<object_detection.protos.Preprocessor.SSDRandomCropOperation> getOperationsList() {
        if (operationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(operations_);
        } else {
          return operationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public int getOperationsCount() {
        if (operationsBuilder_ == null) {
          return operations_.size();
        } else {
          return operationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropOperation getOperations(int index) {
        if (operationsBuilder_ == null) {
          return operations_.get(index);
        } else {
          return operationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public Builder setOperations(
          int index, object_detection.protos.Preprocessor.SSDRandomCropOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.set(index, value);
          onChanged();
        } else {
          operationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public Builder setOperations(
          int index, object_detection.protos.Preprocessor.SSDRandomCropOperation.Builder builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.set(index, builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public Builder addOperations(object_detection.protos.Preprocessor.SSDRandomCropOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.add(value);
          onChanged();
        } else {
          operationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public Builder addOperations(
          int index, object_detection.protos.Preprocessor.SSDRandomCropOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.add(index, value);
          onChanged();
        } else {
          operationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public Builder addOperations(
          object_detection.protos.Preprocessor.SSDRandomCropOperation.Builder builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.add(builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public Builder addOperations(
          int index, object_detection.protos.Preprocessor.SSDRandomCropOperation.Builder builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.add(index, builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public Builder addAllOperations(
          java.lang.Iterable<? extends object_detection.protos.Preprocessor.SSDRandomCropOperation> values) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, operations_);
          onChanged();
        } else {
          operationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public Builder clearOperations() {
        if (operationsBuilder_ == null) {
          operations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          operationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public Builder removeOperations(int index) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.remove(index);
          onChanged();
        } else {
          operationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropOperation.Builder getOperationsBuilder(
          int index) {
        return getOperationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropOperationOrBuilder getOperationsOrBuilder(
          int index) {
        if (operationsBuilder_ == null) {
          return operations_.get(index);  } else {
          return operationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public java.util.List<? extends object_detection.protos.Preprocessor.SSDRandomCropOperationOrBuilder>
           getOperationsOrBuilderList() {
        if (operationsBuilder_ != null) {
          return operationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(operations_);
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropOperation.Builder addOperationsBuilder() {
        return getOperationsFieldBuilder().addBuilder(
            object_detection.protos.Preprocessor.SSDRandomCropOperation.getDefaultInstance());
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropOperation.Builder addOperationsBuilder(
          int index) {
        return getOperationsFieldBuilder().addBuilder(
            index, object_detection.protos.Preprocessor.SSDRandomCropOperation.getDefaultInstance());
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropOperation operations = 1;</code>
       */
      public java.util.List<object_detection.protos.Preprocessor.SSDRandomCropOperation.Builder>
           getOperationsBuilderList() {
        return getOperationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          object_detection.protos.Preprocessor.SSDRandomCropOperation, object_detection.protos.Preprocessor.SSDRandomCropOperation.Builder, object_detection.protos.Preprocessor.SSDRandomCropOperationOrBuilder>
          getOperationsFieldBuilder() {
        if (operationsBuilder_ == null) {
          operationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              object_detection.protos.Preprocessor.SSDRandomCropOperation, object_detection.protos.Preprocessor.SSDRandomCropOperation.Builder, object_detection.protos.Preprocessor.SSDRandomCropOperationOrBuilder>(
                  operations_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          operations_ = null;
        }
        return operationsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.SSDRandomCrop)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.SSDRandomCrop)
    private static final object_detection.protos.Preprocessor.SSDRandomCrop DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.SSDRandomCrop();
    }

    public static object_detection.protos.Preprocessor.SSDRandomCrop getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSDRandomCrop>
        PARSER = new com.google.protobuf.AbstractParser<SSDRandomCrop>() {
      @java.lang.Override
      public SSDRandomCrop parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSDRandomCrop(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSDRandomCrop> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSDRandomCrop> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCrop getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSDRandomCropPadOperationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.SSDRandomCropPadOperation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Cropped image must cover at least this fraction of one original bounding
     * box.
     * </pre>
     *
     * <code>optional float min_object_covered = 1;</code>
     * @return Whether the minObjectCovered field is set.
     */
    boolean hasMinObjectCovered();
    /**
     * <pre>
     * Cropped image must cover at least this fraction of one original bounding
     * box.
     * </pre>
     *
     * <code>optional float min_object_covered = 1;</code>
     * @return The minObjectCovered.
     */
    float getMinObjectCovered();

    /**
     * <pre>
     * The aspect ratio of the cropped image must be within the range of
     * [min_aspect_ratio, max_aspect_ratio].
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2;</code>
     * @return Whether the minAspectRatio field is set.
     */
    boolean hasMinAspectRatio();
    /**
     * <pre>
     * The aspect ratio of the cropped image must be within the range of
     * [min_aspect_ratio, max_aspect_ratio].
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2;</code>
     * @return The minAspectRatio.
     */
    float getMinAspectRatio();

    /**
     * <code>optional float max_aspect_ratio = 3;</code>
     * @return Whether the maxAspectRatio field is set.
     */
    boolean hasMaxAspectRatio();
    /**
     * <code>optional float max_aspect_ratio = 3;</code>
     * @return The maxAspectRatio.
     */
    float getMaxAspectRatio();

    /**
     * <pre>
     * The area of the cropped image must be within the range of
     * [min_area, max_area].
     * </pre>
     *
     * <code>optional float min_area = 4;</code>
     * @return Whether the minArea field is set.
     */
    boolean hasMinArea();
    /**
     * <pre>
     * The area of the cropped image must be within the range of
     * [min_area, max_area].
     * </pre>
     *
     * <code>optional float min_area = 4;</code>
     * @return The minArea.
     */
    float getMinArea();

    /**
     * <code>optional float max_area = 5;</code>
     * @return Whether the maxArea field is set.
     */
    boolean hasMaxArea();
    /**
     * <code>optional float max_area = 5;</code>
     * @return The maxArea.
     */
    float getMaxArea();

    /**
     * <pre>
     * Cropped box area ratio must be above this threhold to be kept.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6;</code>
     * @return Whether the overlapThresh field is set.
     */
    boolean hasOverlapThresh();
    /**
     * <pre>
     * Cropped box area ratio must be above this threhold to be kept.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6;</code>
     * @return The overlapThresh.
     */
    float getOverlapThresh();

    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 13 [default = true];</code>
     * @return Whether the clipBoxes field is set.
     */
    boolean hasClipBoxes();
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 13 [default = true];</code>
     * @return The clipBoxes.
     */
    boolean getClipBoxes();

    /**
     * <pre>
     * Probability a crop operation is skipped.
     * </pre>
     *
     * <code>optional float random_coef = 7;</code>
     * @return Whether the randomCoef field is set.
     */
    boolean hasRandomCoef();
    /**
     * <pre>
     * Probability a crop operation is skipped.
     * </pre>
     *
     * <code>optional float random_coef = 7;</code>
     * @return The randomCoef.
     */
    float getRandomCoef();

    /**
     * <pre>
     * Min ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 8;</code>
     * @return A list containing the minPaddedSizeRatio.
     */
    java.util.List<java.lang.Float> getMinPaddedSizeRatioList();
    /**
     * <pre>
     * Min ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 8;</code>
     * @return The count of minPaddedSizeRatio.
     */
    int getMinPaddedSizeRatioCount();
    /**
     * <pre>
     * Min ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 8;</code>
     * @param index The index of the element to return.
     * @return The minPaddedSizeRatio at the given index.
     */
    float getMinPaddedSizeRatio(int index);

    /**
     * <pre>
     * Max ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float max_padded_size_ratio = 9;</code>
     * @return A list containing the maxPaddedSizeRatio.
     */
    java.util.List<java.lang.Float> getMaxPaddedSizeRatioList();
    /**
     * <pre>
     * Max ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float max_padded_size_ratio = 9;</code>
     * @return The count of maxPaddedSizeRatio.
     */
    int getMaxPaddedSizeRatioCount();
    /**
     * <pre>
     * Max ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float max_padded_size_ratio = 9;</code>
     * @param index The index of the element to return.
     * @return The maxPaddedSizeRatio at the given index.
     */
    float getMaxPaddedSizeRatio(int index);

    /**
     * <pre>
     * Padding color.
     * </pre>
     *
     * <code>optional float pad_color_r = 10;</code>
     * @return Whether the padColorR field is set.
     */
    boolean hasPadColorR();
    /**
     * <pre>
     * Padding color.
     * </pre>
     *
     * <code>optional float pad_color_r = 10;</code>
     * @return The padColorR.
     */
    float getPadColorR();

    /**
     * <code>optional float pad_color_g = 11;</code>
     * @return Whether the padColorG field is set.
     */
    boolean hasPadColorG();
    /**
     * <code>optional float pad_color_g = 11;</code>
     * @return The padColorG.
     */
    float getPadColorG();

    /**
     * <code>optional float pad_color_b = 12;</code>
     * @return Whether the padColorB field is set.
     */
    boolean hasPadColorB();
    /**
     * <code>optional float pad_color_b = 12;</code>
     * @return The padColorB.
     */
    float getPadColorB();
  }
  /**
   * Protobuf type {@code object_detection.protos.SSDRandomCropPadOperation}
   */
  public static final class SSDRandomCropPadOperation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.SSDRandomCropPadOperation)
      SSDRandomCropPadOperationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SSDRandomCropPadOperation.newBuilder() to construct.
    private SSDRandomCropPadOperation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSDRandomCropPadOperation() {
      clipBoxes_ = true;
      minPaddedSizeRatio_ = emptyFloatList();
      maxPaddedSizeRatio_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SSDRandomCropPadOperation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSDRandomCropPadOperation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              minObjectCovered_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              minAspectRatio_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              maxAspectRatio_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              minArea_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              maxArea_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              overlapThresh_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000080;
              randomCoef_ = input.readFloat();
              break;
            }
            case 69: {
              if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                minPaddedSizeRatio_ = newFloatList();
                mutable_bitField0_ |= 0x00000100;
              }
              minPaddedSizeRatio_.addFloat(input.readFloat());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) != 0) && input.getBytesUntilLimit() > 0) {
                minPaddedSizeRatio_ = newFloatList();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                minPaddedSizeRatio_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 77: {
              if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                maxPaddedSizeRatio_ = newFloatList();
                mutable_bitField0_ |= 0x00000200;
              }
              maxPaddedSizeRatio_.addFloat(input.readFloat());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) != 0) && input.getBytesUntilLimit() > 0) {
                maxPaddedSizeRatio_ = newFloatList();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                maxPaddedSizeRatio_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 85: {
              bitField0_ |= 0x00000100;
              padColorR_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000200;
              padColorG_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000400;
              padColorB_ = input.readFloat();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000040;
              clipBoxes_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) != 0)) {
          minPaddedSizeRatio_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000200) != 0)) {
          maxPaddedSizeRatio_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPadOperation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPadOperation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.SSDRandomCropPadOperation.class, object_detection.protos.Preprocessor.SSDRandomCropPadOperation.Builder.class);
    }

    private int bitField0_;
    public static final int MIN_OBJECT_COVERED_FIELD_NUMBER = 1;
    private float minObjectCovered_;
    /**
     * <pre>
     * Cropped image must cover at least this fraction of one original bounding
     * box.
     * </pre>
     *
     * <code>optional float min_object_covered = 1;</code>
     * @return Whether the minObjectCovered field is set.
     */
    @java.lang.Override
    public boolean hasMinObjectCovered() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Cropped image must cover at least this fraction of one original bounding
     * box.
     * </pre>
     *
     * <code>optional float min_object_covered = 1;</code>
     * @return The minObjectCovered.
     */
    @java.lang.Override
    public float getMinObjectCovered() {
      return minObjectCovered_;
    }

    public static final int MIN_ASPECT_RATIO_FIELD_NUMBER = 2;
    private float minAspectRatio_;
    /**
     * <pre>
     * The aspect ratio of the cropped image must be within the range of
     * [min_aspect_ratio, max_aspect_ratio].
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2;</code>
     * @return Whether the minAspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasMinAspectRatio() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The aspect ratio of the cropped image must be within the range of
     * [min_aspect_ratio, max_aspect_ratio].
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2;</code>
     * @return The minAspectRatio.
     */
    @java.lang.Override
    public float getMinAspectRatio() {
      return minAspectRatio_;
    }

    public static final int MAX_ASPECT_RATIO_FIELD_NUMBER = 3;
    private float maxAspectRatio_;
    /**
     * <code>optional float max_aspect_ratio = 3;</code>
     * @return Whether the maxAspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasMaxAspectRatio() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional float max_aspect_ratio = 3;</code>
     * @return The maxAspectRatio.
     */
    @java.lang.Override
    public float getMaxAspectRatio() {
      return maxAspectRatio_;
    }

    public static final int MIN_AREA_FIELD_NUMBER = 4;
    private float minArea_;
    /**
     * <pre>
     * The area of the cropped image must be within the range of
     * [min_area, max_area].
     * </pre>
     *
     * <code>optional float min_area = 4;</code>
     * @return Whether the minArea field is set.
     */
    @java.lang.Override
    public boolean hasMinArea() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The area of the cropped image must be within the range of
     * [min_area, max_area].
     * </pre>
     *
     * <code>optional float min_area = 4;</code>
     * @return The minArea.
     */
    @java.lang.Override
    public float getMinArea() {
      return minArea_;
    }

    public static final int MAX_AREA_FIELD_NUMBER = 5;
    private float maxArea_;
    /**
     * <code>optional float max_area = 5;</code>
     * @return Whether the maxArea field is set.
     */
    @java.lang.Override
    public boolean hasMaxArea() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional float max_area = 5;</code>
     * @return The maxArea.
     */
    @java.lang.Override
    public float getMaxArea() {
      return maxArea_;
    }

    public static final int OVERLAP_THRESH_FIELD_NUMBER = 6;
    private float overlapThresh_;
    /**
     * <pre>
     * Cropped box area ratio must be above this threhold to be kept.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6;</code>
     * @return Whether the overlapThresh field is set.
     */
    @java.lang.Override
    public boolean hasOverlapThresh() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Cropped box area ratio must be above this threhold to be kept.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6;</code>
     * @return The overlapThresh.
     */
    @java.lang.Override
    public float getOverlapThresh() {
      return overlapThresh_;
    }

    public static final int CLIP_BOXES_FIELD_NUMBER = 13;
    private boolean clipBoxes_;
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 13 [default = true];</code>
     * @return Whether the clipBoxes field is set.
     */
    @java.lang.Override
    public boolean hasClipBoxes() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 13 [default = true];</code>
     * @return The clipBoxes.
     */
    @java.lang.Override
    public boolean getClipBoxes() {
      return clipBoxes_;
    }

    public static final int RANDOM_COEF_FIELD_NUMBER = 7;
    private float randomCoef_;
    /**
     * <pre>
     * Probability a crop operation is skipped.
     * </pre>
     *
     * <code>optional float random_coef = 7;</code>
     * @return Whether the randomCoef field is set.
     */
    @java.lang.Override
    public boolean hasRandomCoef() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Probability a crop operation is skipped.
     * </pre>
     *
     * <code>optional float random_coef = 7;</code>
     * @return The randomCoef.
     */
    @java.lang.Override
    public float getRandomCoef() {
      return randomCoef_;
    }

    public static final int MIN_PADDED_SIZE_RATIO_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.FloatList minPaddedSizeRatio_;
    /**
     * <pre>
     * Min ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 8;</code>
     * @return A list containing the minPaddedSizeRatio.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getMinPaddedSizeRatioList() {
      return minPaddedSizeRatio_;
    }
    /**
     * <pre>
     * Min ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 8;</code>
     * @return The count of minPaddedSizeRatio.
     */
    public int getMinPaddedSizeRatioCount() {
      return minPaddedSizeRatio_.size();
    }
    /**
     * <pre>
     * Min ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 8;</code>
     * @param index The index of the element to return.
     * @return The minPaddedSizeRatio at the given index.
     */
    public float getMinPaddedSizeRatio(int index) {
      return minPaddedSizeRatio_.getFloat(index);
    }

    public static final int MAX_PADDED_SIZE_RATIO_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.FloatList maxPaddedSizeRatio_;
    /**
     * <pre>
     * Max ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float max_padded_size_ratio = 9;</code>
     * @return A list containing the maxPaddedSizeRatio.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getMaxPaddedSizeRatioList() {
      return maxPaddedSizeRatio_;
    }
    /**
     * <pre>
     * Max ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float max_padded_size_ratio = 9;</code>
     * @return The count of maxPaddedSizeRatio.
     */
    public int getMaxPaddedSizeRatioCount() {
      return maxPaddedSizeRatio_.size();
    }
    /**
     * <pre>
     * Max ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float max_padded_size_ratio = 9;</code>
     * @param index The index of the element to return.
     * @return The maxPaddedSizeRatio at the given index.
     */
    public float getMaxPaddedSizeRatio(int index) {
      return maxPaddedSizeRatio_.getFloat(index);
    }

    public static final int PAD_COLOR_R_FIELD_NUMBER = 10;
    private float padColorR_;
    /**
     * <pre>
     * Padding color.
     * </pre>
     *
     * <code>optional float pad_color_r = 10;</code>
     * @return Whether the padColorR field is set.
     */
    @java.lang.Override
    public boolean hasPadColorR() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Padding color.
     * </pre>
     *
     * <code>optional float pad_color_r = 10;</code>
     * @return The padColorR.
     */
    @java.lang.Override
    public float getPadColorR() {
      return padColorR_;
    }

    public static final int PAD_COLOR_G_FIELD_NUMBER = 11;
    private float padColorG_;
    /**
     * <code>optional float pad_color_g = 11;</code>
     * @return Whether the padColorG field is set.
     */
    @java.lang.Override
    public boolean hasPadColorG() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional float pad_color_g = 11;</code>
     * @return The padColorG.
     */
    @java.lang.Override
    public float getPadColorG() {
      return padColorG_;
    }

    public static final int PAD_COLOR_B_FIELD_NUMBER = 12;
    private float padColorB_;
    /**
     * <code>optional float pad_color_b = 12;</code>
     * @return Whether the padColorB field is set.
     */
    @java.lang.Override
    public boolean hasPadColorB() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional float pad_color_b = 12;</code>
     * @return The padColorB.
     */
    @java.lang.Override
    public float getPadColorB() {
      return padColorB_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, minObjectCovered_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, minAspectRatio_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, maxAspectRatio_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(4, minArea_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeFloat(5, maxArea_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFloat(6, overlapThresh_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeFloat(7, randomCoef_);
      }
      for (int i = 0; i < minPaddedSizeRatio_.size(); i++) {
        output.writeFloat(8, minPaddedSizeRatio_.getFloat(i));
      }
      for (int i = 0; i < maxPaddedSizeRatio_.size(); i++) {
        output.writeFloat(9, maxPaddedSizeRatio_.getFloat(i));
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeFloat(10, padColorR_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeFloat(11, padColorG_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeFloat(12, padColorB_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeBool(13, clipBoxes_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, minObjectCovered_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, minAspectRatio_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, maxAspectRatio_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, minArea_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, maxArea_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, overlapThresh_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, randomCoef_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getMinPaddedSizeRatioList().size();
        size += dataSize;
        size += 1 * getMinPaddedSizeRatioList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getMaxPaddedSizeRatioList().size();
        size += dataSize;
        size += 1 * getMaxPaddedSizeRatioList().size();
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, padColorR_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, padColorG_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, padColorB_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, clipBoxes_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.SSDRandomCropPadOperation)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.SSDRandomCropPadOperation other = (object_detection.protos.Preprocessor.SSDRandomCropPadOperation) obj;

      if (hasMinObjectCovered() != other.hasMinObjectCovered()) return false;
      if (hasMinObjectCovered()) {
        if (java.lang.Float.floatToIntBits(getMinObjectCovered())
            != java.lang.Float.floatToIntBits(
                other.getMinObjectCovered())) return false;
      }
      if (hasMinAspectRatio() != other.hasMinAspectRatio()) return false;
      if (hasMinAspectRatio()) {
        if (java.lang.Float.floatToIntBits(getMinAspectRatio())
            != java.lang.Float.floatToIntBits(
                other.getMinAspectRatio())) return false;
      }
      if (hasMaxAspectRatio() != other.hasMaxAspectRatio()) return false;
      if (hasMaxAspectRatio()) {
        if (java.lang.Float.floatToIntBits(getMaxAspectRatio())
            != java.lang.Float.floatToIntBits(
                other.getMaxAspectRatio())) return false;
      }
      if (hasMinArea() != other.hasMinArea()) return false;
      if (hasMinArea()) {
        if (java.lang.Float.floatToIntBits(getMinArea())
            != java.lang.Float.floatToIntBits(
                other.getMinArea())) return false;
      }
      if (hasMaxArea() != other.hasMaxArea()) return false;
      if (hasMaxArea()) {
        if (java.lang.Float.floatToIntBits(getMaxArea())
            != java.lang.Float.floatToIntBits(
                other.getMaxArea())) return false;
      }
      if (hasOverlapThresh() != other.hasOverlapThresh()) return false;
      if (hasOverlapThresh()) {
        if (java.lang.Float.floatToIntBits(getOverlapThresh())
            != java.lang.Float.floatToIntBits(
                other.getOverlapThresh())) return false;
      }
      if (hasClipBoxes() != other.hasClipBoxes()) return false;
      if (hasClipBoxes()) {
        if (getClipBoxes()
            != other.getClipBoxes()) return false;
      }
      if (hasRandomCoef() != other.hasRandomCoef()) return false;
      if (hasRandomCoef()) {
        if (java.lang.Float.floatToIntBits(getRandomCoef())
            != java.lang.Float.floatToIntBits(
                other.getRandomCoef())) return false;
      }
      if (!getMinPaddedSizeRatioList()
          .equals(other.getMinPaddedSizeRatioList())) return false;
      if (!getMaxPaddedSizeRatioList()
          .equals(other.getMaxPaddedSizeRatioList())) return false;
      if (hasPadColorR() != other.hasPadColorR()) return false;
      if (hasPadColorR()) {
        if (java.lang.Float.floatToIntBits(getPadColorR())
            != java.lang.Float.floatToIntBits(
                other.getPadColorR())) return false;
      }
      if (hasPadColorG() != other.hasPadColorG()) return false;
      if (hasPadColorG()) {
        if (java.lang.Float.floatToIntBits(getPadColorG())
            != java.lang.Float.floatToIntBits(
                other.getPadColorG())) return false;
      }
      if (hasPadColorB() != other.hasPadColorB()) return false;
      if (hasPadColorB()) {
        if (java.lang.Float.floatToIntBits(getPadColorB())
            != java.lang.Float.floatToIntBits(
                other.getPadColorB())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMinObjectCovered()) {
        hash = (37 * hash) + MIN_OBJECT_COVERED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinObjectCovered());
      }
      if (hasMinAspectRatio()) {
        hash = (37 * hash) + MIN_ASPECT_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinAspectRatio());
      }
      if (hasMaxAspectRatio()) {
        hash = (37 * hash) + MAX_ASPECT_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxAspectRatio());
      }
      if (hasMinArea()) {
        hash = (37 * hash) + MIN_AREA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinArea());
      }
      if (hasMaxArea()) {
        hash = (37 * hash) + MAX_AREA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxArea());
      }
      if (hasOverlapThresh()) {
        hash = (37 * hash) + OVERLAP_THRESH_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getOverlapThresh());
      }
      if (hasClipBoxes()) {
        hash = (37 * hash) + CLIP_BOXES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getClipBoxes());
      }
      if (hasRandomCoef()) {
        hash = (37 * hash) + RANDOM_COEF_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRandomCoef());
      }
      if (getMinPaddedSizeRatioCount() > 0) {
        hash = (37 * hash) + MIN_PADDED_SIZE_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + getMinPaddedSizeRatioList().hashCode();
      }
      if (getMaxPaddedSizeRatioCount() > 0) {
        hash = (37 * hash) + MAX_PADDED_SIZE_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + getMaxPaddedSizeRatioList().hashCode();
      }
      if (hasPadColorR()) {
        hash = (37 * hash) + PAD_COLOR_R_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getPadColorR());
      }
      if (hasPadColorG()) {
        hash = (37 * hash) + PAD_COLOR_G_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getPadColorG());
      }
      if (hasPadColorB()) {
        hash = (37 * hash) + PAD_COLOR_B_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getPadColorB());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.SSDRandomCropPadOperation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadOperation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadOperation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadOperation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadOperation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadOperation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadOperation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadOperation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadOperation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadOperation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadOperation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadOperation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.SSDRandomCropPadOperation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code object_detection.protos.SSDRandomCropPadOperation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.SSDRandomCropPadOperation)
        object_detection.protos.Preprocessor.SSDRandomCropPadOperationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPadOperation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPadOperation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.SSDRandomCropPadOperation.class, object_detection.protos.Preprocessor.SSDRandomCropPadOperation.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.SSDRandomCropPadOperation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        minObjectCovered_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        minAspectRatio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxAspectRatio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        minArea_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxArea_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        overlapThresh_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        clipBoxes_ = true;
        bitField0_ = (bitField0_ & ~0x00000040);
        randomCoef_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        minPaddedSizeRatio_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000100);
        maxPaddedSizeRatio_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000200);
        padColorR_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        padColorG_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        padColorB_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPadOperation_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropPadOperation getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.SSDRandomCropPadOperation.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropPadOperation build() {
        object_detection.protos.Preprocessor.SSDRandomCropPadOperation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropPadOperation buildPartial() {
        object_detection.protos.Preprocessor.SSDRandomCropPadOperation result = new object_detection.protos.Preprocessor.SSDRandomCropPadOperation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.minObjectCovered_ = minObjectCovered_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.minAspectRatio_ = minAspectRatio_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.maxAspectRatio_ = maxAspectRatio_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.minArea_ = minArea_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.maxArea_ = maxArea_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.overlapThresh_ = overlapThresh_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000040;
        }
        result.clipBoxes_ = clipBoxes_;
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.randomCoef_ = randomCoef_;
          to_bitField0_ |= 0x00000080;
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          minPaddedSizeRatio_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.minPaddedSizeRatio_ = minPaddedSizeRatio_;
        if (((bitField0_ & 0x00000200) != 0)) {
          maxPaddedSizeRatio_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.maxPaddedSizeRatio_ = maxPaddedSizeRatio_;
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.padColorR_ = padColorR_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.padColorG_ = padColorG_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.padColorB_ = padColorB_;
          to_bitField0_ |= 0x00000400;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.SSDRandomCropPadOperation) {
          return mergeFrom((object_detection.protos.Preprocessor.SSDRandomCropPadOperation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.SSDRandomCropPadOperation other) {
        if (other == object_detection.protos.Preprocessor.SSDRandomCropPadOperation.getDefaultInstance()) return this;
        if (other.hasMinObjectCovered()) {
          setMinObjectCovered(other.getMinObjectCovered());
        }
        if (other.hasMinAspectRatio()) {
          setMinAspectRatio(other.getMinAspectRatio());
        }
        if (other.hasMaxAspectRatio()) {
          setMaxAspectRatio(other.getMaxAspectRatio());
        }
        if (other.hasMinArea()) {
          setMinArea(other.getMinArea());
        }
        if (other.hasMaxArea()) {
          setMaxArea(other.getMaxArea());
        }
        if (other.hasOverlapThresh()) {
          setOverlapThresh(other.getOverlapThresh());
        }
        if (other.hasClipBoxes()) {
          setClipBoxes(other.getClipBoxes());
        }
        if (other.hasRandomCoef()) {
          setRandomCoef(other.getRandomCoef());
        }
        if (!other.minPaddedSizeRatio_.isEmpty()) {
          if (minPaddedSizeRatio_.isEmpty()) {
            minPaddedSizeRatio_ = other.minPaddedSizeRatio_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureMinPaddedSizeRatioIsMutable();
            minPaddedSizeRatio_.addAll(other.minPaddedSizeRatio_);
          }
          onChanged();
        }
        if (!other.maxPaddedSizeRatio_.isEmpty()) {
          if (maxPaddedSizeRatio_.isEmpty()) {
            maxPaddedSizeRatio_ = other.maxPaddedSizeRatio_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureMaxPaddedSizeRatioIsMutable();
            maxPaddedSizeRatio_.addAll(other.maxPaddedSizeRatio_);
          }
          onChanged();
        }
        if (other.hasPadColorR()) {
          setPadColorR(other.getPadColorR());
        }
        if (other.hasPadColorG()) {
          setPadColorG(other.getPadColorG());
        }
        if (other.hasPadColorB()) {
          setPadColorB(other.getPadColorB());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.SSDRandomCropPadOperation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.SSDRandomCropPadOperation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float minObjectCovered_ ;
      /**
       * <pre>
       * Cropped image must cover at least this fraction of one original bounding
       * box.
       * </pre>
       *
       * <code>optional float min_object_covered = 1;</code>
       * @return Whether the minObjectCovered field is set.
       */
      @java.lang.Override
      public boolean hasMinObjectCovered() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Cropped image must cover at least this fraction of one original bounding
       * box.
       * </pre>
       *
       * <code>optional float min_object_covered = 1;</code>
       * @return The minObjectCovered.
       */
      @java.lang.Override
      public float getMinObjectCovered() {
        return minObjectCovered_;
      }
      /**
       * <pre>
       * Cropped image must cover at least this fraction of one original bounding
       * box.
       * </pre>
       *
       * <code>optional float min_object_covered = 1;</code>
       * @param value The minObjectCovered to set.
       * @return This builder for chaining.
       */
      public Builder setMinObjectCovered(float value) {
        bitField0_ |= 0x00000001;
        minObjectCovered_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cropped image must cover at least this fraction of one original bounding
       * box.
       * </pre>
       *
       * <code>optional float min_object_covered = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinObjectCovered() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minObjectCovered_ = 0F;
        onChanged();
        return this;
      }

      private float minAspectRatio_ ;
      /**
       * <pre>
       * The aspect ratio of the cropped image must be within the range of
       * [min_aspect_ratio, max_aspect_ratio].
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2;</code>
       * @return Whether the minAspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasMinAspectRatio() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The aspect ratio of the cropped image must be within the range of
       * [min_aspect_ratio, max_aspect_ratio].
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2;</code>
       * @return The minAspectRatio.
       */
      @java.lang.Override
      public float getMinAspectRatio() {
        return minAspectRatio_;
      }
      /**
       * <pre>
       * The aspect ratio of the cropped image must be within the range of
       * [min_aspect_ratio, max_aspect_ratio].
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2;</code>
       * @param value The minAspectRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMinAspectRatio(float value) {
        bitField0_ |= 0x00000002;
        minAspectRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The aspect ratio of the cropped image must be within the range of
       * [min_aspect_ratio, max_aspect_ratio].
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinAspectRatio() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minAspectRatio_ = 0F;
        onChanged();
        return this;
      }

      private float maxAspectRatio_ ;
      /**
       * <code>optional float max_aspect_ratio = 3;</code>
       * @return Whether the maxAspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasMaxAspectRatio() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional float max_aspect_ratio = 3;</code>
       * @return The maxAspectRatio.
       */
      @java.lang.Override
      public float getMaxAspectRatio() {
        return maxAspectRatio_;
      }
      /**
       * <code>optional float max_aspect_ratio = 3;</code>
       * @param value The maxAspectRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMaxAspectRatio(float value) {
        bitField0_ |= 0x00000004;
        maxAspectRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_aspect_ratio = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxAspectRatio() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxAspectRatio_ = 0F;
        onChanged();
        return this;
      }

      private float minArea_ ;
      /**
       * <pre>
       * The area of the cropped image must be within the range of
       * [min_area, max_area].
       * </pre>
       *
       * <code>optional float min_area = 4;</code>
       * @return Whether the minArea field is set.
       */
      @java.lang.Override
      public boolean hasMinArea() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The area of the cropped image must be within the range of
       * [min_area, max_area].
       * </pre>
       *
       * <code>optional float min_area = 4;</code>
       * @return The minArea.
       */
      @java.lang.Override
      public float getMinArea() {
        return minArea_;
      }
      /**
       * <pre>
       * The area of the cropped image must be within the range of
       * [min_area, max_area].
       * </pre>
       *
       * <code>optional float min_area = 4;</code>
       * @param value The minArea to set.
       * @return This builder for chaining.
       */
      public Builder setMinArea(float value) {
        bitField0_ |= 0x00000008;
        minArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The area of the cropped image must be within the range of
       * [min_area, max_area].
       * </pre>
       *
       * <code>optional float min_area = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinArea() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minArea_ = 0F;
        onChanged();
        return this;
      }

      private float maxArea_ ;
      /**
       * <code>optional float max_area = 5;</code>
       * @return Whether the maxArea field is set.
       */
      @java.lang.Override
      public boolean hasMaxArea() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional float max_area = 5;</code>
       * @return The maxArea.
       */
      @java.lang.Override
      public float getMaxArea() {
        return maxArea_;
      }
      /**
       * <code>optional float max_area = 5;</code>
       * @param value The maxArea to set.
       * @return This builder for chaining.
       */
      public Builder setMaxArea(float value) {
        bitField0_ |= 0x00000010;
        maxArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_area = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxArea() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxArea_ = 0F;
        onChanged();
        return this;
      }

      private float overlapThresh_ ;
      /**
       * <pre>
       * Cropped box area ratio must be above this threhold to be kept.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6;</code>
       * @return Whether the overlapThresh field is set.
       */
      @java.lang.Override
      public boolean hasOverlapThresh() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Cropped box area ratio must be above this threhold to be kept.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6;</code>
       * @return The overlapThresh.
       */
      @java.lang.Override
      public float getOverlapThresh() {
        return overlapThresh_;
      }
      /**
       * <pre>
       * Cropped box area ratio must be above this threhold to be kept.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6;</code>
       * @param value The overlapThresh to set.
       * @return This builder for chaining.
       */
      public Builder setOverlapThresh(float value) {
        bitField0_ |= 0x00000020;
        overlapThresh_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cropped box area ratio must be above this threhold to be kept.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearOverlapThresh() {
        bitField0_ = (bitField0_ & ~0x00000020);
        overlapThresh_ = 0F;
        onChanged();
        return this;
      }

      private boolean clipBoxes_ = true;
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 13 [default = true];</code>
       * @return Whether the clipBoxes field is set.
       */
      @java.lang.Override
      public boolean hasClipBoxes() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 13 [default = true];</code>
       * @return The clipBoxes.
       */
      @java.lang.Override
      public boolean getClipBoxes() {
        return clipBoxes_;
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 13 [default = true];</code>
       * @param value The clipBoxes to set.
       * @return This builder for chaining.
       */
      public Builder setClipBoxes(boolean value) {
        bitField0_ |= 0x00000040;
        clipBoxes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 13 [default = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearClipBoxes() {
        bitField0_ = (bitField0_ & ~0x00000040);
        clipBoxes_ = true;
        onChanged();
        return this;
      }

      private float randomCoef_ ;
      /**
       * <pre>
       * Probability a crop operation is skipped.
       * </pre>
       *
       * <code>optional float random_coef = 7;</code>
       * @return Whether the randomCoef field is set.
       */
      @java.lang.Override
      public boolean hasRandomCoef() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Probability a crop operation is skipped.
       * </pre>
       *
       * <code>optional float random_coef = 7;</code>
       * @return The randomCoef.
       */
      @java.lang.Override
      public float getRandomCoef() {
        return randomCoef_;
      }
      /**
       * <pre>
       * Probability a crop operation is skipped.
       * </pre>
       *
       * <code>optional float random_coef = 7;</code>
       * @param value The randomCoef to set.
       * @return This builder for chaining.
       */
      public Builder setRandomCoef(float value) {
        bitField0_ |= 0x00000080;
        randomCoef_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Probability a crop operation is skipped.
       * </pre>
       *
       * <code>optional float random_coef = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRandomCoef() {
        bitField0_ = (bitField0_ & ~0x00000080);
        randomCoef_ = 0F;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList minPaddedSizeRatio_ = emptyFloatList();
      private void ensureMinPaddedSizeRatioIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          minPaddedSizeRatio_ = mutableCopy(minPaddedSizeRatio_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <pre>
       * Min ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 8;</code>
       * @return A list containing the minPaddedSizeRatio.
       */
      public java.util.List<java.lang.Float>
          getMinPaddedSizeRatioList() {
        return ((bitField0_ & 0x00000100) != 0) ?
                 java.util.Collections.unmodifiableList(minPaddedSizeRatio_) : minPaddedSizeRatio_;
      }
      /**
       * <pre>
       * Min ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 8;</code>
       * @return The count of minPaddedSizeRatio.
       */
      public int getMinPaddedSizeRatioCount() {
        return minPaddedSizeRatio_.size();
      }
      /**
       * <pre>
       * Min ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 8;</code>
       * @param index The index of the element to return.
       * @return The minPaddedSizeRatio at the given index.
       */
      public float getMinPaddedSizeRatio(int index) {
        return minPaddedSizeRatio_.getFloat(index);
      }
      /**
       * <pre>
       * Min ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 8;</code>
       * @param index The index to set the value at.
       * @param value The minPaddedSizeRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMinPaddedSizeRatio(
          int index, float value) {
        ensureMinPaddedSizeRatioIsMutable();
        minPaddedSizeRatio_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Min ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 8;</code>
       * @param value The minPaddedSizeRatio to add.
       * @return This builder for chaining.
       */
      public Builder addMinPaddedSizeRatio(float value) {
        ensureMinPaddedSizeRatioIsMutable();
        minPaddedSizeRatio_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Min ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 8;</code>
       * @param values The minPaddedSizeRatio to add.
       * @return This builder for chaining.
       */
      public Builder addAllMinPaddedSizeRatio(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureMinPaddedSizeRatioIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, minPaddedSizeRatio_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Min ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinPaddedSizeRatio() {
        minPaddedSizeRatio_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList maxPaddedSizeRatio_ = emptyFloatList();
      private void ensureMaxPaddedSizeRatioIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          maxPaddedSizeRatio_ = mutableCopy(maxPaddedSizeRatio_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <pre>
       * Max ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float max_padded_size_ratio = 9;</code>
       * @return A list containing the maxPaddedSizeRatio.
       */
      public java.util.List<java.lang.Float>
          getMaxPaddedSizeRatioList() {
        return ((bitField0_ & 0x00000200) != 0) ?
                 java.util.Collections.unmodifiableList(maxPaddedSizeRatio_) : maxPaddedSizeRatio_;
      }
      /**
       * <pre>
       * Max ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float max_padded_size_ratio = 9;</code>
       * @return The count of maxPaddedSizeRatio.
       */
      public int getMaxPaddedSizeRatioCount() {
        return maxPaddedSizeRatio_.size();
      }
      /**
       * <pre>
       * Max ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float max_padded_size_ratio = 9;</code>
       * @param index The index of the element to return.
       * @return The maxPaddedSizeRatio at the given index.
       */
      public float getMaxPaddedSizeRatio(int index) {
        return maxPaddedSizeRatio_.getFloat(index);
      }
      /**
       * <pre>
       * Max ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float max_padded_size_ratio = 9;</code>
       * @param index The index to set the value at.
       * @param value The maxPaddedSizeRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMaxPaddedSizeRatio(
          int index, float value) {
        ensureMaxPaddedSizeRatioIsMutable();
        maxPaddedSizeRatio_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float max_padded_size_ratio = 9;</code>
       * @param value The maxPaddedSizeRatio to add.
       * @return This builder for chaining.
       */
      public Builder addMaxPaddedSizeRatio(float value) {
        ensureMaxPaddedSizeRatioIsMutable();
        maxPaddedSizeRatio_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float max_padded_size_ratio = 9;</code>
       * @param values The maxPaddedSizeRatio to add.
       * @return This builder for chaining.
       */
      public Builder addAllMaxPaddedSizeRatio(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureMaxPaddedSizeRatioIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, maxPaddedSizeRatio_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float max_padded_size_ratio = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxPaddedSizeRatio() {
        maxPaddedSizeRatio_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      private float padColorR_ ;
      /**
       * <pre>
       * Padding color.
       * </pre>
       *
       * <code>optional float pad_color_r = 10;</code>
       * @return Whether the padColorR field is set.
       */
      @java.lang.Override
      public boolean hasPadColorR() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * Padding color.
       * </pre>
       *
       * <code>optional float pad_color_r = 10;</code>
       * @return The padColorR.
       */
      @java.lang.Override
      public float getPadColorR() {
        return padColorR_;
      }
      /**
       * <pre>
       * Padding color.
       * </pre>
       *
       * <code>optional float pad_color_r = 10;</code>
       * @param value The padColorR to set.
       * @return This builder for chaining.
       */
      public Builder setPadColorR(float value) {
        bitField0_ |= 0x00000400;
        padColorR_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Padding color.
       * </pre>
       *
       * <code>optional float pad_color_r = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearPadColorR() {
        bitField0_ = (bitField0_ & ~0x00000400);
        padColorR_ = 0F;
        onChanged();
        return this;
      }

      private float padColorG_ ;
      /**
       * <code>optional float pad_color_g = 11;</code>
       * @return Whether the padColorG field is set.
       */
      @java.lang.Override
      public boolean hasPadColorG() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional float pad_color_g = 11;</code>
       * @return The padColorG.
       */
      @java.lang.Override
      public float getPadColorG() {
        return padColorG_;
      }
      /**
       * <code>optional float pad_color_g = 11;</code>
       * @param value The padColorG to set.
       * @return This builder for chaining.
       */
      public Builder setPadColorG(float value) {
        bitField0_ |= 0x00000800;
        padColorG_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float pad_color_g = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearPadColorG() {
        bitField0_ = (bitField0_ & ~0x00000800);
        padColorG_ = 0F;
        onChanged();
        return this;
      }

      private float padColorB_ ;
      /**
       * <code>optional float pad_color_b = 12;</code>
       * @return Whether the padColorB field is set.
       */
      @java.lang.Override
      public boolean hasPadColorB() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional float pad_color_b = 12;</code>
       * @return The padColorB.
       */
      @java.lang.Override
      public float getPadColorB() {
        return padColorB_;
      }
      /**
       * <code>optional float pad_color_b = 12;</code>
       * @param value The padColorB to set.
       * @return This builder for chaining.
       */
      public Builder setPadColorB(float value) {
        bitField0_ |= 0x00001000;
        padColorB_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float pad_color_b = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearPadColorB() {
        bitField0_ = (bitField0_ & ~0x00001000);
        padColorB_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.SSDRandomCropPadOperation)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.SSDRandomCropPadOperation)
    private static final object_detection.protos.Preprocessor.SSDRandomCropPadOperation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.SSDRandomCropPadOperation();
    }

    public static object_detection.protos.Preprocessor.SSDRandomCropPadOperation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSDRandomCropPadOperation>
        PARSER = new com.google.protobuf.AbstractParser<SSDRandomCropPadOperation>() {
      @java.lang.Override
      public SSDRandomCropPadOperation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSDRandomCropPadOperation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSDRandomCropPadOperation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSDRandomCropPadOperation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropPadOperation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSDRandomCropPadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.SSDRandomCropPad)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
     */
    java.util.List<object_detection.protos.Preprocessor.SSDRandomCropPadOperation>
        getOperationsList();
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
     */
    object_detection.protos.Preprocessor.SSDRandomCropPadOperation getOperations(int index);
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
     */
    int getOperationsCount();
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
     */
    java.util.List<? extends object_detection.protos.Preprocessor.SSDRandomCropPadOperationOrBuilder>
        getOperationsOrBuilderList();
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
     */
    object_detection.protos.Preprocessor.SSDRandomCropPadOperationOrBuilder getOperationsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Randomly crops and pads an image according to:
   *     Liu et al., SSD: Single shot multibox detector.
   * This preprocessing step defines multiple SSDRandomCropPadOperations. Only one
   * operation (chosen at random) is actually performed on an image.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.SSDRandomCropPad}
   */
  public static final class SSDRandomCropPad extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.SSDRandomCropPad)
      SSDRandomCropPadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SSDRandomCropPad.newBuilder() to construct.
    private SSDRandomCropPad(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSDRandomCropPad() {
      operations_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SSDRandomCropPad();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSDRandomCropPad(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                operations_ = new java.util.ArrayList<object_detection.protos.Preprocessor.SSDRandomCropPadOperation>();
                mutable_bitField0_ |= 0x00000001;
              }
              operations_.add(
                  input.readMessage(object_detection.protos.Preprocessor.SSDRandomCropPadOperation.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          operations_ = java.util.Collections.unmodifiableList(operations_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPad_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPad_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.SSDRandomCropPad.class, object_detection.protos.Preprocessor.SSDRandomCropPad.Builder.class);
    }

    public static final int OPERATIONS_FIELD_NUMBER = 1;
    private java.util.List<object_detection.protos.Preprocessor.SSDRandomCropPadOperation> operations_;
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
     */
    @java.lang.Override
    public java.util.List<object_detection.protos.Preprocessor.SSDRandomCropPadOperation> getOperationsList() {
      return operations_;
    }
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends object_detection.protos.Preprocessor.SSDRandomCropPadOperationOrBuilder>
        getOperationsOrBuilderList() {
      return operations_;
    }
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
     */
    @java.lang.Override
    public int getOperationsCount() {
      return operations_.size();
    }
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropPadOperation getOperations(int index) {
      return operations_.get(index);
    }
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropPadOperationOrBuilder getOperationsOrBuilder(
        int index) {
      return operations_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < operations_.size(); i++) {
        output.writeMessage(1, operations_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < operations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, operations_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.SSDRandomCropPad)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.SSDRandomCropPad other = (object_detection.protos.Preprocessor.SSDRandomCropPad) obj;

      if (!getOperationsList()
          .equals(other.getOperationsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOperationsCount() > 0) {
        hash = (37 * hash) + OPERATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOperationsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.SSDRandomCropPad parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPad parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPad parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPad parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPad parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPad parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPad parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPad parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPad parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPad parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPad parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPad parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.SSDRandomCropPad prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly crops and pads an image according to:
     *     Liu et al., SSD: Single shot multibox detector.
     * This preprocessing step defines multiple SSDRandomCropPadOperations. Only one
     * operation (chosen at random) is actually performed on an image.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.SSDRandomCropPad}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.SSDRandomCropPad)
        object_detection.protos.Preprocessor.SSDRandomCropPadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPad_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPad_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.SSDRandomCropPad.class, object_detection.protos.Preprocessor.SSDRandomCropPad.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.SSDRandomCropPad.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOperationsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (operationsBuilder_ == null) {
          operations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          operationsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPad_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropPad getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.SSDRandomCropPad.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropPad build() {
        object_detection.protos.Preprocessor.SSDRandomCropPad result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropPad buildPartial() {
        object_detection.protos.Preprocessor.SSDRandomCropPad result = new object_detection.protos.Preprocessor.SSDRandomCropPad(this);
        int from_bitField0_ = bitField0_;
        if (operationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            operations_ = java.util.Collections.unmodifiableList(operations_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.operations_ = operations_;
        } else {
          result.operations_ = operationsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.SSDRandomCropPad) {
          return mergeFrom((object_detection.protos.Preprocessor.SSDRandomCropPad)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.SSDRandomCropPad other) {
        if (other == object_detection.protos.Preprocessor.SSDRandomCropPad.getDefaultInstance()) return this;
        if (operationsBuilder_ == null) {
          if (!other.operations_.isEmpty()) {
            if (operations_.isEmpty()) {
              operations_ = other.operations_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOperationsIsMutable();
              operations_.addAll(other.operations_);
            }
            onChanged();
          }
        } else {
          if (!other.operations_.isEmpty()) {
            if (operationsBuilder_.isEmpty()) {
              operationsBuilder_.dispose();
              operationsBuilder_ = null;
              operations_ = other.operations_;
              bitField0_ = (bitField0_ & ~0x00000001);
              operationsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOperationsFieldBuilder() : null;
            } else {
              operationsBuilder_.addAllMessages(other.operations_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.SSDRandomCropPad parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.SSDRandomCropPad) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<object_detection.protos.Preprocessor.SSDRandomCropPadOperation> operations_ =
        java.util.Collections.emptyList();
      private void ensureOperationsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          operations_ = new java.util.ArrayList<object_detection.protos.Preprocessor.SSDRandomCropPadOperation>(operations_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          object_detection.protos.Preprocessor.SSDRandomCropPadOperation, object_detection.protos.Preprocessor.SSDRandomCropPadOperation.Builder, object_detection.protos.Preprocessor.SSDRandomCropPadOperationOrBuilder> operationsBuilder_;

      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public java.util.List<object_detection.protos.Preprocessor.SSDRandomCropPadOperation> getOperationsList() {
        if (operationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(operations_);
        } else {
          return operationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public int getOperationsCount() {
        if (operationsBuilder_ == null) {
          return operations_.size();
        } else {
          return operationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropPadOperation getOperations(int index) {
        if (operationsBuilder_ == null) {
          return operations_.get(index);
        } else {
          return operationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public Builder setOperations(
          int index, object_detection.protos.Preprocessor.SSDRandomCropPadOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.set(index, value);
          onChanged();
        } else {
          operationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public Builder setOperations(
          int index, object_detection.protos.Preprocessor.SSDRandomCropPadOperation.Builder builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.set(index, builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public Builder addOperations(object_detection.protos.Preprocessor.SSDRandomCropPadOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.add(value);
          onChanged();
        } else {
          operationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public Builder addOperations(
          int index, object_detection.protos.Preprocessor.SSDRandomCropPadOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.add(index, value);
          onChanged();
        } else {
          operationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public Builder addOperations(
          object_detection.protos.Preprocessor.SSDRandomCropPadOperation.Builder builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.add(builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public Builder addOperations(
          int index, object_detection.protos.Preprocessor.SSDRandomCropPadOperation.Builder builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.add(index, builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public Builder addAllOperations(
          java.lang.Iterable<? extends object_detection.protos.Preprocessor.SSDRandomCropPadOperation> values) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, operations_);
          onChanged();
        } else {
          operationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public Builder clearOperations() {
        if (operationsBuilder_ == null) {
          operations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          operationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public Builder removeOperations(int index) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.remove(index);
          onChanged();
        } else {
          operationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropPadOperation.Builder getOperationsBuilder(
          int index) {
        return getOperationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropPadOperationOrBuilder getOperationsOrBuilder(
          int index) {
        if (operationsBuilder_ == null) {
          return operations_.get(index);  } else {
          return operationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public java.util.List<? extends object_detection.protos.Preprocessor.SSDRandomCropPadOperationOrBuilder>
           getOperationsOrBuilderList() {
        if (operationsBuilder_ != null) {
          return operationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(operations_);
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropPadOperation.Builder addOperationsBuilder() {
        return getOperationsFieldBuilder().addBuilder(
            object_detection.protos.Preprocessor.SSDRandomCropPadOperation.getDefaultInstance());
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropPadOperation.Builder addOperationsBuilder(
          int index) {
        return getOperationsFieldBuilder().addBuilder(
            index, object_detection.protos.Preprocessor.SSDRandomCropPadOperation.getDefaultInstance());
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadOperation operations = 1;</code>
       */
      public java.util.List<object_detection.protos.Preprocessor.SSDRandomCropPadOperation.Builder>
           getOperationsBuilderList() {
        return getOperationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          object_detection.protos.Preprocessor.SSDRandomCropPadOperation, object_detection.protos.Preprocessor.SSDRandomCropPadOperation.Builder, object_detection.protos.Preprocessor.SSDRandomCropPadOperationOrBuilder>
          getOperationsFieldBuilder() {
        if (operationsBuilder_ == null) {
          operationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              object_detection.protos.Preprocessor.SSDRandomCropPadOperation, object_detection.protos.Preprocessor.SSDRandomCropPadOperation.Builder, object_detection.protos.Preprocessor.SSDRandomCropPadOperationOrBuilder>(
                  operations_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          operations_ = null;
        }
        return operationsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.SSDRandomCropPad)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.SSDRandomCropPad)
    private static final object_detection.protos.Preprocessor.SSDRandomCropPad DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.SSDRandomCropPad();
    }

    public static object_detection.protos.Preprocessor.SSDRandomCropPad getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSDRandomCropPad>
        PARSER = new com.google.protobuf.AbstractParser<SSDRandomCropPad>() {
      @java.lang.Override
      public SSDRandomCropPad parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSDRandomCropPad(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSDRandomCropPad> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSDRandomCropPad> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropPad getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSDRandomCropFixedAspectRatioOperationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.SSDRandomCropFixedAspectRatioOperation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Cropped image must cover at least this fraction of one original bounding
     * box.
     * </pre>
     *
     * <code>optional float min_object_covered = 1;</code>
     * @return Whether the minObjectCovered field is set.
     */
    boolean hasMinObjectCovered();
    /**
     * <pre>
     * Cropped image must cover at least this fraction of one original bounding
     * box.
     * </pre>
     *
     * <code>optional float min_object_covered = 1;</code>
     * @return The minObjectCovered.
     */
    float getMinObjectCovered();

    /**
     * <pre>
     * The area of the cropped image must be within the range of
     * [min_area, max_area].
     * </pre>
     *
     * <code>optional float min_area = 4;</code>
     * @return Whether the minArea field is set.
     */
    boolean hasMinArea();
    /**
     * <pre>
     * The area of the cropped image must be within the range of
     * [min_area, max_area].
     * </pre>
     *
     * <code>optional float min_area = 4;</code>
     * @return The minArea.
     */
    float getMinArea();

    /**
     * <code>optional float max_area = 5;</code>
     * @return Whether the maxArea field is set.
     */
    boolean hasMaxArea();
    /**
     * <code>optional float max_area = 5;</code>
     * @return The maxArea.
     */
    float getMaxArea();

    /**
     * <pre>
     * Cropped box area ratio must be above this threhold to be kept.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6;</code>
     * @return Whether the overlapThresh field is set.
     */
    boolean hasOverlapThresh();
    /**
     * <pre>
     * Cropped box area ratio must be above this threhold to be kept.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6;</code>
     * @return The overlapThresh.
     */
    float getOverlapThresh();

    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 8 [default = true];</code>
     * @return Whether the clipBoxes field is set.
     */
    boolean hasClipBoxes();
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 8 [default = true];</code>
     * @return The clipBoxes.
     */
    boolean getClipBoxes();

    /**
     * <pre>
     * Probability a crop operation is skipped.
     * </pre>
     *
     * <code>optional float random_coef = 7;</code>
     * @return Whether the randomCoef field is set.
     */
    boolean hasRandomCoef();
    /**
     * <pre>
     * Probability a crop operation is skipped.
     * </pre>
     *
     * <code>optional float random_coef = 7;</code>
     * @return The randomCoef.
     */
    float getRandomCoef();
  }
  /**
   * Protobuf type {@code object_detection.protos.SSDRandomCropFixedAspectRatioOperation}
   */
  public static final class SSDRandomCropFixedAspectRatioOperation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.SSDRandomCropFixedAspectRatioOperation)
      SSDRandomCropFixedAspectRatioOperationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SSDRandomCropFixedAspectRatioOperation.newBuilder() to construct.
    private SSDRandomCropFixedAspectRatioOperation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSDRandomCropFixedAspectRatioOperation() {
      clipBoxes_ = true;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SSDRandomCropFixedAspectRatioOperation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSDRandomCropFixedAspectRatioOperation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              minObjectCovered_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000002;
              minArea_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000004;
              maxArea_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000008;
              overlapThresh_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000020;
              randomCoef_ = input.readFloat();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              clipBoxes_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropFixedAspectRatioOperation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropFixedAspectRatioOperation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.class, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.Builder.class);
    }

    private int bitField0_;
    public static final int MIN_OBJECT_COVERED_FIELD_NUMBER = 1;
    private float minObjectCovered_;
    /**
     * <pre>
     * Cropped image must cover at least this fraction of one original bounding
     * box.
     * </pre>
     *
     * <code>optional float min_object_covered = 1;</code>
     * @return Whether the minObjectCovered field is set.
     */
    @java.lang.Override
    public boolean hasMinObjectCovered() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Cropped image must cover at least this fraction of one original bounding
     * box.
     * </pre>
     *
     * <code>optional float min_object_covered = 1;</code>
     * @return The minObjectCovered.
     */
    @java.lang.Override
    public float getMinObjectCovered() {
      return minObjectCovered_;
    }

    public static final int MIN_AREA_FIELD_NUMBER = 4;
    private float minArea_;
    /**
     * <pre>
     * The area of the cropped image must be within the range of
     * [min_area, max_area].
     * </pre>
     *
     * <code>optional float min_area = 4;</code>
     * @return Whether the minArea field is set.
     */
    @java.lang.Override
    public boolean hasMinArea() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The area of the cropped image must be within the range of
     * [min_area, max_area].
     * </pre>
     *
     * <code>optional float min_area = 4;</code>
     * @return The minArea.
     */
    @java.lang.Override
    public float getMinArea() {
      return minArea_;
    }

    public static final int MAX_AREA_FIELD_NUMBER = 5;
    private float maxArea_;
    /**
     * <code>optional float max_area = 5;</code>
     * @return Whether the maxArea field is set.
     */
    @java.lang.Override
    public boolean hasMaxArea() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional float max_area = 5;</code>
     * @return The maxArea.
     */
    @java.lang.Override
    public float getMaxArea() {
      return maxArea_;
    }

    public static final int OVERLAP_THRESH_FIELD_NUMBER = 6;
    private float overlapThresh_;
    /**
     * <pre>
     * Cropped box area ratio must be above this threhold to be kept.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6;</code>
     * @return Whether the overlapThresh field is set.
     */
    @java.lang.Override
    public boolean hasOverlapThresh() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Cropped box area ratio must be above this threhold to be kept.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6;</code>
     * @return The overlapThresh.
     */
    @java.lang.Override
    public float getOverlapThresh() {
      return overlapThresh_;
    }

    public static final int CLIP_BOXES_FIELD_NUMBER = 8;
    private boolean clipBoxes_;
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 8 [default = true];</code>
     * @return Whether the clipBoxes field is set.
     */
    @java.lang.Override
    public boolean hasClipBoxes() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 8 [default = true];</code>
     * @return The clipBoxes.
     */
    @java.lang.Override
    public boolean getClipBoxes() {
      return clipBoxes_;
    }

    public static final int RANDOM_COEF_FIELD_NUMBER = 7;
    private float randomCoef_;
    /**
     * <pre>
     * Probability a crop operation is skipped.
     * </pre>
     *
     * <code>optional float random_coef = 7;</code>
     * @return Whether the randomCoef field is set.
     */
    @java.lang.Override
    public boolean hasRandomCoef() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Probability a crop operation is skipped.
     * </pre>
     *
     * <code>optional float random_coef = 7;</code>
     * @return The randomCoef.
     */
    @java.lang.Override
    public float getRandomCoef() {
      return randomCoef_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, minObjectCovered_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(4, minArea_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(5, maxArea_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(6, overlapThresh_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFloat(7, randomCoef_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBool(8, clipBoxes_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, minObjectCovered_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, minArea_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, maxArea_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, overlapThresh_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, randomCoef_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, clipBoxes_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation other = (object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation) obj;

      if (hasMinObjectCovered() != other.hasMinObjectCovered()) return false;
      if (hasMinObjectCovered()) {
        if (java.lang.Float.floatToIntBits(getMinObjectCovered())
            != java.lang.Float.floatToIntBits(
                other.getMinObjectCovered())) return false;
      }
      if (hasMinArea() != other.hasMinArea()) return false;
      if (hasMinArea()) {
        if (java.lang.Float.floatToIntBits(getMinArea())
            != java.lang.Float.floatToIntBits(
                other.getMinArea())) return false;
      }
      if (hasMaxArea() != other.hasMaxArea()) return false;
      if (hasMaxArea()) {
        if (java.lang.Float.floatToIntBits(getMaxArea())
            != java.lang.Float.floatToIntBits(
                other.getMaxArea())) return false;
      }
      if (hasOverlapThresh() != other.hasOverlapThresh()) return false;
      if (hasOverlapThresh()) {
        if (java.lang.Float.floatToIntBits(getOverlapThresh())
            != java.lang.Float.floatToIntBits(
                other.getOverlapThresh())) return false;
      }
      if (hasClipBoxes() != other.hasClipBoxes()) return false;
      if (hasClipBoxes()) {
        if (getClipBoxes()
            != other.getClipBoxes()) return false;
      }
      if (hasRandomCoef() != other.hasRandomCoef()) return false;
      if (hasRandomCoef()) {
        if (java.lang.Float.floatToIntBits(getRandomCoef())
            != java.lang.Float.floatToIntBits(
                other.getRandomCoef())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMinObjectCovered()) {
        hash = (37 * hash) + MIN_OBJECT_COVERED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinObjectCovered());
      }
      if (hasMinArea()) {
        hash = (37 * hash) + MIN_AREA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinArea());
      }
      if (hasMaxArea()) {
        hash = (37 * hash) + MAX_AREA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxArea());
      }
      if (hasOverlapThresh()) {
        hash = (37 * hash) + OVERLAP_THRESH_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getOverlapThresh());
      }
      if (hasClipBoxes()) {
        hash = (37 * hash) + CLIP_BOXES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getClipBoxes());
      }
      if (hasRandomCoef()) {
        hash = (37 * hash) + RANDOM_COEF_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRandomCoef());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code object_detection.protos.SSDRandomCropFixedAspectRatioOperation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.SSDRandomCropFixedAspectRatioOperation)
        object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropFixedAspectRatioOperation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropFixedAspectRatioOperation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.class, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        minObjectCovered_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        minArea_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxArea_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        overlapThresh_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        clipBoxes_ = true;
        bitField0_ = (bitField0_ & ~0x00000010);
        randomCoef_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropFixedAspectRatioOperation_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation build() {
        object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation buildPartial() {
        object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation result = new object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.minObjectCovered_ = minObjectCovered_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.minArea_ = minArea_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.maxArea_ = maxArea_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.overlapThresh_ = overlapThresh_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.clipBoxes_ = clipBoxes_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.randomCoef_ = randomCoef_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation) {
          return mergeFrom((object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation other) {
        if (other == object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.getDefaultInstance()) return this;
        if (other.hasMinObjectCovered()) {
          setMinObjectCovered(other.getMinObjectCovered());
        }
        if (other.hasMinArea()) {
          setMinArea(other.getMinArea());
        }
        if (other.hasMaxArea()) {
          setMaxArea(other.getMaxArea());
        }
        if (other.hasOverlapThresh()) {
          setOverlapThresh(other.getOverlapThresh());
        }
        if (other.hasClipBoxes()) {
          setClipBoxes(other.getClipBoxes());
        }
        if (other.hasRandomCoef()) {
          setRandomCoef(other.getRandomCoef());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float minObjectCovered_ ;
      /**
       * <pre>
       * Cropped image must cover at least this fraction of one original bounding
       * box.
       * </pre>
       *
       * <code>optional float min_object_covered = 1;</code>
       * @return Whether the minObjectCovered field is set.
       */
      @java.lang.Override
      public boolean hasMinObjectCovered() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Cropped image must cover at least this fraction of one original bounding
       * box.
       * </pre>
       *
       * <code>optional float min_object_covered = 1;</code>
       * @return The minObjectCovered.
       */
      @java.lang.Override
      public float getMinObjectCovered() {
        return minObjectCovered_;
      }
      /**
       * <pre>
       * Cropped image must cover at least this fraction of one original bounding
       * box.
       * </pre>
       *
       * <code>optional float min_object_covered = 1;</code>
       * @param value The minObjectCovered to set.
       * @return This builder for chaining.
       */
      public Builder setMinObjectCovered(float value) {
        bitField0_ |= 0x00000001;
        minObjectCovered_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cropped image must cover at least this fraction of one original bounding
       * box.
       * </pre>
       *
       * <code>optional float min_object_covered = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinObjectCovered() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minObjectCovered_ = 0F;
        onChanged();
        return this;
      }

      private float minArea_ ;
      /**
       * <pre>
       * The area of the cropped image must be within the range of
       * [min_area, max_area].
       * </pre>
       *
       * <code>optional float min_area = 4;</code>
       * @return Whether the minArea field is set.
       */
      @java.lang.Override
      public boolean hasMinArea() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The area of the cropped image must be within the range of
       * [min_area, max_area].
       * </pre>
       *
       * <code>optional float min_area = 4;</code>
       * @return The minArea.
       */
      @java.lang.Override
      public float getMinArea() {
        return minArea_;
      }
      /**
       * <pre>
       * The area of the cropped image must be within the range of
       * [min_area, max_area].
       * </pre>
       *
       * <code>optional float min_area = 4;</code>
       * @param value The minArea to set.
       * @return This builder for chaining.
       */
      public Builder setMinArea(float value) {
        bitField0_ |= 0x00000002;
        minArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The area of the cropped image must be within the range of
       * [min_area, max_area].
       * </pre>
       *
       * <code>optional float min_area = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinArea() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minArea_ = 0F;
        onChanged();
        return this;
      }

      private float maxArea_ ;
      /**
       * <code>optional float max_area = 5;</code>
       * @return Whether the maxArea field is set.
       */
      @java.lang.Override
      public boolean hasMaxArea() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional float max_area = 5;</code>
       * @return The maxArea.
       */
      @java.lang.Override
      public float getMaxArea() {
        return maxArea_;
      }
      /**
       * <code>optional float max_area = 5;</code>
       * @param value The maxArea to set.
       * @return This builder for chaining.
       */
      public Builder setMaxArea(float value) {
        bitField0_ |= 0x00000004;
        maxArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_area = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxArea() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxArea_ = 0F;
        onChanged();
        return this;
      }

      private float overlapThresh_ ;
      /**
       * <pre>
       * Cropped box area ratio must be above this threhold to be kept.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6;</code>
       * @return Whether the overlapThresh field is set.
       */
      @java.lang.Override
      public boolean hasOverlapThresh() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Cropped box area ratio must be above this threhold to be kept.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6;</code>
       * @return The overlapThresh.
       */
      @java.lang.Override
      public float getOverlapThresh() {
        return overlapThresh_;
      }
      /**
       * <pre>
       * Cropped box area ratio must be above this threhold to be kept.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6;</code>
       * @param value The overlapThresh to set.
       * @return This builder for chaining.
       */
      public Builder setOverlapThresh(float value) {
        bitField0_ |= 0x00000008;
        overlapThresh_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cropped box area ratio must be above this threhold to be kept.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearOverlapThresh() {
        bitField0_ = (bitField0_ & ~0x00000008);
        overlapThresh_ = 0F;
        onChanged();
        return this;
      }

      private boolean clipBoxes_ = true;
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 8 [default = true];</code>
       * @return Whether the clipBoxes field is set.
       */
      @java.lang.Override
      public boolean hasClipBoxes() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 8 [default = true];</code>
       * @return The clipBoxes.
       */
      @java.lang.Override
      public boolean getClipBoxes() {
        return clipBoxes_;
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 8 [default = true];</code>
       * @param value The clipBoxes to set.
       * @return This builder for chaining.
       */
      public Builder setClipBoxes(boolean value) {
        bitField0_ |= 0x00000010;
        clipBoxes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 8 [default = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearClipBoxes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        clipBoxes_ = true;
        onChanged();
        return this;
      }

      private float randomCoef_ ;
      /**
       * <pre>
       * Probability a crop operation is skipped.
       * </pre>
       *
       * <code>optional float random_coef = 7;</code>
       * @return Whether the randomCoef field is set.
       */
      @java.lang.Override
      public boolean hasRandomCoef() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Probability a crop operation is skipped.
       * </pre>
       *
       * <code>optional float random_coef = 7;</code>
       * @return The randomCoef.
       */
      @java.lang.Override
      public float getRandomCoef() {
        return randomCoef_;
      }
      /**
       * <pre>
       * Probability a crop operation is skipped.
       * </pre>
       *
       * <code>optional float random_coef = 7;</code>
       * @param value The randomCoef to set.
       * @return This builder for chaining.
       */
      public Builder setRandomCoef(float value) {
        bitField0_ |= 0x00000020;
        randomCoef_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Probability a crop operation is skipped.
       * </pre>
       *
       * <code>optional float random_coef = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRandomCoef() {
        bitField0_ = (bitField0_ & ~0x00000020);
        randomCoef_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.SSDRandomCropFixedAspectRatioOperation)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.SSDRandomCropFixedAspectRatioOperation)
    private static final object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation();
    }

    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSDRandomCropFixedAspectRatioOperation>
        PARSER = new com.google.protobuf.AbstractParser<SSDRandomCropFixedAspectRatioOperation>() {
      @java.lang.Override
      public SSDRandomCropFixedAspectRatioOperation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSDRandomCropFixedAspectRatioOperation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSDRandomCropFixedAspectRatioOperation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSDRandomCropFixedAspectRatioOperation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSDRandomCropFixedAspectRatioOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.SSDRandomCropFixedAspectRatio)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
     */
    java.util.List<object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation>
        getOperationsList();
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
     */
    object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation getOperations(int index);
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
     */
    int getOperationsCount();
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
     */
    java.util.List<? extends object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperationOrBuilder>
        getOperationsOrBuilderList();
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
     */
    object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperationOrBuilder getOperationsOrBuilder(
        int index);

    /**
     * <pre>
     * Aspect ratio to crop to. This value is used for all crop operations.
     * </pre>
     *
     * <code>optional float aspect_ratio = 2 [default = 1];</code>
     * @return Whether the aspectRatio field is set.
     */
    boolean hasAspectRatio();
    /**
     * <pre>
     * Aspect ratio to crop to. This value is used for all crop operations.
     * </pre>
     *
     * <code>optional float aspect_ratio = 2 [default = 1];</code>
     * @return The aspectRatio.
     */
    float getAspectRatio();
  }
  /**
   * <pre>
   * Randomly crops a image to a fixed aspect ratio according to:
   *     Liu et al., SSD: Single shot multibox detector.
   * Multiple SSDRandomCropFixedAspectRatioOperations are defined by this
   * preprocessing step. Only one operation (chosen at random) is actually
   * performed on an image.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.SSDRandomCropFixedAspectRatio}
   */
  public static final class SSDRandomCropFixedAspectRatio extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.SSDRandomCropFixedAspectRatio)
      SSDRandomCropFixedAspectRatioOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SSDRandomCropFixedAspectRatio.newBuilder() to construct.
    private SSDRandomCropFixedAspectRatio(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSDRandomCropFixedAspectRatio() {
      operations_ = java.util.Collections.emptyList();
      aspectRatio_ = 1F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SSDRandomCropFixedAspectRatio();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSDRandomCropFixedAspectRatio(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                operations_ = new java.util.ArrayList<object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation>();
                mutable_bitField0_ |= 0x00000001;
              }
              operations_.add(
                  input.readMessage(object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.PARSER, extensionRegistry));
              break;
            }
            case 21: {
              bitField0_ |= 0x00000001;
              aspectRatio_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          operations_ = java.util.Collections.unmodifiableList(operations_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropFixedAspectRatio_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropFixedAspectRatio_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.class, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.Builder.class);
    }

    private int bitField0_;
    public static final int OPERATIONS_FIELD_NUMBER = 1;
    private java.util.List<object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation> operations_;
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
     */
    @java.lang.Override
    public java.util.List<object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation> getOperationsList() {
      return operations_;
    }
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperationOrBuilder>
        getOperationsOrBuilderList() {
      return operations_;
    }
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
     */
    @java.lang.Override
    public int getOperationsCount() {
      return operations_.size();
    }
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation getOperations(int index) {
      return operations_.get(index);
    }
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperationOrBuilder getOperationsOrBuilder(
        int index) {
      return operations_.get(index);
    }

    public static final int ASPECT_RATIO_FIELD_NUMBER = 2;
    private float aspectRatio_;
    /**
     * <pre>
     * Aspect ratio to crop to. This value is used for all crop operations.
     * </pre>
     *
     * <code>optional float aspect_ratio = 2 [default = 1];</code>
     * @return Whether the aspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasAspectRatio() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Aspect ratio to crop to. This value is used for all crop operations.
     * </pre>
     *
     * <code>optional float aspect_ratio = 2 [default = 1];</code>
     * @return The aspectRatio.
     */
    @java.lang.Override
    public float getAspectRatio() {
      return aspectRatio_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < operations_.size(); i++) {
        output.writeMessage(1, operations_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(2, aspectRatio_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < operations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, operations_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, aspectRatio_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio other = (object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio) obj;

      if (!getOperationsList()
          .equals(other.getOperationsList())) return false;
      if (hasAspectRatio() != other.hasAspectRatio()) return false;
      if (hasAspectRatio()) {
        if (java.lang.Float.floatToIntBits(getAspectRatio())
            != java.lang.Float.floatToIntBits(
                other.getAspectRatio())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOperationsCount() > 0) {
        hash = (37 * hash) + OPERATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOperationsList().hashCode();
      }
      if (hasAspectRatio()) {
        hash = (37 * hash) + ASPECT_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getAspectRatio());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly crops a image to a fixed aspect ratio according to:
     *     Liu et al., SSD: Single shot multibox detector.
     * Multiple SSDRandomCropFixedAspectRatioOperations are defined by this
     * preprocessing step. Only one operation (chosen at random) is actually
     * performed on an image.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.SSDRandomCropFixedAspectRatio}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.SSDRandomCropFixedAspectRatio)
        object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropFixedAspectRatio_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropFixedAspectRatio_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.class, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOperationsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (operationsBuilder_ == null) {
          operations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          operationsBuilder_.clear();
        }
        aspectRatio_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropFixedAspectRatio_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio build() {
        object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio buildPartial() {
        object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio result = new object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (operationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            operations_ = java.util.Collections.unmodifiableList(operations_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.operations_ = operations_;
        } else {
          result.operations_ = operationsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.aspectRatio_ = aspectRatio_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio) {
          return mergeFrom((object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio other) {
        if (other == object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio.getDefaultInstance()) return this;
        if (operationsBuilder_ == null) {
          if (!other.operations_.isEmpty()) {
            if (operations_.isEmpty()) {
              operations_ = other.operations_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOperationsIsMutable();
              operations_.addAll(other.operations_);
            }
            onChanged();
          }
        } else {
          if (!other.operations_.isEmpty()) {
            if (operationsBuilder_.isEmpty()) {
              operationsBuilder_.dispose();
              operationsBuilder_ = null;
              operations_ = other.operations_;
              bitField0_ = (bitField0_ & ~0x00000001);
              operationsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOperationsFieldBuilder() : null;
            } else {
              operationsBuilder_.addAllMessages(other.operations_);
            }
          }
        }
        if (other.hasAspectRatio()) {
          setAspectRatio(other.getAspectRatio());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation> operations_ =
        java.util.Collections.emptyList();
      private void ensureOperationsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          operations_ = new java.util.ArrayList<object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation>(operations_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.Builder, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperationOrBuilder> operationsBuilder_;

      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public java.util.List<object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation> getOperationsList() {
        if (operationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(operations_);
        } else {
          return operationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public int getOperationsCount() {
        if (operationsBuilder_ == null) {
          return operations_.size();
        } else {
          return operationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation getOperations(int index) {
        if (operationsBuilder_ == null) {
          return operations_.get(index);
        } else {
          return operationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder setOperations(
          int index, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.set(index, value);
          onChanged();
        } else {
          operationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder setOperations(
          int index, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.Builder builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.set(index, builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder addOperations(object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.add(value);
          onChanged();
        } else {
          operationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder addOperations(
          int index, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.add(index, value);
          onChanged();
        } else {
          operationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder addOperations(
          object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.Builder builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.add(builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder addOperations(
          int index, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.Builder builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.add(index, builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder addAllOperations(
          java.lang.Iterable<? extends object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation> values) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, operations_);
          onChanged();
        } else {
          operationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder clearOperations() {
        if (operationsBuilder_ == null) {
          operations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          operationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder removeOperations(int index) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.remove(index);
          onChanged();
        } else {
          operationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.Builder getOperationsBuilder(
          int index) {
        return getOperationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperationOrBuilder getOperationsOrBuilder(
          int index) {
        if (operationsBuilder_ == null) {
          return operations_.get(index);  } else {
          return operationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public java.util.List<? extends object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperationOrBuilder>
           getOperationsOrBuilderList() {
        if (operationsBuilder_ != null) {
          return operationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(operations_);
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.Builder addOperationsBuilder() {
        return getOperationsFieldBuilder().addBuilder(
            object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.getDefaultInstance());
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.Builder addOperationsBuilder(
          int index) {
        return getOperationsFieldBuilder().addBuilder(
            index, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.getDefaultInstance());
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropFixedAspectRatioOperation operations = 1;</code>
       */
      public java.util.List<object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.Builder>
           getOperationsBuilderList() {
        return getOperationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.Builder, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperationOrBuilder>
          getOperationsFieldBuilder() {
        if (operationsBuilder_ == null) {
          operationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperation.Builder, object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatioOperationOrBuilder>(
                  operations_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          operations_ = null;
        }
        return operationsBuilder_;
      }

      private float aspectRatio_ = 1F;
      /**
       * <pre>
       * Aspect ratio to crop to. This value is used for all crop operations.
       * </pre>
       *
       * <code>optional float aspect_ratio = 2 [default = 1];</code>
       * @return Whether the aspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasAspectRatio() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Aspect ratio to crop to. This value is used for all crop operations.
       * </pre>
       *
       * <code>optional float aspect_ratio = 2 [default = 1];</code>
       * @return The aspectRatio.
       */
      @java.lang.Override
      public float getAspectRatio() {
        return aspectRatio_;
      }
      /**
       * <pre>
       * Aspect ratio to crop to. This value is used for all crop operations.
       * </pre>
       *
       * <code>optional float aspect_ratio = 2 [default = 1];</code>
       * @param value The aspectRatio to set.
       * @return This builder for chaining.
       */
      public Builder setAspectRatio(float value) {
        bitField0_ |= 0x00000002;
        aspectRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Aspect ratio to crop to. This value is used for all crop operations.
       * </pre>
       *
       * <code>optional float aspect_ratio = 2 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearAspectRatio() {
        bitField0_ = (bitField0_ & ~0x00000002);
        aspectRatio_ = 1F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.SSDRandomCropFixedAspectRatio)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.SSDRandomCropFixedAspectRatio)
    private static final object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio();
    }

    public static object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSDRandomCropFixedAspectRatio>
        PARSER = new com.google.protobuf.AbstractParser<SSDRandomCropFixedAspectRatio>() {
      @java.lang.Override
      public SSDRandomCropFixedAspectRatio parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSDRandomCropFixedAspectRatio(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSDRandomCropFixedAspectRatio> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSDRandomCropFixedAspectRatio> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropFixedAspectRatio getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSDRandomCropPadFixedAspectRatioOperationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Cropped image must cover at least this fraction of one original bounding
     * box.
     * </pre>
     *
     * <code>optional float min_object_covered = 1;</code>
     * @return Whether the minObjectCovered field is set.
     */
    boolean hasMinObjectCovered();
    /**
     * <pre>
     * Cropped image must cover at least this fraction of one original bounding
     * box.
     * </pre>
     *
     * <code>optional float min_object_covered = 1;</code>
     * @return The minObjectCovered.
     */
    float getMinObjectCovered();

    /**
     * <pre>
     * The aspect ratio of the cropped image must be within the range of
     * [min_aspect_ratio, max_aspect_ratio].
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2;</code>
     * @return Whether the minAspectRatio field is set.
     */
    boolean hasMinAspectRatio();
    /**
     * <pre>
     * The aspect ratio of the cropped image must be within the range of
     * [min_aspect_ratio, max_aspect_ratio].
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2;</code>
     * @return The minAspectRatio.
     */
    float getMinAspectRatio();

    /**
     * <code>optional float max_aspect_ratio = 3;</code>
     * @return Whether the maxAspectRatio field is set.
     */
    boolean hasMaxAspectRatio();
    /**
     * <code>optional float max_aspect_ratio = 3;</code>
     * @return The maxAspectRatio.
     */
    float getMaxAspectRatio();

    /**
     * <pre>
     * The area of the cropped image must be within the range of
     * [min_area, max_area].
     * </pre>
     *
     * <code>optional float min_area = 4;</code>
     * @return Whether the minArea field is set.
     */
    boolean hasMinArea();
    /**
     * <pre>
     * The area of the cropped image must be within the range of
     * [min_area, max_area].
     * </pre>
     *
     * <code>optional float min_area = 4;</code>
     * @return The minArea.
     */
    float getMinArea();

    /**
     * <code>optional float max_area = 5;</code>
     * @return Whether the maxArea field is set.
     */
    boolean hasMaxArea();
    /**
     * <code>optional float max_area = 5;</code>
     * @return The maxArea.
     */
    float getMaxArea();

    /**
     * <pre>
     * Cropped box area ratio must be above this threhold to be kept.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6;</code>
     * @return Whether the overlapThresh field is set.
     */
    boolean hasOverlapThresh();
    /**
     * <pre>
     * Cropped box area ratio must be above this threhold to be kept.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6;</code>
     * @return The overlapThresh.
     */
    float getOverlapThresh();

    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 8 [default = true];</code>
     * @return Whether the clipBoxes field is set.
     */
    boolean hasClipBoxes();
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 8 [default = true];</code>
     * @return The clipBoxes.
     */
    boolean getClipBoxes();

    /**
     * <pre>
     * Probability a crop operation is skipped.
     * </pre>
     *
     * <code>optional float random_coef = 7;</code>
     * @return Whether the randomCoef field is set.
     */
    boolean hasRandomCoef();
    /**
     * <pre>
     * Probability a crop operation is skipped.
     * </pre>
     *
     * <code>optional float random_coef = 7;</code>
     * @return The randomCoef.
     */
    float getRandomCoef();
  }
  /**
   * Protobuf type {@code object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation}
   */
  public static final class SSDRandomCropPadFixedAspectRatioOperation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation)
      SSDRandomCropPadFixedAspectRatioOperationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SSDRandomCropPadFixedAspectRatioOperation.newBuilder() to construct.
    private SSDRandomCropPadFixedAspectRatioOperation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSDRandomCropPadFixedAspectRatioOperation() {
      clipBoxes_ = true;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SSDRandomCropPadFixedAspectRatioOperation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSDRandomCropPadFixedAspectRatioOperation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              minObjectCovered_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              minAspectRatio_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              maxAspectRatio_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              minArea_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              maxArea_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              overlapThresh_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000080;
              randomCoef_ = input.readFloat();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              clipBoxes_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatioOperation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatioOperation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.class, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.Builder.class);
    }

    private int bitField0_;
    public static final int MIN_OBJECT_COVERED_FIELD_NUMBER = 1;
    private float minObjectCovered_;
    /**
     * <pre>
     * Cropped image must cover at least this fraction of one original bounding
     * box.
     * </pre>
     *
     * <code>optional float min_object_covered = 1;</code>
     * @return Whether the minObjectCovered field is set.
     */
    @java.lang.Override
    public boolean hasMinObjectCovered() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Cropped image must cover at least this fraction of one original bounding
     * box.
     * </pre>
     *
     * <code>optional float min_object_covered = 1;</code>
     * @return The minObjectCovered.
     */
    @java.lang.Override
    public float getMinObjectCovered() {
      return minObjectCovered_;
    }

    public static final int MIN_ASPECT_RATIO_FIELD_NUMBER = 2;
    private float minAspectRatio_;
    /**
     * <pre>
     * The aspect ratio of the cropped image must be within the range of
     * [min_aspect_ratio, max_aspect_ratio].
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2;</code>
     * @return Whether the minAspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasMinAspectRatio() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The aspect ratio of the cropped image must be within the range of
     * [min_aspect_ratio, max_aspect_ratio].
     * </pre>
     *
     * <code>optional float min_aspect_ratio = 2;</code>
     * @return The minAspectRatio.
     */
    @java.lang.Override
    public float getMinAspectRatio() {
      return minAspectRatio_;
    }

    public static final int MAX_ASPECT_RATIO_FIELD_NUMBER = 3;
    private float maxAspectRatio_;
    /**
     * <code>optional float max_aspect_ratio = 3;</code>
     * @return Whether the maxAspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasMaxAspectRatio() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional float max_aspect_ratio = 3;</code>
     * @return The maxAspectRatio.
     */
    @java.lang.Override
    public float getMaxAspectRatio() {
      return maxAspectRatio_;
    }

    public static final int MIN_AREA_FIELD_NUMBER = 4;
    private float minArea_;
    /**
     * <pre>
     * The area of the cropped image must be within the range of
     * [min_area, max_area].
     * </pre>
     *
     * <code>optional float min_area = 4;</code>
     * @return Whether the minArea field is set.
     */
    @java.lang.Override
    public boolean hasMinArea() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The area of the cropped image must be within the range of
     * [min_area, max_area].
     * </pre>
     *
     * <code>optional float min_area = 4;</code>
     * @return The minArea.
     */
    @java.lang.Override
    public float getMinArea() {
      return minArea_;
    }

    public static final int MAX_AREA_FIELD_NUMBER = 5;
    private float maxArea_;
    /**
     * <code>optional float max_area = 5;</code>
     * @return Whether the maxArea field is set.
     */
    @java.lang.Override
    public boolean hasMaxArea() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional float max_area = 5;</code>
     * @return The maxArea.
     */
    @java.lang.Override
    public float getMaxArea() {
      return maxArea_;
    }

    public static final int OVERLAP_THRESH_FIELD_NUMBER = 6;
    private float overlapThresh_;
    /**
     * <pre>
     * Cropped box area ratio must be above this threhold to be kept.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6;</code>
     * @return Whether the overlapThresh field is set.
     */
    @java.lang.Override
    public boolean hasOverlapThresh() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Cropped box area ratio must be above this threhold to be kept.
     * </pre>
     *
     * <code>optional float overlap_thresh = 6;</code>
     * @return The overlapThresh.
     */
    @java.lang.Override
    public float getOverlapThresh() {
      return overlapThresh_;
    }

    public static final int CLIP_BOXES_FIELD_NUMBER = 8;
    private boolean clipBoxes_;
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 8 [default = true];</code>
     * @return Whether the clipBoxes field is set.
     */
    @java.lang.Override
    public boolean hasClipBoxes() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Whether to clip the boxes to the cropped image.
     * </pre>
     *
     * <code>optional bool clip_boxes = 8 [default = true];</code>
     * @return The clipBoxes.
     */
    @java.lang.Override
    public boolean getClipBoxes() {
      return clipBoxes_;
    }

    public static final int RANDOM_COEF_FIELD_NUMBER = 7;
    private float randomCoef_;
    /**
     * <pre>
     * Probability a crop operation is skipped.
     * </pre>
     *
     * <code>optional float random_coef = 7;</code>
     * @return Whether the randomCoef field is set.
     */
    @java.lang.Override
    public boolean hasRandomCoef() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Probability a crop operation is skipped.
     * </pre>
     *
     * <code>optional float random_coef = 7;</code>
     * @return The randomCoef.
     */
    @java.lang.Override
    public float getRandomCoef() {
      return randomCoef_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, minObjectCovered_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, minAspectRatio_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, maxAspectRatio_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(4, minArea_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeFloat(5, maxArea_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFloat(6, overlapThresh_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeFloat(7, randomCoef_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeBool(8, clipBoxes_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, minObjectCovered_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, minAspectRatio_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, maxAspectRatio_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, minArea_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, maxArea_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, overlapThresh_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, randomCoef_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, clipBoxes_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation other = (object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation) obj;

      if (hasMinObjectCovered() != other.hasMinObjectCovered()) return false;
      if (hasMinObjectCovered()) {
        if (java.lang.Float.floatToIntBits(getMinObjectCovered())
            != java.lang.Float.floatToIntBits(
                other.getMinObjectCovered())) return false;
      }
      if (hasMinAspectRatio() != other.hasMinAspectRatio()) return false;
      if (hasMinAspectRatio()) {
        if (java.lang.Float.floatToIntBits(getMinAspectRatio())
            != java.lang.Float.floatToIntBits(
                other.getMinAspectRatio())) return false;
      }
      if (hasMaxAspectRatio() != other.hasMaxAspectRatio()) return false;
      if (hasMaxAspectRatio()) {
        if (java.lang.Float.floatToIntBits(getMaxAspectRatio())
            != java.lang.Float.floatToIntBits(
                other.getMaxAspectRatio())) return false;
      }
      if (hasMinArea() != other.hasMinArea()) return false;
      if (hasMinArea()) {
        if (java.lang.Float.floatToIntBits(getMinArea())
            != java.lang.Float.floatToIntBits(
                other.getMinArea())) return false;
      }
      if (hasMaxArea() != other.hasMaxArea()) return false;
      if (hasMaxArea()) {
        if (java.lang.Float.floatToIntBits(getMaxArea())
            != java.lang.Float.floatToIntBits(
                other.getMaxArea())) return false;
      }
      if (hasOverlapThresh() != other.hasOverlapThresh()) return false;
      if (hasOverlapThresh()) {
        if (java.lang.Float.floatToIntBits(getOverlapThresh())
            != java.lang.Float.floatToIntBits(
                other.getOverlapThresh())) return false;
      }
      if (hasClipBoxes() != other.hasClipBoxes()) return false;
      if (hasClipBoxes()) {
        if (getClipBoxes()
            != other.getClipBoxes()) return false;
      }
      if (hasRandomCoef() != other.hasRandomCoef()) return false;
      if (hasRandomCoef()) {
        if (java.lang.Float.floatToIntBits(getRandomCoef())
            != java.lang.Float.floatToIntBits(
                other.getRandomCoef())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMinObjectCovered()) {
        hash = (37 * hash) + MIN_OBJECT_COVERED_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinObjectCovered());
      }
      if (hasMinAspectRatio()) {
        hash = (37 * hash) + MIN_ASPECT_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinAspectRatio());
      }
      if (hasMaxAspectRatio()) {
        hash = (37 * hash) + MAX_ASPECT_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxAspectRatio());
      }
      if (hasMinArea()) {
        hash = (37 * hash) + MIN_AREA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinArea());
      }
      if (hasMaxArea()) {
        hash = (37 * hash) + MAX_AREA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxArea());
      }
      if (hasOverlapThresh()) {
        hash = (37 * hash) + OVERLAP_THRESH_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getOverlapThresh());
      }
      if (hasClipBoxes()) {
        hash = (37 * hash) + CLIP_BOXES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getClipBoxes());
      }
      if (hasRandomCoef()) {
        hash = (37 * hash) + RANDOM_COEF_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRandomCoef());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation)
        object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatioOperation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatioOperation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.class, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        minObjectCovered_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        minAspectRatio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxAspectRatio_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        minArea_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxArea_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        overlapThresh_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        clipBoxes_ = true;
        bitField0_ = (bitField0_ & ~0x00000040);
        randomCoef_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatioOperation_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation build() {
        object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation buildPartial() {
        object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation result = new object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.minObjectCovered_ = minObjectCovered_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.minAspectRatio_ = minAspectRatio_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.maxAspectRatio_ = maxAspectRatio_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.minArea_ = minArea_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.maxArea_ = maxArea_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.overlapThresh_ = overlapThresh_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000040;
        }
        result.clipBoxes_ = clipBoxes_;
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.randomCoef_ = randomCoef_;
          to_bitField0_ |= 0x00000080;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation) {
          return mergeFrom((object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation other) {
        if (other == object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.getDefaultInstance()) return this;
        if (other.hasMinObjectCovered()) {
          setMinObjectCovered(other.getMinObjectCovered());
        }
        if (other.hasMinAspectRatio()) {
          setMinAspectRatio(other.getMinAspectRatio());
        }
        if (other.hasMaxAspectRatio()) {
          setMaxAspectRatio(other.getMaxAspectRatio());
        }
        if (other.hasMinArea()) {
          setMinArea(other.getMinArea());
        }
        if (other.hasMaxArea()) {
          setMaxArea(other.getMaxArea());
        }
        if (other.hasOverlapThresh()) {
          setOverlapThresh(other.getOverlapThresh());
        }
        if (other.hasClipBoxes()) {
          setClipBoxes(other.getClipBoxes());
        }
        if (other.hasRandomCoef()) {
          setRandomCoef(other.getRandomCoef());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float minObjectCovered_ ;
      /**
       * <pre>
       * Cropped image must cover at least this fraction of one original bounding
       * box.
       * </pre>
       *
       * <code>optional float min_object_covered = 1;</code>
       * @return Whether the minObjectCovered field is set.
       */
      @java.lang.Override
      public boolean hasMinObjectCovered() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Cropped image must cover at least this fraction of one original bounding
       * box.
       * </pre>
       *
       * <code>optional float min_object_covered = 1;</code>
       * @return The minObjectCovered.
       */
      @java.lang.Override
      public float getMinObjectCovered() {
        return minObjectCovered_;
      }
      /**
       * <pre>
       * Cropped image must cover at least this fraction of one original bounding
       * box.
       * </pre>
       *
       * <code>optional float min_object_covered = 1;</code>
       * @param value The minObjectCovered to set.
       * @return This builder for chaining.
       */
      public Builder setMinObjectCovered(float value) {
        bitField0_ |= 0x00000001;
        minObjectCovered_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cropped image must cover at least this fraction of one original bounding
       * box.
       * </pre>
       *
       * <code>optional float min_object_covered = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinObjectCovered() {
        bitField0_ = (bitField0_ & ~0x00000001);
        minObjectCovered_ = 0F;
        onChanged();
        return this;
      }

      private float minAspectRatio_ ;
      /**
       * <pre>
       * The aspect ratio of the cropped image must be within the range of
       * [min_aspect_ratio, max_aspect_ratio].
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2;</code>
       * @return Whether the minAspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasMinAspectRatio() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The aspect ratio of the cropped image must be within the range of
       * [min_aspect_ratio, max_aspect_ratio].
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2;</code>
       * @return The minAspectRatio.
       */
      @java.lang.Override
      public float getMinAspectRatio() {
        return minAspectRatio_;
      }
      /**
       * <pre>
       * The aspect ratio of the cropped image must be within the range of
       * [min_aspect_ratio, max_aspect_ratio].
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2;</code>
       * @param value The minAspectRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMinAspectRatio(float value) {
        bitField0_ |= 0x00000002;
        minAspectRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The aspect ratio of the cropped image must be within the range of
       * [min_aspect_ratio, max_aspect_ratio].
       * </pre>
       *
       * <code>optional float min_aspect_ratio = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinAspectRatio() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minAspectRatio_ = 0F;
        onChanged();
        return this;
      }

      private float maxAspectRatio_ ;
      /**
       * <code>optional float max_aspect_ratio = 3;</code>
       * @return Whether the maxAspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasMaxAspectRatio() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional float max_aspect_ratio = 3;</code>
       * @return The maxAspectRatio.
       */
      @java.lang.Override
      public float getMaxAspectRatio() {
        return maxAspectRatio_;
      }
      /**
       * <code>optional float max_aspect_ratio = 3;</code>
       * @param value The maxAspectRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMaxAspectRatio(float value) {
        bitField0_ |= 0x00000004;
        maxAspectRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_aspect_ratio = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxAspectRatio() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxAspectRatio_ = 0F;
        onChanged();
        return this;
      }

      private float minArea_ ;
      /**
       * <pre>
       * The area of the cropped image must be within the range of
       * [min_area, max_area].
       * </pre>
       *
       * <code>optional float min_area = 4;</code>
       * @return Whether the minArea field is set.
       */
      @java.lang.Override
      public boolean hasMinArea() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The area of the cropped image must be within the range of
       * [min_area, max_area].
       * </pre>
       *
       * <code>optional float min_area = 4;</code>
       * @return The minArea.
       */
      @java.lang.Override
      public float getMinArea() {
        return minArea_;
      }
      /**
       * <pre>
       * The area of the cropped image must be within the range of
       * [min_area, max_area].
       * </pre>
       *
       * <code>optional float min_area = 4;</code>
       * @param value The minArea to set.
       * @return This builder for chaining.
       */
      public Builder setMinArea(float value) {
        bitField0_ |= 0x00000008;
        minArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The area of the cropped image must be within the range of
       * [min_area, max_area].
       * </pre>
       *
       * <code>optional float min_area = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinArea() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minArea_ = 0F;
        onChanged();
        return this;
      }

      private float maxArea_ ;
      /**
       * <code>optional float max_area = 5;</code>
       * @return Whether the maxArea field is set.
       */
      @java.lang.Override
      public boolean hasMaxArea() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional float max_area = 5;</code>
       * @return The maxArea.
       */
      @java.lang.Override
      public float getMaxArea() {
        return maxArea_;
      }
      /**
       * <code>optional float max_area = 5;</code>
       * @param value The maxArea to set.
       * @return This builder for chaining.
       */
      public Builder setMaxArea(float value) {
        bitField0_ |= 0x00000010;
        maxArea_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_area = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxArea() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxArea_ = 0F;
        onChanged();
        return this;
      }

      private float overlapThresh_ ;
      /**
       * <pre>
       * Cropped box area ratio must be above this threhold to be kept.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6;</code>
       * @return Whether the overlapThresh field is set.
       */
      @java.lang.Override
      public boolean hasOverlapThresh() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Cropped box area ratio must be above this threhold to be kept.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6;</code>
       * @return The overlapThresh.
       */
      @java.lang.Override
      public float getOverlapThresh() {
        return overlapThresh_;
      }
      /**
       * <pre>
       * Cropped box area ratio must be above this threhold to be kept.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6;</code>
       * @param value The overlapThresh to set.
       * @return This builder for chaining.
       */
      public Builder setOverlapThresh(float value) {
        bitField0_ |= 0x00000020;
        overlapThresh_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cropped box area ratio must be above this threhold to be kept.
       * </pre>
       *
       * <code>optional float overlap_thresh = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearOverlapThresh() {
        bitField0_ = (bitField0_ & ~0x00000020);
        overlapThresh_ = 0F;
        onChanged();
        return this;
      }

      private boolean clipBoxes_ = true;
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 8 [default = true];</code>
       * @return Whether the clipBoxes field is set.
       */
      @java.lang.Override
      public boolean hasClipBoxes() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 8 [default = true];</code>
       * @return The clipBoxes.
       */
      @java.lang.Override
      public boolean getClipBoxes() {
        return clipBoxes_;
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 8 [default = true];</code>
       * @param value The clipBoxes to set.
       * @return This builder for chaining.
       */
      public Builder setClipBoxes(boolean value) {
        bitField0_ |= 0x00000040;
        clipBoxes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to clip the boxes to the cropped image.
       * </pre>
       *
       * <code>optional bool clip_boxes = 8 [default = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearClipBoxes() {
        bitField0_ = (bitField0_ & ~0x00000040);
        clipBoxes_ = true;
        onChanged();
        return this;
      }

      private float randomCoef_ ;
      /**
       * <pre>
       * Probability a crop operation is skipped.
       * </pre>
       *
       * <code>optional float random_coef = 7;</code>
       * @return Whether the randomCoef field is set.
       */
      @java.lang.Override
      public boolean hasRandomCoef() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Probability a crop operation is skipped.
       * </pre>
       *
       * <code>optional float random_coef = 7;</code>
       * @return The randomCoef.
       */
      @java.lang.Override
      public float getRandomCoef() {
        return randomCoef_;
      }
      /**
       * <pre>
       * Probability a crop operation is skipped.
       * </pre>
       *
       * <code>optional float random_coef = 7;</code>
       * @param value The randomCoef to set.
       * @return This builder for chaining.
       */
      public Builder setRandomCoef(float value) {
        bitField0_ |= 0x00000080;
        randomCoef_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Probability a crop operation is skipped.
       * </pre>
       *
       * <code>optional float random_coef = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRandomCoef() {
        bitField0_ = (bitField0_ & ~0x00000080);
        randomCoef_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation)
    private static final object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation();
    }

    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSDRandomCropPadFixedAspectRatioOperation>
        PARSER = new com.google.protobuf.AbstractParser<SSDRandomCropPadFixedAspectRatioOperation>() {
      @java.lang.Override
      public SSDRandomCropPadFixedAspectRatioOperation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSDRandomCropPadFixedAspectRatioOperation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSDRandomCropPadFixedAspectRatioOperation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSDRandomCropPadFixedAspectRatioOperation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SSDRandomCropPadFixedAspectRatioOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.SSDRandomCropPadFixedAspectRatio)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
     */
    java.util.List<object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation>
        getOperationsList();
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
     */
    object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation getOperations(int index);
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
     */
    int getOperationsCount();
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
     */
    java.util.List<? extends object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperationOrBuilder>
        getOperationsOrBuilderList();
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
     */
    object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperationOrBuilder getOperationsOrBuilder(
        int index);

    /**
     * <pre>
     * Aspect ratio to pad to. This value is used for all crop and pad operations.
     * </pre>
     *
     * <code>optional float aspect_ratio = 2 [default = 1];</code>
     * @return Whether the aspectRatio field is set.
     */
    boolean hasAspectRatio();
    /**
     * <pre>
     * Aspect ratio to pad to. This value is used for all crop and pad operations.
     * </pre>
     *
     * <code>optional float aspect_ratio = 2 [default = 1];</code>
     * @return The aspectRatio.
     */
    float getAspectRatio();

    /**
     * <pre>
     * Min ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 3;</code>
     * @return A list containing the minPaddedSizeRatio.
     */
    java.util.List<java.lang.Float> getMinPaddedSizeRatioList();
    /**
     * <pre>
     * Min ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 3;</code>
     * @return The count of minPaddedSizeRatio.
     */
    int getMinPaddedSizeRatioCount();
    /**
     * <pre>
     * Min ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 3;</code>
     * @param index The index of the element to return.
     * @return The minPaddedSizeRatio at the given index.
     */
    float getMinPaddedSizeRatio(int index);

    /**
     * <pre>
     * Max ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float max_padded_size_ratio = 4;</code>
     * @return A list containing the maxPaddedSizeRatio.
     */
    java.util.List<java.lang.Float> getMaxPaddedSizeRatioList();
    /**
     * <pre>
     * Max ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float max_padded_size_ratio = 4;</code>
     * @return The count of maxPaddedSizeRatio.
     */
    int getMaxPaddedSizeRatioCount();
    /**
     * <pre>
     * Max ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float max_padded_size_ratio = 4;</code>
     * @param index The index of the element to return.
     * @return The maxPaddedSizeRatio at the given index.
     */
    float getMaxPaddedSizeRatio(int index);
  }
  /**
   * <pre>
   * Randomly crops and pads an image to a fixed aspect ratio according to:
   *     Liu et al., SSD: Single shot multibox detector.
   * Multiple SSDRandomCropPadFixedAspectRatioOperations are defined by this
   * preprocessing step. Only one operation (chosen at random) is actually
   * performed on an image.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.SSDRandomCropPadFixedAspectRatio}
   */
  public static final class SSDRandomCropPadFixedAspectRatio extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.SSDRandomCropPadFixedAspectRatio)
      SSDRandomCropPadFixedAspectRatioOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SSDRandomCropPadFixedAspectRatio.newBuilder() to construct.
    private SSDRandomCropPadFixedAspectRatio(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SSDRandomCropPadFixedAspectRatio() {
      operations_ = java.util.Collections.emptyList();
      aspectRatio_ = 1F;
      minPaddedSizeRatio_ = emptyFloatList();
      maxPaddedSizeRatio_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SSDRandomCropPadFixedAspectRatio();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SSDRandomCropPadFixedAspectRatio(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                operations_ = new java.util.ArrayList<object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation>();
                mutable_bitField0_ |= 0x00000001;
              }
              operations_.add(
                  input.readMessage(object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.PARSER, extensionRegistry));
              break;
            }
            case 21: {
              bitField0_ |= 0x00000001;
              aspectRatio_ = input.readFloat();
              break;
            }
            case 29: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                minPaddedSizeRatio_ = newFloatList();
                mutable_bitField0_ |= 0x00000004;
              }
              minPaddedSizeRatio_.addFloat(input.readFloat());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                minPaddedSizeRatio_ = newFloatList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                minPaddedSizeRatio_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 37: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                maxPaddedSizeRatio_ = newFloatList();
                mutable_bitField0_ |= 0x00000008;
              }
              maxPaddedSizeRatio_.addFloat(input.readFloat());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                maxPaddedSizeRatio_ = newFloatList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                maxPaddedSizeRatio_.addFloat(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          operations_ = java.util.Collections.unmodifiableList(operations_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          minPaddedSizeRatio_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          maxPaddedSizeRatio_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatio_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatio_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.class, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.Builder.class);
    }

    private int bitField0_;
    public static final int OPERATIONS_FIELD_NUMBER = 1;
    private java.util.List<object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation> operations_;
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
     */
    @java.lang.Override
    public java.util.List<object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation> getOperationsList() {
      return operations_;
    }
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperationOrBuilder>
        getOperationsOrBuilderList() {
      return operations_;
    }
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
     */
    @java.lang.Override
    public int getOperationsCount() {
      return operations_.size();
    }
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation getOperations(int index) {
      return operations_.get(index);
    }
    /**
     * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
     */
    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperationOrBuilder getOperationsOrBuilder(
        int index) {
      return operations_.get(index);
    }

    public static final int ASPECT_RATIO_FIELD_NUMBER = 2;
    private float aspectRatio_;
    /**
     * <pre>
     * Aspect ratio to pad to. This value is used for all crop and pad operations.
     * </pre>
     *
     * <code>optional float aspect_ratio = 2 [default = 1];</code>
     * @return Whether the aspectRatio field is set.
     */
    @java.lang.Override
    public boolean hasAspectRatio() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Aspect ratio to pad to. This value is used for all crop and pad operations.
     * </pre>
     *
     * <code>optional float aspect_ratio = 2 [default = 1];</code>
     * @return The aspectRatio.
     */
    @java.lang.Override
    public float getAspectRatio() {
      return aspectRatio_;
    }

    public static final int MIN_PADDED_SIZE_RATIO_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.FloatList minPaddedSizeRatio_;
    /**
     * <pre>
     * Min ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 3;</code>
     * @return A list containing the minPaddedSizeRatio.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getMinPaddedSizeRatioList() {
      return minPaddedSizeRatio_;
    }
    /**
     * <pre>
     * Min ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 3;</code>
     * @return The count of minPaddedSizeRatio.
     */
    public int getMinPaddedSizeRatioCount() {
      return minPaddedSizeRatio_.size();
    }
    /**
     * <pre>
     * Min ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float min_padded_size_ratio = 3;</code>
     * @param index The index of the element to return.
     * @return The minPaddedSizeRatio at the given index.
     */
    public float getMinPaddedSizeRatio(int index) {
      return minPaddedSizeRatio_.getFloat(index);
    }

    public static final int MAX_PADDED_SIZE_RATIO_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.FloatList maxPaddedSizeRatio_;
    /**
     * <pre>
     * Max ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float max_padded_size_ratio = 4;</code>
     * @return A list containing the maxPaddedSizeRatio.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getMaxPaddedSizeRatioList() {
      return maxPaddedSizeRatio_;
    }
    /**
     * <pre>
     * Max ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float max_padded_size_ratio = 4;</code>
     * @return The count of maxPaddedSizeRatio.
     */
    public int getMaxPaddedSizeRatioCount() {
      return maxPaddedSizeRatio_.size();
    }
    /**
     * <pre>
     * Max ratio of padded image height and width to the input image's height and
     * width. Two entries per operation.
     * </pre>
     *
     * <code>repeated float max_padded_size_ratio = 4;</code>
     * @param index The index of the element to return.
     * @return The maxPaddedSizeRatio at the given index.
     */
    public float getMaxPaddedSizeRatio(int index) {
      return maxPaddedSizeRatio_.getFloat(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < operations_.size(); i++) {
        output.writeMessage(1, operations_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(2, aspectRatio_);
      }
      for (int i = 0; i < minPaddedSizeRatio_.size(); i++) {
        output.writeFloat(3, minPaddedSizeRatio_.getFloat(i));
      }
      for (int i = 0; i < maxPaddedSizeRatio_.size(); i++) {
        output.writeFloat(4, maxPaddedSizeRatio_.getFloat(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < operations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, operations_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, aspectRatio_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getMinPaddedSizeRatioList().size();
        size += dataSize;
        size += 1 * getMinPaddedSizeRatioList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getMaxPaddedSizeRatioList().size();
        size += dataSize;
        size += 1 * getMaxPaddedSizeRatioList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio other = (object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio) obj;

      if (!getOperationsList()
          .equals(other.getOperationsList())) return false;
      if (hasAspectRatio() != other.hasAspectRatio()) return false;
      if (hasAspectRatio()) {
        if (java.lang.Float.floatToIntBits(getAspectRatio())
            != java.lang.Float.floatToIntBits(
                other.getAspectRatio())) return false;
      }
      if (!getMinPaddedSizeRatioList()
          .equals(other.getMinPaddedSizeRatioList())) return false;
      if (!getMaxPaddedSizeRatioList()
          .equals(other.getMaxPaddedSizeRatioList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOperationsCount() > 0) {
        hash = (37 * hash) + OPERATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOperationsList().hashCode();
      }
      if (hasAspectRatio()) {
        hash = (37 * hash) + ASPECT_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getAspectRatio());
      }
      if (getMinPaddedSizeRatioCount() > 0) {
        hash = (37 * hash) + MIN_PADDED_SIZE_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + getMinPaddedSizeRatioList().hashCode();
      }
      if (getMaxPaddedSizeRatioCount() > 0) {
        hash = (37 * hash) + MAX_PADDED_SIZE_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + getMaxPaddedSizeRatioList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly crops and pads an image to a fixed aspect ratio according to:
     *     Liu et al., SSD: Single shot multibox detector.
     * Multiple SSDRandomCropPadFixedAspectRatioOperations are defined by this
     * preprocessing step. Only one operation (chosen at random) is actually
     * performed on an image.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.SSDRandomCropPadFixedAspectRatio}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.SSDRandomCropPadFixedAspectRatio)
        object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatio_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatio_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.class, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOperationsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (operationsBuilder_ == null) {
          operations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          operationsBuilder_.clear();
        }
        aspectRatio_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000002);
        minPaddedSizeRatio_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000004);
        maxPaddedSizeRatio_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatio_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio build() {
        object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio buildPartial() {
        object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio result = new object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (operationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            operations_ = java.util.Collections.unmodifiableList(operations_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.operations_ = operations_;
        } else {
          result.operations_ = operationsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.aspectRatio_ = aspectRatio_;
        if (((bitField0_ & 0x00000004) != 0)) {
          minPaddedSizeRatio_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.minPaddedSizeRatio_ = minPaddedSizeRatio_;
        if (((bitField0_ & 0x00000008) != 0)) {
          maxPaddedSizeRatio_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.maxPaddedSizeRatio_ = maxPaddedSizeRatio_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio) {
          return mergeFrom((object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio other) {
        if (other == object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio.getDefaultInstance()) return this;
        if (operationsBuilder_ == null) {
          if (!other.operations_.isEmpty()) {
            if (operations_.isEmpty()) {
              operations_ = other.operations_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOperationsIsMutable();
              operations_.addAll(other.operations_);
            }
            onChanged();
          }
        } else {
          if (!other.operations_.isEmpty()) {
            if (operationsBuilder_.isEmpty()) {
              operationsBuilder_.dispose();
              operationsBuilder_ = null;
              operations_ = other.operations_;
              bitField0_ = (bitField0_ & ~0x00000001);
              operationsBuilder_ =
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOperationsFieldBuilder() : null;
            } else {
              operationsBuilder_.addAllMessages(other.operations_);
            }
          }
        }
        if (other.hasAspectRatio()) {
          setAspectRatio(other.getAspectRatio());
        }
        if (!other.minPaddedSizeRatio_.isEmpty()) {
          if (minPaddedSizeRatio_.isEmpty()) {
            minPaddedSizeRatio_ = other.minPaddedSizeRatio_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureMinPaddedSizeRatioIsMutable();
            minPaddedSizeRatio_.addAll(other.minPaddedSizeRatio_);
          }
          onChanged();
        }
        if (!other.maxPaddedSizeRatio_.isEmpty()) {
          if (maxPaddedSizeRatio_.isEmpty()) {
            maxPaddedSizeRatio_ = other.maxPaddedSizeRatio_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureMaxPaddedSizeRatioIsMutable();
            maxPaddedSizeRatio_.addAll(other.maxPaddedSizeRatio_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation> operations_ =
        java.util.Collections.emptyList();
      private void ensureOperationsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          operations_ = new java.util.ArrayList<object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation>(operations_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.Builder, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperationOrBuilder> operationsBuilder_;

      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public java.util.List<object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation> getOperationsList() {
        if (operationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(operations_);
        } else {
          return operationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public int getOperationsCount() {
        if (operationsBuilder_ == null) {
          return operations_.size();
        } else {
          return operationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation getOperations(int index) {
        if (operationsBuilder_ == null) {
          return operations_.get(index);
        } else {
          return operationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder setOperations(
          int index, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.set(index, value);
          onChanged();
        } else {
          operationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder setOperations(
          int index, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.Builder builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.set(index, builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder addOperations(object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.add(value);
          onChanged();
        } else {
          operationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder addOperations(
          int index, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation value) {
        if (operationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOperationsIsMutable();
          operations_.add(index, value);
          onChanged();
        } else {
          operationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder addOperations(
          object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.Builder builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.add(builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder addOperations(
          int index, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.Builder builderForValue) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.add(index, builderForValue.build());
          onChanged();
        } else {
          operationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder addAllOperations(
          java.lang.Iterable<? extends object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation> values) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, operations_);
          onChanged();
        } else {
          operationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder clearOperations() {
        if (operationsBuilder_ == null) {
          operations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          operationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public Builder removeOperations(int index) {
        if (operationsBuilder_ == null) {
          ensureOperationsIsMutable();
          operations_.remove(index);
          onChanged();
        } else {
          operationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.Builder getOperationsBuilder(
          int index) {
        return getOperationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperationOrBuilder getOperationsOrBuilder(
          int index) {
        if (operationsBuilder_ == null) {
          return operations_.get(index);  } else {
          return operationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public java.util.List<? extends object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperationOrBuilder>
           getOperationsOrBuilderList() {
        if (operationsBuilder_ != null) {
          return operationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(operations_);
        }
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.Builder addOperationsBuilder() {
        return getOperationsFieldBuilder().addBuilder(
            object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.getDefaultInstance());
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.Builder addOperationsBuilder(
          int index) {
        return getOperationsFieldBuilder().addBuilder(
            index, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.getDefaultInstance());
      }
      /**
       * <code>repeated .object_detection.protos.SSDRandomCropPadFixedAspectRatioOperation operations = 1;</code>
       */
      public java.util.List<object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.Builder>
           getOperationsBuilderList() {
        return getOperationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.Builder, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperationOrBuilder>
          getOperationsFieldBuilder() {
        if (operationsBuilder_ == null) {
          operationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperation.Builder, object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatioOperationOrBuilder>(
                  operations_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          operations_ = null;
        }
        return operationsBuilder_;
      }

      private float aspectRatio_ = 1F;
      /**
       * <pre>
       * Aspect ratio to pad to. This value is used for all crop and pad operations.
       * </pre>
       *
       * <code>optional float aspect_ratio = 2 [default = 1];</code>
       * @return Whether the aspectRatio field is set.
       */
      @java.lang.Override
      public boolean hasAspectRatio() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Aspect ratio to pad to. This value is used for all crop and pad operations.
       * </pre>
       *
       * <code>optional float aspect_ratio = 2 [default = 1];</code>
       * @return The aspectRatio.
       */
      @java.lang.Override
      public float getAspectRatio() {
        return aspectRatio_;
      }
      /**
       * <pre>
       * Aspect ratio to pad to. This value is used for all crop and pad operations.
       * </pre>
       *
       * <code>optional float aspect_ratio = 2 [default = 1];</code>
       * @param value The aspectRatio to set.
       * @return This builder for chaining.
       */
      public Builder setAspectRatio(float value) {
        bitField0_ |= 0x00000002;
        aspectRatio_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Aspect ratio to pad to. This value is used for all crop and pad operations.
       * </pre>
       *
       * <code>optional float aspect_ratio = 2 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearAspectRatio() {
        bitField0_ = (bitField0_ & ~0x00000002);
        aspectRatio_ = 1F;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList minPaddedSizeRatio_ = emptyFloatList();
      private void ensureMinPaddedSizeRatioIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          minPaddedSizeRatio_ = mutableCopy(minPaddedSizeRatio_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * Min ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 3;</code>
       * @return A list containing the minPaddedSizeRatio.
       */
      public java.util.List<java.lang.Float>
          getMinPaddedSizeRatioList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(minPaddedSizeRatio_) : minPaddedSizeRatio_;
      }
      /**
       * <pre>
       * Min ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 3;</code>
       * @return The count of minPaddedSizeRatio.
       */
      public int getMinPaddedSizeRatioCount() {
        return minPaddedSizeRatio_.size();
      }
      /**
       * <pre>
       * Min ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 3;</code>
       * @param index The index of the element to return.
       * @return The minPaddedSizeRatio at the given index.
       */
      public float getMinPaddedSizeRatio(int index) {
        return minPaddedSizeRatio_.getFloat(index);
      }
      /**
       * <pre>
       * Min ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 3;</code>
       * @param index The index to set the value at.
       * @param value The minPaddedSizeRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMinPaddedSizeRatio(
          int index, float value) {
        ensureMinPaddedSizeRatioIsMutable();
        minPaddedSizeRatio_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Min ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 3;</code>
       * @param value The minPaddedSizeRatio to add.
       * @return This builder for chaining.
       */
      public Builder addMinPaddedSizeRatio(float value) {
        ensureMinPaddedSizeRatioIsMutable();
        minPaddedSizeRatio_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Min ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 3;</code>
       * @param values The minPaddedSizeRatio to add.
       * @return This builder for chaining.
       */
      public Builder addAllMinPaddedSizeRatio(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureMinPaddedSizeRatioIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, minPaddedSizeRatio_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Min ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float min_padded_size_ratio = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinPaddedSizeRatio() {
        minPaddedSizeRatio_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList maxPaddedSizeRatio_ = emptyFloatList();
      private void ensureMaxPaddedSizeRatioIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          maxPaddedSizeRatio_ = mutableCopy(maxPaddedSizeRatio_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * Max ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float max_padded_size_ratio = 4;</code>
       * @return A list containing the maxPaddedSizeRatio.
       */
      public java.util.List<java.lang.Float>
          getMaxPaddedSizeRatioList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(maxPaddedSizeRatio_) : maxPaddedSizeRatio_;
      }
      /**
       * <pre>
       * Max ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float max_padded_size_ratio = 4;</code>
       * @return The count of maxPaddedSizeRatio.
       */
      public int getMaxPaddedSizeRatioCount() {
        return maxPaddedSizeRatio_.size();
      }
      /**
       * <pre>
       * Max ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float max_padded_size_ratio = 4;</code>
       * @param index The index of the element to return.
       * @return The maxPaddedSizeRatio at the given index.
       */
      public float getMaxPaddedSizeRatio(int index) {
        return maxPaddedSizeRatio_.getFloat(index);
      }
      /**
       * <pre>
       * Max ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float max_padded_size_ratio = 4;</code>
       * @param index The index to set the value at.
       * @param value The maxPaddedSizeRatio to set.
       * @return This builder for chaining.
       */
      public Builder setMaxPaddedSizeRatio(
          int index, float value) {
        ensureMaxPaddedSizeRatioIsMutable();
        maxPaddedSizeRatio_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float max_padded_size_ratio = 4;</code>
       * @param value The maxPaddedSizeRatio to add.
       * @return This builder for chaining.
       */
      public Builder addMaxPaddedSizeRatio(float value) {
        ensureMaxPaddedSizeRatioIsMutable();
        maxPaddedSizeRatio_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float max_padded_size_ratio = 4;</code>
       * @param values The maxPaddedSizeRatio to add.
       * @return This builder for chaining.
       */
      public Builder addAllMaxPaddedSizeRatio(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureMaxPaddedSizeRatioIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, maxPaddedSizeRatio_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max ratio of padded image height and width to the input image's height and
       * width. Two entries per operation.
       * </pre>
       *
       * <code>repeated float max_padded_size_ratio = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxPaddedSizeRatio() {
        maxPaddedSizeRatio_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.SSDRandomCropPadFixedAspectRatio)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.SSDRandomCropPadFixedAspectRatio)
    private static final object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio();
    }

    public static object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SSDRandomCropPadFixedAspectRatio>
        PARSER = new com.google.protobuf.AbstractParser<SSDRandomCropPadFixedAspectRatio>() {
      @java.lang.Override
      public SSDRandomCropPadFixedAspectRatio parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SSDRandomCropPadFixedAspectRatio(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SSDRandomCropPadFixedAspectRatio> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SSDRandomCropPadFixedAspectRatio> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.SSDRandomCropPadFixedAspectRatio getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConvertClassLogitsToSoftmaxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.ConvertClassLogitsToSoftmax)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Scale to use on logits before applying softmax.
     * </pre>
     *
     * <code>optional float temperature = 1 [default = 1];</code>
     * @return Whether the temperature field is set.
     */
    boolean hasTemperature();
    /**
     * <pre>
     * Scale to use on logits before applying softmax.
     * </pre>
     *
     * <code>optional float temperature = 1 [default = 1];</code>
     * @return The temperature.
     */
    float getTemperature();
  }
  /**
   * <pre>
   * Converts class logits to softmax optionally scaling the values by temperature
   * first.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.ConvertClassLogitsToSoftmax}
   */
  public static final class ConvertClassLogitsToSoftmax extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.ConvertClassLogitsToSoftmax)
      ConvertClassLogitsToSoftmaxOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConvertClassLogitsToSoftmax.newBuilder() to construct.
    private ConvertClassLogitsToSoftmax(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConvertClassLogitsToSoftmax() {
      temperature_ = 1F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConvertClassLogitsToSoftmax();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConvertClassLogitsToSoftmax(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              temperature_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_ConvertClassLogitsToSoftmax_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_ConvertClassLogitsToSoftmax_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.class, object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.Builder.class);
    }

    private int bitField0_;
    public static final int TEMPERATURE_FIELD_NUMBER = 1;
    private float temperature_;
    /**
     * <pre>
     * Scale to use on logits before applying softmax.
     * </pre>
     *
     * <code>optional float temperature = 1 [default = 1];</code>
     * @return Whether the temperature field is set.
     */
    @java.lang.Override
    public boolean hasTemperature() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Scale to use on logits before applying softmax.
     * </pre>
     *
     * <code>optional float temperature = 1 [default = 1];</code>
     * @return The temperature.
     */
    @java.lang.Override
    public float getTemperature() {
      return temperature_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, temperature_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, temperature_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax other = (object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax) obj;

      if (hasTemperature() != other.hasTemperature()) return false;
      if (hasTemperature()) {
        if (java.lang.Float.floatToIntBits(getTemperature())
            != java.lang.Float.floatToIntBits(
                other.getTemperature())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTemperature()) {
        hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTemperature());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Converts class logits to softmax optionally scaling the values by temperature
     * first.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.ConvertClassLogitsToSoftmax}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.ConvertClassLogitsToSoftmax)
        object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmaxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_ConvertClassLogitsToSoftmax_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_ConvertClassLogitsToSoftmax_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.class, object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        temperature_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_ConvertClassLogitsToSoftmax_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax build() {
        object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax buildPartial() {
        object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax result = new object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.temperature_ = temperature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax) {
          return mergeFrom((object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax other) {
        if (other == object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax.getDefaultInstance()) return this;
        if (other.hasTemperature()) {
          setTemperature(other.getTemperature());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float temperature_ = 1F;
      /**
       * <pre>
       * Scale to use on logits before applying softmax.
       * </pre>
       *
       * <code>optional float temperature = 1 [default = 1];</code>
       * @return Whether the temperature field is set.
       */
      @java.lang.Override
      public boolean hasTemperature() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Scale to use on logits before applying softmax.
       * </pre>
       *
       * <code>optional float temperature = 1 [default = 1];</code>
       * @return The temperature.
       */
      @java.lang.Override
      public float getTemperature() {
        return temperature_;
      }
      /**
       * <pre>
       * Scale to use on logits before applying softmax.
       * </pre>
       *
       * <code>optional float temperature = 1 [default = 1];</code>
       * @param value The temperature to set.
       * @return This builder for chaining.
       */
      public Builder setTemperature(float value) {
        bitField0_ |= 0x00000001;
        temperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Scale to use on logits before applying softmax.
       * </pre>
       *
       * <code>optional float temperature = 1 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearTemperature() {
        bitField0_ = (bitField0_ & ~0x00000001);
        temperature_ = 1F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.ConvertClassLogitsToSoftmax)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.ConvertClassLogitsToSoftmax)
    private static final object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax();
    }

    public static object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ConvertClassLogitsToSoftmax>
        PARSER = new com.google.protobuf.AbstractParser<ConvertClassLogitsToSoftmax>() {
      @java.lang.Override
      public ConvertClassLogitsToSoftmax parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConvertClassLogitsToSoftmax(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConvertClassLogitsToSoftmax> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConvertClassLogitsToSoftmax> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.ConvertClassLogitsToSoftmax getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomSelfConcatImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomSelfConcatImage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Probability of concatenating the image vertically.
     * </pre>
     *
     * <code>optional float concat_vertical_probability = 1 [default = 0.1];</code>
     * @return Whether the concatVerticalProbability field is set.
     */
    boolean hasConcatVerticalProbability();
    /**
     * <pre>
     * Probability of concatenating the image vertically.
     * </pre>
     *
     * <code>optional float concat_vertical_probability = 1 [default = 0.1];</code>
     * @return The concatVerticalProbability.
     */
    float getConcatVerticalProbability();

    /**
     * <pre>
     * Probability of concatenating the image horizontally.
     * </pre>
     *
     * <code>optional float concat_horizontal_probability = 2 [default = 0.1];</code>
     * @return Whether the concatHorizontalProbability field is set.
     */
    boolean hasConcatHorizontalProbability();
    /**
     * <pre>
     * Probability of concatenating the image horizontally.
     * </pre>
     *
     * <code>optional float concat_horizontal_probability = 2 [default = 0.1];</code>
     * @return The concatHorizontalProbability.
     */
    float getConcatHorizontalProbability();
  }
  /**
   * <pre>
   * Randomly concatenates the image with itself horizontally and/or vertically.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomSelfConcatImage}
   */
  public static final class RandomSelfConcatImage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomSelfConcatImage)
      RandomSelfConcatImageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomSelfConcatImage.newBuilder() to construct.
    private RandomSelfConcatImage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomSelfConcatImage() {
      concatVerticalProbability_ = 0.1F;
      concatHorizontalProbability_ = 0.1F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomSelfConcatImage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomSelfConcatImage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              concatVerticalProbability_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              concatHorizontalProbability_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomSelfConcatImage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomSelfConcatImage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomSelfConcatImage.class, object_detection.protos.Preprocessor.RandomSelfConcatImage.Builder.class);
    }

    private int bitField0_;
    public static final int CONCAT_VERTICAL_PROBABILITY_FIELD_NUMBER = 1;
    private float concatVerticalProbability_;
    /**
     * <pre>
     * Probability of concatenating the image vertically.
     * </pre>
     *
     * <code>optional float concat_vertical_probability = 1 [default = 0.1];</code>
     * @return Whether the concatVerticalProbability field is set.
     */
    @java.lang.Override
    public boolean hasConcatVerticalProbability() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Probability of concatenating the image vertically.
     * </pre>
     *
     * <code>optional float concat_vertical_probability = 1 [default = 0.1];</code>
     * @return The concatVerticalProbability.
     */
    @java.lang.Override
    public float getConcatVerticalProbability() {
      return concatVerticalProbability_;
    }

    public static final int CONCAT_HORIZONTAL_PROBABILITY_FIELD_NUMBER = 2;
    private float concatHorizontalProbability_;
    /**
     * <pre>
     * Probability of concatenating the image horizontally.
     * </pre>
     *
     * <code>optional float concat_horizontal_probability = 2 [default = 0.1];</code>
     * @return Whether the concatHorizontalProbability field is set.
     */
    @java.lang.Override
    public boolean hasConcatHorizontalProbability() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Probability of concatenating the image horizontally.
     * </pre>
     *
     * <code>optional float concat_horizontal_probability = 2 [default = 0.1];</code>
     * @return The concatHorizontalProbability.
     */
    @java.lang.Override
    public float getConcatHorizontalProbability() {
      return concatHorizontalProbability_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, concatVerticalProbability_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, concatHorizontalProbability_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, concatVerticalProbability_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, concatHorizontalProbability_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomSelfConcatImage)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomSelfConcatImage other = (object_detection.protos.Preprocessor.RandomSelfConcatImage) obj;

      if (hasConcatVerticalProbability() != other.hasConcatVerticalProbability()) return false;
      if (hasConcatVerticalProbability()) {
        if (java.lang.Float.floatToIntBits(getConcatVerticalProbability())
            != java.lang.Float.floatToIntBits(
                other.getConcatVerticalProbability())) return false;
      }
      if (hasConcatHorizontalProbability() != other.hasConcatHorizontalProbability()) return false;
      if (hasConcatHorizontalProbability()) {
        if (java.lang.Float.floatToIntBits(getConcatHorizontalProbability())
            != java.lang.Float.floatToIntBits(
                other.getConcatHorizontalProbability())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasConcatVerticalProbability()) {
        hash = (37 * hash) + CONCAT_VERTICAL_PROBABILITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getConcatVerticalProbability());
      }
      if (hasConcatHorizontalProbability()) {
        hash = (37 * hash) + CONCAT_HORIZONTAL_PROBABILITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getConcatHorizontalProbability());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomSelfConcatImage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomSelfConcatImage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomSelfConcatImage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomSelfConcatImage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomSelfConcatImage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomSelfConcatImage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomSelfConcatImage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomSelfConcatImage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomSelfConcatImage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomSelfConcatImage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomSelfConcatImage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomSelfConcatImage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomSelfConcatImage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly concatenates the image with itself horizontally and/or vertically.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomSelfConcatImage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomSelfConcatImage)
        object_detection.protos.Preprocessor.RandomSelfConcatImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomSelfConcatImage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomSelfConcatImage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomSelfConcatImage.class, object_detection.protos.Preprocessor.RandomSelfConcatImage.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomSelfConcatImage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        concatVerticalProbability_ = 0.1F;
        bitField0_ = (bitField0_ & ~0x00000001);
        concatHorizontalProbability_ = 0.1F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomSelfConcatImage_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomSelfConcatImage getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomSelfConcatImage.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomSelfConcatImage build() {
        object_detection.protos.Preprocessor.RandomSelfConcatImage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomSelfConcatImage buildPartial() {
        object_detection.protos.Preprocessor.RandomSelfConcatImage result = new object_detection.protos.Preprocessor.RandomSelfConcatImage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.concatVerticalProbability_ = concatVerticalProbability_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.concatHorizontalProbability_ = concatHorizontalProbability_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomSelfConcatImage) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomSelfConcatImage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomSelfConcatImage other) {
        if (other == object_detection.protos.Preprocessor.RandomSelfConcatImage.getDefaultInstance()) return this;
        if (other.hasConcatVerticalProbability()) {
          setConcatVerticalProbability(other.getConcatVerticalProbability());
        }
        if (other.hasConcatHorizontalProbability()) {
          setConcatHorizontalProbability(other.getConcatHorizontalProbability());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomSelfConcatImage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomSelfConcatImage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float concatVerticalProbability_ = 0.1F;
      /**
       * <pre>
       * Probability of concatenating the image vertically.
       * </pre>
       *
       * <code>optional float concat_vertical_probability = 1 [default = 0.1];</code>
       * @return Whether the concatVerticalProbability field is set.
       */
      @java.lang.Override
      public boolean hasConcatVerticalProbability() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Probability of concatenating the image vertically.
       * </pre>
       *
       * <code>optional float concat_vertical_probability = 1 [default = 0.1];</code>
       * @return The concatVerticalProbability.
       */
      @java.lang.Override
      public float getConcatVerticalProbability() {
        return concatVerticalProbability_;
      }
      /**
       * <pre>
       * Probability of concatenating the image vertically.
       * </pre>
       *
       * <code>optional float concat_vertical_probability = 1 [default = 0.1];</code>
       * @param value The concatVerticalProbability to set.
       * @return This builder for chaining.
       */
      public Builder setConcatVerticalProbability(float value) {
        bitField0_ |= 0x00000001;
        concatVerticalProbability_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Probability of concatenating the image vertically.
       * </pre>
       *
       * <code>optional float concat_vertical_probability = 1 [default = 0.1];</code>
       * @return This builder for chaining.
       */
      public Builder clearConcatVerticalProbability() {
        bitField0_ = (bitField0_ & ~0x00000001);
        concatVerticalProbability_ = 0.1F;
        onChanged();
        return this;
      }

      private float concatHorizontalProbability_ = 0.1F;
      /**
       * <pre>
       * Probability of concatenating the image horizontally.
       * </pre>
       *
       * <code>optional float concat_horizontal_probability = 2 [default = 0.1];</code>
       * @return Whether the concatHorizontalProbability field is set.
       */
      @java.lang.Override
      public boolean hasConcatHorizontalProbability() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Probability of concatenating the image horizontally.
       * </pre>
       *
       * <code>optional float concat_horizontal_probability = 2 [default = 0.1];</code>
       * @return The concatHorizontalProbability.
       */
      @java.lang.Override
      public float getConcatHorizontalProbability() {
        return concatHorizontalProbability_;
      }
      /**
       * <pre>
       * Probability of concatenating the image horizontally.
       * </pre>
       *
       * <code>optional float concat_horizontal_probability = 2 [default = 0.1];</code>
       * @param value The concatHorizontalProbability to set.
       * @return This builder for chaining.
       */
      public Builder setConcatHorizontalProbability(float value) {
        bitField0_ |= 0x00000002;
        concatHorizontalProbability_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Probability of concatenating the image horizontally.
       * </pre>
       *
       * <code>optional float concat_horizontal_probability = 2 [default = 0.1];</code>
       * @return This builder for chaining.
       */
      public Builder clearConcatHorizontalProbability() {
        bitField0_ = (bitField0_ & ~0x00000002);
        concatHorizontalProbability_ = 0.1F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomSelfConcatImage)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomSelfConcatImage)
    private static final object_detection.protos.Preprocessor.RandomSelfConcatImage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomSelfConcatImage();
    }

    public static object_detection.protos.Preprocessor.RandomSelfConcatImage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomSelfConcatImage>
        PARSER = new com.google.protobuf.AbstractParser<RandomSelfConcatImage>() {
      @java.lang.Override
      public RandomSelfConcatImage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomSelfConcatImage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomSelfConcatImage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomSelfConcatImage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomSelfConcatImage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AutoAugmentImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.AutoAugmentImage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * What AutoAugment policy to apply to the Image
     * </pre>
     *
     * <code>optional string policy_name = 1 [default = "v0"];</code>
     * @return Whether the policyName field is set.
     */
    boolean hasPolicyName();
    /**
     * <pre>
     * What AutoAugment policy to apply to the Image
     * </pre>
     *
     * <code>optional string policy_name = 1 [default = "v0"];</code>
     * @return The policyName.
     */
    java.lang.String getPolicyName();
    /**
     * <pre>
     * What AutoAugment policy to apply to the Image
     * </pre>
     *
     * <code>optional string policy_name = 1 [default = "v0"];</code>
     * @return The bytes for policyName.
     */
    com.google.protobuf.ByteString
        getPolicyNameBytes();
  }
  /**
   * <pre>
   * Apply an Autoaugment policy to the image and bounding boxes.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.AutoAugmentImage}
   */
  public static final class AutoAugmentImage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.AutoAugmentImage)
      AutoAugmentImageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AutoAugmentImage.newBuilder() to construct.
    private AutoAugmentImage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AutoAugmentImage() {
      policyName_ = "v0";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AutoAugmentImage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AutoAugmentImage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              policyName_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_AutoAugmentImage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_AutoAugmentImage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.AutoAugmentImage.class, object_detection.protos.Preprocessor.AutoAugmentImage.Builder.class);
    }

    private int bitField0_;
    public static final int POLICY_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object policyName_;
    /**
     * <pre>
     * What AutoAugment policy to apply to the Image
     * </pre>
     *
     * <code>optional string policy_name = 1 [default = "v0"];</code>
     * @return Whether the policyName field is set.
     */
    @java.lang.Override
    public boolean hasPolicyName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * What AutoAugment policy to apply to the Image
     * </pre>
     *
     * <code>optional string policy_name = 1 [default = "v0"];</code>
     * @return The policyName.
     */
    @java.lang.Override
    public java.lang.String getPolicyName() {
      java.lang.Object ref = policyName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          policyName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * What AutoAugment policy to apply to the Image
     * </pre>
     *
     * <code>optional string policy_name = 1 [default = "v0"];</code>
     * @return The bytes for policyName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPolicyNameBytes() {
      java.lang.Object ref = policyName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        policyName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, policyName_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, policyName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.AutoAugmentImage)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.AutoAugmentImage other = (object_detection.protos.Preprocessor.AutoAugmentImage) obj;

      if (hasPolicyName() != other.hasPolicyName()) return false;
      if (hasPolicyName()) {
        if (!getPolicyName()
            .equals(other.getPolicyName())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPolicyName()) {
        hash = (37 * hash) + POLICY_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getPolicyName().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.AutoAugmentImage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.AutoAugmentImage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.AutoAugmentImage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.AutoAugmentImage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.AutoAugmentImage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.AutoAugmentImage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.AutoAugmentImage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.AutoAugmentImage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.AutoAugmentImage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.AutoAugmentImage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.AutoAugmentImage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.AutoAugmentImage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.AutoAugmentImage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Apply an Autoaugment policy to the image and bounding boxes.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.AutoAugmentImage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.AutoAugmentImage)
        object_detection.protos.Preprocessor.AutoAugmentImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_AutoAugmentImage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_AutoAugmentImage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.AutoAugmentImage.class, object_detection.protos.Preprocessor.AutoAugmentImage.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.AutoAugmentImage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        policyName_ = "v0";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_AutoAugmentImage_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.AutoAugmentImage getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.AutoAugmentImage.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.AutoAugmentImage build() {
        object_detection.protos.Preprocessor.AutoAugmentImage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.AutoAugmentImage buildPartial() {
        object_detection.protos.Preprocessor.AutoAugmentImage result = new object_detection.protos.Preprocessor.AutoAugmentImage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.policyName_ = policyName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.AutoAugmentImage) {
          return mergeFrom((object_detection.protos.Preprocessor.AutoAugmentImage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.AutoAugmentImage other) {
        if (other == object_detection.protos.Preprocessor.AutoAugmentImage.getDefaultInstance()) return this;
        if (other.hasPolicyName()) {
          bitField0_ |= 0x00000001;
          policyName_ = other.policyName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.AutoAugmentImage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.AutoAugmentImage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object policyName_ = "v0";
      /**
       * <pre>
       * What AutoAugment policy to apply to the Image
       * </pre>
       *
       * <code>optional string policy_name = 1 [default = "v0"];</code>
       * @return Whether the policyName field is set.
       */
      public boolean hasPolicyName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * What AutoAugment policy to apply to the Image
       * </pre>
       *
       * <code>optional string policy_name = 1 [default = "v0"];</code>
       * @return The policyName.
       */
      public java.lang.String getPolicyName() {
        java.lang.Object ref = policyName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            policyName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * What AutoAugment policy to apply to the Image
       * </pre>
       *
       * <code>optional string policy_name = 1 [default = "v0"];</code>
       * @return The bytes for policyName.
       */
      public com.google.protobuf.ByteString
          getPolicyNameBytes() {
        java.lang.Object ref = policyName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          policyName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * What AutoAugment policy to apply to the Image
       * </pre>
       *
       * <code>optional string policy_name = 1 [default = "v0"];</code>
       * @param value The policyName to set.
       * @return This builder for chaining.
       */
      public Builder setPolicyName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        policyName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * What AutoAugment policy to apply to the Image
       * </pre>
       *
       * <code>optional string policy_name = 1 [default = "v0"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPolicyName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        policyName_ = getDefaultInstance().getPolicyName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * What AutoAugment policy to apply to the Image
       * </pre>
       *
       * <code>optional string policy_name = 1 [default = "v0"];</code>
       * @param value The bytes for policyName to set.
       * @return This builder for chaining.
       */
      public Builder setPolicyNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        policyName_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.AutoAugmentImage)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.AutoAugmentImage)
    private static final object_detection.protos.Preprocessor.AutoAugmentImage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.AutoAugmentImage();
    }

    public static object_detection.protos.Preprocessor.AutoAugmentImage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<AutoAugmentImage>
        PARSER = new com.google.protobuf.AbstractParser<AutoAugmentImage>() {
      @java.lang.Override
      public AutoAugmentImage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AutoAugmentImage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AutoAugmentImage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AutoAugmentImage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.AutoAugmentImage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DropLabelProbabilisticallyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.DropLabelProbabilistically)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The label that should be dropped. This corresponds to one of the entries
     * in the label map.
     * </pre>
     *
     * <code>optional int32 label = 1;</code>
     * @return Whether the label field is set.
     */
    boolean hasLabel();
    /**
     * <pre>
     * The label that should be dropped. This corresponds to one of the entries
     * in the label map.
     * </pre>
     *
     * <code>optional int32 label = 1;</code>
     * @return The label.
     */
    int getLabel();

    /**
     * <pre>
     * Probability of dropping the label.
     * </pre>
     *
     * <code>optional float drop_probability = 2 [default = 1];</code>
     * @return Whether the dropProbability field is set.
     */
    boolean hasDropProbability();
    /**
     * <pre>
     * Probability of dropping the label.
     * </pre>
     *
     * <code>optional float drop_probability = 2 [default = 1];</code>
     * @return The dropProbability.
     */
    float getDropProbability();
  }
  /**
   * <pre>
   * Randomly drops ground truth boxes for a label with some probability.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.DropLabelProbabilistically}
   */
  public static final class DropLabelProbabilistically extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.DropLabelProbabilistically)
      DropLabelProbabilisticallyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DropLabelProbabilistically.newBuilder() to construct.
    private DropLabelProbabilistically(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DropLabelProbabilistically() {
      dropProbability_ = 1F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DropLabelProbabilistically();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DropLabelProbabilistically(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              label_ = input.readInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              dropProbability_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_DropLabelProbabilistically_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_DropLabelProbabilistically_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.DropLabelProbabilistically.class, object_detection.protos.Preprocessor.DropLabelProbabilistically.Builder.class);
    }

    private int bitField0_;
    public static final int LABEL_FIELD_NUMBER = 1;
    private int label_;
    /**
     * <pre>
     * The label that should be dropped. This corresponds to one of the entries
     * in the label map.
     * </pre>
     *
     * <code>optional int32 label = 1;</code>
     * @return Whether the label field is set.
     */
    @java.lang.Override
    public boolean hasLabel() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The label that should be dropped. This corresponds to one of the entries
     * in the label map.
     * </pre>
     *
     * <code>optional int32 label = 1;</code>
     * @return The label.
     */
    @java.lang.Override
    public int getLabel() {
      return label_;
    }

    public static final int DROP_PROBABILITY_FIELD_NUMBER = 2;
    private float dropProbability_;
    /**
     * <pre>
     * Probability of dropping the label.
     * </pre>
     *
     * <code>optional float drop_probability = 2 [default = 1];</code>
     * @return Whether the dropProbability field is set.
     */
    @java.lang.Override
    public boolean hasDropProbability() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Probability of dropping the label.
     * </pre>
     *
     * <code>optional float drop_probability = 2 [default = 1];</code>
     * @return The dropProbability.
     */
    @java.lang.Override
    public float getDropProbability() {
      return dropProbability_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, label_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, dropProbability_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, label_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, dropProbability_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.DropLabelProbabilistically)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.DropLabelProbabilistically other = (object_detection.protos.Preprocessor.DropLabelProbabilistically) obj;

      if (hasLabel() != other.hasLabel()) return false;
      if (hasLabel()) {
        if (getLabel()
            != other.getLabel()) return false;
      }
      if (hasDropProbability() != other.hasDropProbability()) return false;
      if (hasDropProbability()) {
        if (java.lang.Float.floatToIntBits(getDropProbability())
            != java.lang.Float.floatToIntBits(
                other.getDropProbability())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLabel()) {
        hash = (37 * hash) + LABEL_FIELD_NUMBER;
        hash = (53 * hash) + getLabel();
      }
      if (hasDropProbability()) {
        hash = (37 * hash) + DROP_PROBABILITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getDropProbability());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.DropLabelProbabilistically parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.DropLabelProbabilistically parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.DropLabelProbabilistically parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.DropLabelProbabilistically parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.DropLabelProbabilistically parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.DropLabelProbabilistically parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.DropLabelProbabilistically parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.DropLabelProbabilistically parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.DropLabelProbabilistically parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.DropLabelProbabilistically parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.DropLabelProbabilistically parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.DropLabelProbabilistically parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.DropLabelProbabilistically prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly drops ground truth boxes for a label with some probability.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.DropLabelProbabilistically}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.DropLabelProbabilistically)
        object_detection.protos.Preprocessor.DropLabelProbabilisticallyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_DropLabelProbabilistically_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_DropLabelProbabilistically_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.DropLabelProbabilistically.class, object_detection.protos.Preprocessor.DropLabelProbabilistically.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.DropLabelProbabilistically.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        label_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        dropProbability_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_DropLabelProbabilistically_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.DropLabelProbabilistically getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.DropLabelProbabilistically.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.DropLabelProbabilistically build() {
        object_detection.protos.Preprocessor.DropLabelProbabilistically result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.DropLabelProbabilistically buildPartial() {
        object_detection.protos.Preprocessor.DropLabelProbabilistically result = new object_detection.protos.Preprocessor.DropLabelProbabilistically(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.label_ = label_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dropProbability_ = dropProbability_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.DropLabelProbabilistically) {
          return mergeFrom((object_detection.protos.Preprocessor.DropLabelProbabilistically)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.DropLabelProbabilistically other) {
        if (other == object_detection.protos.Preprocessor.DropLabelProbabilistically.getDefaultInstance()) return this;
        if (other.hasLabel()) {
          setLabel(other.getLabel());
        }
        if (other.hasDropProbability()) {
          setDropProbability(other.getDropProbability());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.DropLabelProbabilistically parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.DropLabelProbabilistically) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int label_ ;
      /**
       * <pre>
       * The label that should be dropped. This corresponds to one of the entries
       * in the label map.
       * </pre>
       *
       * <code>optional int32 label = 1;</code>
       * @return Whether the label field is set.
       */
      @java.lang.Override
      public boolean hasLabel() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The label that should be dropped. This corresponds to one of the entries
       * in the label map.
       * </pre>
       *
       * <code>optional int32 label = 1;</code>
       * @return The label.
       */
      @java.lang.Override
      public int getLabel() {
        return label_;
      }
      /**
       * <pre>
       * The label that should be dropped. This corresponds to one of the entries
       * in the label map.
       * </pre>
       *
       * <code>optional int32 label = 1;</code>
       * @param value The label to set.
       * @return This builder for chaining.
       */
      public Builder setLabel(int value) {
        bitField0_ |= 0x00000001;
        label_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The label that should be dropped. This corresponds to one of the entries
       * in the label map.
       * </pre>
       *
       * <code>optional int32 label = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLabel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        label_ = 0;
        onChanged();
        return this;
      }

      private float dropProbability_ = 1F;
      /**
       * <pre>
       * Probability of dropping the label.
       * </pre>
       *
       * <code>optional float drop_probability = 2 [default = 1];</code>
       * @return Whether the dropProbability field is set.
       */
      @java.lang.Override
      public boolean hasDropProbability() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Probability of dropping the label.
       * </pre>
       *
       * <code>optional float drop_probability = 2 [default = 1];</code>
       * @return The dropProbability.
       */
      @java.lang.Override
      public float getDropProbability() {
        return dropProbability_;
      }
      /**
       * <pre>
       * Probability of dropping the label.
       * </pre>
       *
       * <code>optional float drop_probability = 2 [default = 1];</code>
       * @param value The dropProbability to set.
       * @return This builder for chaining.
       */
      public Builder setDropProbability(float value) {
        bitField0_ |= 0x00000002;
        dropProbability_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Probability of dropping the label.
       * </pre>
       *
       * <code>optional float drop_probability = 2 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearDropProbability() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dropProbability_ = 1F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.DropLabelProbabilistically)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.DropLabelProbabilistically)
    private static final object_detection.protos.Preprocessor.DropLabelProbabilistically DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.DropLabelProbabilistically();
    }

    public static object_detection.protos.Preprocessor.DropLabelProbabilistically getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DropLabelProbabilistically>
        PARSER = new com.google.protobuf.AbstractParser<DropLabelProbabilistically>() {
      @java.lang.Override
      public DropLabelProbabilistically parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DropLabelProbabilistically(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DropLabelProbabilistically> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DropLabelProbabilistically> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.DropLabelProbabilistically getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RemapLabelsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RemapLabels)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Labels to be remapped.
     * </pre>
     *
     * <code>repeated int32 original_labels = 1;</code>
     * @return A list containing the originalLabels.
     */
    java.util.List<java.lang.Integer> getOriginalLabelsList();
    /**
     * <pre>
     * Labels to be remapped.
     * </pre>
     *
     * <code>repeated int32 original_labels = 1;</code>
     * @return The count of originalLabels.
     */
    int getOriginalLabelsCount();
    /**
     * <pre>
     * Labels to be remapped.
     * </pre>
     *
     * <code>repeated int32 original_labels = 1;</code>
     * @param index The index of the element to return.
     * @return The originalLabels at the given index.
     */
    int getOriginalLabels(int index);

    /**
     * <pre>
     * Label to map to.
     * </pre>
     *
     * <code>optional int32 new_label = 2;</code>
     * @return Whether the newLabel field is set.
     */
    boolean hasNewLabel();
    /**
     * <pre>
     * Label to map to.
     * </pre>
     *
     * <code>optional int32 new_label = 2;</code>
     * @return The newLabel.
     */
    int getNewLabel();
  }
  /**
   * <pre>
   *Remap a set of labels to a new label.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RemapLabels}
   */
  public static final class RemapLabels extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RemapLabels)
      RemapLabelsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RemapLabels.newBuilder() to construct.
    private RemapLabels(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RemapLabels() {
      originalLabels_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RemapLabels();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RemapLabels(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                originalLabels_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              originalLabels_.addInt(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                originalLabels_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                originalLabels_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              newLabel_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          originalLabels_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RemapLabels_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RemapLabels_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RemapLabels.class, object_detection.protos.Preprocessor.RemapLabels.Builder.class);
    }

    private int bitField0_;
    public static final int ORIGINAL_LABELS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList originalLabels_;
    /**
     * <pre>
     * Labels to be remapped.
     * </pre>
     *
     * <code>repeated int32 original_labels = 1;</code>
     * @return A list containing the originalLabels.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getOriginalLabelsList() {
      return originalLabels_;
    }
    /**
     * <pre>
     * Labels to be remapped.
     * </pre>
     *
     * <code>repeated int32 original_labels = 1;</code>
     * @return The count of originalLabels.
     */
    public int getOriginalLabelsCount() {
      return originalLabels_.size();
    }
    /**
     * <pre>
     * Labels to be remapped.
     * </pre>
     *
     * <code>repeated int32 original_labels = 1;</code>
     * @param index The index of the element to return.
     * @return The originalLabels at the given index.
     */
    public int getOriginalLabels(int index) {
      return originalLabels_.getInt(index);
    }

    public static final int NEW_LABEL_FIELD_NUMBER = 2;
    private int newLabel_;
    /**
     * <pre>
     * Label to map to.
     * </pre>
     *
     * <code>optional int32 new_label = 2;</code>
     * @return Whether the newLabel field is set.
     */
    @java.lang.Override
    public boolean hasNewLabel() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Label to map to.
     * </pre>
     *
     * <code>optional int32 new_label = 2;</code>
     * @return The newLabel.
     */
    @java.lang.Override
    public int getNewLabel() {
      return newLabel_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < originalLabels_.size(); i++) {
        output.writeInt32(1, originalLabels_.getInt(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(2, newLabel_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < originalLabels_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(originalLabels_.getInt(i));
        }
        size += dataSize;
        size += 1 * getOriginalLabelsList().size();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, newLabel_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RemapLabels)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RemapLabels other = (object_detection.protos.Preprocessor.RemapLabels) obj;

      if (!getOriginalLabelsList()
          .equals(other.getOriginalLabelsList())) return false;
      if (hasNewLabel() != other.hasNewLabel()) return false;
      if (hasNewLabel()) {
        if (getNewLabel()
            != other.getNewLabel()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOriginalLabelsCount() > 0) {
        hash = (37 * hash) + ORIGINAL_LABELS_FIELD_NUMBER;
        hash = (53 * hash) + getOriginalLabelsList().hashCode();
      }
      if (hasNewLabel()) {
        hash = (37 * hash) + NEW_LABEL_FIELD_NUMBER;
        hash = (53 * hash) + getNewLabel();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RemapLabels parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RemapLabels parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RemapLabels parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RemapLabels parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RemapLabels parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RemapLabels parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RemapLabels parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RemapLabels parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RemapLabels parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RemapLabels parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RemapLabels parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RemapLabels parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RemapLabels prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *Remap a set of labels to a new label.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RemapLabels}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RemapLabels)
        object_detection.protos.Preprocessor.RemapLabelsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RemapLabels_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RemapLabels_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RemapLabels.class, object_detection.protos.Preprocessor.RemapLabels.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RemapLabels.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        originalLabels_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        newLabel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RemapLabels_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RemapLabels getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RemapLabels.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RemapLabels build() {
        object_detection.protos.Preprocessor.RemapLabels result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RemapLabels buildPartial() {
        object_detection.protos.Preprocessor.RemapLabels result = new object_detection.protos.Preprocessor.RemapLabels(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          originalLabels_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.originalLabels_ = originalLabels_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.newLabel_ = newLabel_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RemapLabels) {
          return mergeFrom((object_detection.protos.Preprocessor.RemapLabels)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RemapLabels other) {
        if (other == object_detection.protos.Preprocessor.RemapLabels.getDefaultInstance()) return this;
        if (!other.originalLabels_.isEmpty()) {
          if (originalLabels_.isEmpty()) {
            originalLabels_ = other.originalLabels_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureOriginalLabelsIsMutable();
            originalLabels_.addAll(other.originalLabels_);
          }
          onChanged();
        }
        if (other.hasNewLabel()) {
          setNewLabel(other.getNewLabel());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RemapLabels parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RemapLabels) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList originalLabels_ = emptyIntList();
      private void ensureOriginalLabelsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          originalLabels_ = mutableCopy(originalLabels_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Labels to be remapped.
       * </pre>
       *
       * <code>repeated int32 original_labels = 1;</code>
       * @return A list containing the originalLabels.
       */
      public java.util.List<java.lang.Integer>
          getOriginalLabelsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(originalLabels_) : originalLabels_;
      }
      /**
       * <pre>
       * Labels to be remapped.
       * </pre>
       *
       * <code>repeated int32 original_labels = 1;</code>
       * @return The count of originalLabels.
       */
      public int getOriginalLabelsCount() {
        return originalLabels_.size();
      }
      /**
       * <pre>
       * Labels to be remapped.
       * </pre>
       *
       * <code>repeated int32 original_labels = 1;</code>
       * @param index The index of the element to return.
       * @return The originalLabels at the given index.
       */
      public int getOriginalLabels(int index) {
        return originalLabels_.getInt(index);
      }
      /**
       * <pre>
       * Labels to be remapped.
       * </pre>
       *
       * <code>repeated int32 original_labels = 1;</code>
       * @param index The index to set the value at.
       * @param value The originalLabels to set.
       * @return This builder for chaining.
       */
      public Builder setOriginalLabels(
          int index, int value) {
        ensureOriginalLabelsIsMutable();
        originalLabels_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Labels to be remapped.
       * </pre>
       *
       * <code>repeated int32 original_labels = 1;</code>
       * @param value The originalLabels to add.
       * @return This builder for chaining.
       */
      public Builder addOriginalLabels(int value) {
        ensureOriginalLabelsIsMutable();
        originalLabels_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Labels to be remapped.
       * </pre>
       *
       * <code>repeated int32 original_labels = 1;</code>
       * @param values The originalLabels to add.
       * @return This builder for chaining.
       */
      public Builder addAllOriginalLabels(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOriginalLabelsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, originalLabels_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Labels to be remapped.
       * </pre>
       *
       * <code>repeated int32 original_labels = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOriginalLabels() {
        originalLabels_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int newLabel_ ;
      /**
       * <pre>
       * Label to map to.
       * </pre>
       *
       * <code>optional int32 new_label = 2;</code>
       * @return Whether the newLabel field is set.
       */
      @java.lang.Override
      public boolean hasNewLabel() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Label to map to.
       * </pre>
       *
       * <code>optional int32 new_label = 2;</code>
       * @return The newLabel.
       */
      @java.lang.Override
      public int getNewLabel() {
        return newLabel_;
      }
      /**
       * <pre>
       * Label to map to.
       * </pre>
       *
       * <code>optional int32 new_label = 2;</code>
       * @param value The newLabel to set.
       * @return This builder for chaining.
       */
      public Builder setNewLabel(int value) {
        bitField0_ |= 0x00000002;
        newLabel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Label to map to.
       * </pre>
       *
       * <code>optional int32 new_label = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewLabel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        newLabel_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RemapLabels)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RemapLabels)
    private static final object_detection.protos.Preprocessor.RemapLabels DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RemapLabels();
    }

    public static object_detection.protos.Preprocessor.RemapLabels getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RemapLabels>
        PARSER = new com.google.protobuf.AbstractParser<RemapLabels>() {
      @java.lang.Override
      public RemapLabels parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RemapLabels(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RemapLabels> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RemapLabels> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RemapLabels getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomJpegQualityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomJpegQuality)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Probability of keeping the original image.
     * </pre>
     *
     * <code>optional float random_coef = 1 [default = 0];</code>
     * @return Whether the randomCoef field is set.
     */
    boolean hasRandomCoef();
    /**
     * <pre>
     * Probability of keeping the original image.
     * </pre>
     *
     * <code>optional float random_coef = 1 [default = 0];</code>
     * @return The randomCoef.
     */
    float getRandomCoef();

    /**
     * <pre>
     * Minimum jpeg quality to use.
     * </pre>
     *
     * <code>optional int32 min_jpeg_quality = 2 [default = 0];</code>
     * @return Whether the minJpegQuality field is set.
     */
    boolean hasMinJpegQuality();
    /**
     * <pre>
     * Minimum jpeg quality to use.
     * </pre>
     *
     * <code>optional int32 min_jpeg_quality = 2 [default = 0];</code>
     * @return The minJpegQuality.
     */
    int getMinJpegQuality();

    /**
     * <pre>
     * Maximum jpeg quality to use.
     * </pre>
     *
     * <code>optional int32 max_jpeg_quality = 3 [default = 100];</code>
     * @return Whether the maxJpegQuality field is set.
     */
    boolean hasMaxJpegQuality();
    /**
     * <pre>
     * Maximum jpeg quality to use.
     * </pre>
     *
     * <code>optional int32 max_jpeg_quality = 3 [default = 100];</code>
     * @return The maxJpegQuality.
     */
    int getMaxJpegQuality();
  }
  /**
   * <pre>
   * Applies a jpeg encoding with a random quality factor.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomJpegQuality}
   */
  public static final class RandomJpegQuality extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomJpegQuality)
      RandomJpegQualityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomJpegQuality.newBuilder() to construct.
    private RandomJpegQuality(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomJpegQuality() {
      maxJpegQuality_ = 100;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomJpegQuality();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomJpegQuality(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              randomCoef_ = input.readFloat();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              minJpegQuality_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              maxJpegQuality_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomJpegQuality_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomJpegQuality_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomJpegQuality.class, object_detection.protos.Preprocessor.RandomJpegQuality.Builder.class);
    }

    private int bitField0_;
    public static final int RANDOM_COEF_FIELD_NUMBER = 1;
    private float randomCoef_;
    /**
     * <pre>
     * Probability of keeping the original image.
     * </pre>
     *
     * <code>optional float random_coef = 1 [default = 0];</code>
     * @return Whether the randomCoef field is set.
     */
    @java.lang.Override
    public boolean hasRandomCoef() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Probability of keeping the original image.
     * </pre>
     *
     * <code>optional float random_coef = 1 [default = 0];</code>
     * @return The randomCoef.
     */
    @java.lang.Override
    public float getRandomCoef() {
      return randomCoef_;
    }

    public static final int MIN_JPEG_QUALITY_FIELD_NUMBER = 2;
    private int minJpegQuality_;
    /**
     * <pre>
     * Minimum jpeg quality to use.
     * </pre>
     *
     * <code>optional int32 min_jpeg_quality = 2 [default = 0];</code>
     * @return Whether the minJpegQuality field is set.
     */
    @java.lang.Override
    public boolean hasMinJpegQuality() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Minimum jpeg quality to use.
     * </pre>
     *
     * <code>optional int32 min_jpeg_quality = 2 [default = 0];</code>
     * @return The minJpegQuality.
     */
    @java.lang.Override
    public int getMinJpegQuality() {
      return minJpegQuality_;
    }

    public static final int MAX_JPEG_QUALITY_FIELD_NUMBER = 3;
    private int maxJpegQuality_;
    /**
     * <pre>
     * Maximum jpeg quality to use.
     * </pre>
     *
     * <code>optional int32 max_jpeg_quality = 3 [default = 100];</code>
     * @return Whether the maxJpegQuality field is set.
     */
    @java.lang.Override
    public boolean hasMaxJpegQuality() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Maximum jpeg quality to use.
     * </pre>
     *
     * <code>optional int32 max_jpeg_quality = 3 [default = 100];</code>
     * @return The maxJpegQuality.
     */
    @java.lang.Override
    public int getMaxJpegQuality() {
      return maxJpegQuality_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, randomCoef_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, minJpegQuality_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, maxJpegQuality_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, randomCoef_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, minJpegQuality_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, maxJpegQuality_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomJpegQuality)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomJpegQuality other = (object_detection.protos.Preprocessor.RandomJpegQuality) obj;

      if (hasRandomCoef() != other.hasRandomCoef()) return false;
      if (hasRandomCoef()) {
        if (java.lang.Float.floatToIntBits(getRandomCoef())
            != java.lang.Float.floatToIntBits(
                other.getRandomCoef())) return false;
      }
      if (hasMinJpegQuality() != other.hasMinJpegQuality()) return false;
      if (hasMinJpegQuality()) {
        if (getMinJpegQuality()
            != other.getMinJpegQuality()) return false;
      }
      if (hasMaxJpegQuality() != other.hasMaxJpegQuality()) return false;
      if (hasMaxJpegQuality()) {
        if (getMaxJpegQuality()
            != other.getMaxJpegQuality()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRandomCoef()) {
        hash = (37 * hash) + RANDOM_COEF_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRandomCoef());
      }
      if (hasMinJpegQuality()) {
        hash = (37 * hash) + MIN_JPEG_QUALITY_FIELD_NUMBER;
        hash = (53 * hash) + getMinJpegQuality();
      }
      if (hasMaxJpegQuality()) {
        hash = (37 * hash) + MAX_JPEG_QUALITY_FIELD_NUMBER;
        hash = (53 * hash) + getMaxJpegQuality();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomJpegQuality parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomJpegQuality parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomJpegQuality parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomJpegQuality parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomJpegQuality parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomJpegQuality parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomJpegQuality parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomJpegQuality parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomJpegQuality parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomJpegQuality parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomJpegQuality parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomJpegQuality parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomJpegQuality prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Applies a jpeg encoding with a random quality factor.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomJpegQuality}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomJpegQuality)
        object_detection.protos.Preprocessor.RandomJpegQualityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomJpegQuality_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomJpegQuality_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomJpegQuality.class, object_detection.protos.Preprocessor.RandomJpegQuality.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomJpegQuality.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        randomCoef_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        minJpegQuality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxJpegQuality_ = 100;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomJpegQuality_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomJpegQuality getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomJpegQuality.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomJpegQuality build() {
        object_detection.protos.Preprocessor.RandomJpegQuality result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomJpegQuality buildPartial() {
        object_detection.protos.Preprocessor.RandomJpegQuality result = new object_detection.protos.Preprocessor.RandomJpegQuality(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.randomCoef_ = randomCoef_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.minJpegQuality_ = minJpegQuality_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxJpegQuality_ = maxJpegQuality_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomJpegQuality) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomJpegQuality)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomJpegQuality other) {
        if (other == object_detection.protos.Preprocessor.RandomJpegQuality.getDefaultInstance()) return this;
        if (other.hasRandomCoef()) {
          setRandomCoef(other.getRandomCoef());
        }
        if (other.hasMinJpegQuality()) {
          setMinJpegQuality(other.getMinJpegQuality());
        }
        if (other.hasMaxJpegQuality()) {
          setMaxJpegQuality(other.getMaxJpegQuality());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomJpegQuality parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomJpegQuality) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float randomCoef_ ;
      /**
       * <pre>
       * Probability of keeping the original image.
       * </pre>
       *
       * <code>optional float random_coef = 1 [default = 0];</code>
       * @return Whether the randomCoef field is set.
       */
      @java.lang.Override
      public boolean hasRandomCoef() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Probability of keeping the original image.
       * </pre>
       *
       * <code>optional float random_coef = 1 [default = 0];</code>
       * @return The randomCoef.
       */
      @java.lang.Override
      public float getRandomCoef() {
        return randomCoef_;
      }
      /**
       * <pre>
       * Probability of keeping the original image.
       * </pre>
       *
       * <code>optional float random_coef = 1 [default = 0];</code>
       * @param value The randomCoef to set.
       * @return This builder for chaining.
       */
      public Builder setRandomCoef(float value) {
        bitField0_ |= 0x00000001;
        randomCoef_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Probability of keeping the original image.
       * </pre>
       *
       * <code>optional float random_coef = 1 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearRandomCoef() {
        bitField0_ = (bitField0_ & ~0x00000001);
        randomCoef_ = 0F;
        onChanged();
        return this;
      }

      private int minJpegQuality_ ;
      /**
       * <pre>
       * Minimum jpeg quality to use.
       * </pre>
       *
       * <code>optional int32 min_jpeg_quality = 2 [default = 0];</code>
       * @return Whether the minJpegQuality field is set.
       */
      @java.lang.Override
      public boolean hasMinJpegQuality() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Minimum jpeg quality to use.
       * </pre>
       *
       * <code>optional int32 min_jpeg_quality = 2 [default = 0];</code>
       * @return The minJpegQuality.
       */
      @java.lang.Override
      public int getMinJpegQuality() {
        return minJpegQuality_;
      }
      /**
       * <pre>
       * Minimum jpeg quality to use.
       * </pre>
       *
       * <code>optional int32 min_jpeg_quality = 2 [default = 0];</code>
       * @param value The minJpegQuality to set.
       * @return This builder for chaining.
       */
      public Builder setMinJpegQuality(int value) {
        bitField0_ |= 0x00000002;
        minJpegQuality_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Minimum jpeg quality to use.
       * </pre>
       *
       * <code>optional int32 min_jpeg_quality = 2 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinJpegQuality() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minJpegQuality_ = 0;
        onChanged();
        return this;
      }

      private int maxJpegQuality_ = 100;
      /**
       * <pre>
       * Maximum jpeg quality to use.
       * </pre>
       *
       * <code>optional int32 max_jpeg_quality = 3 [default = 100];</code>
       * @return Whether the maxJpegQuality field is set.
       */
      @java.lang.Override
      public boolean hasMaxJpegQuality() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Maximum jpeg quality to use.
       * </pre>
       *
       * <code>optional int32 max_jpeg_quality = 3 [default = 100];</code>
       * @return The maxJpegQuality.
       */
      @java.lang.Override
      public int getMaxJpegQuality() {
        return maxJpegQuality_;
      }
      /**
       * <pre>
       * Maximum jpeg quality to use.
       * </pre>
       *
       * <code>optional int32 max_jpeg_quality = 3 [default = 100];</code>
       * @param value The maxJpegQuality to set.
       * @return This builder for chaining.
       */
      public Builder setMaxJpegQuality(int value) {
        bitField0_ |= 0x00000004;
        maxJpegQuality_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum jpeg quality to use.
       * </pre>
       *
       * <code>optional int32 max_jpeg_quality = 3 [default = 100];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxJpegQuality() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxJpegQuality_ = 100;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomJpegQuality)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomJpegQuality)
    private static final object_detection.protos.Preprocessor.RandomJpegQuality DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomJpegQuality();
    }

    public static object_detection.protos.Preprocessor.RandomJpegQuality getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomJpegQuality>
        PARSER = new com.google.protobuf.AbstractParser<RandomJpegQuality>() {
      @java.lang.Override
      public RandomJpegQuality parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomJpegQuality(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomJpegQuality> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomJpegQuality> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomJpegQuality getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomDownscaleToTargetPixelsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomDownscaleToTargetPixels)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Probability of keeping the original image.
     * </pre>
     *
     * <code>optional float random_coef = 1 [default = 0];</code>
     * @return Whether the randomCoef field is set.
     */
    boolean hasRandomCoef();
    /**
     * <pre>
     * Probability of keeping the original image.
     * </pre>
     *
     * <code>optional float random_coef = 1 [default = 0];</code>
     * @return The randomCoef.
     */
    float getRandomCoef();

    /**
     * <pre>
     * The target number of pixels will be chosen to be in the range
     * [min_target_pixels, max_target_pixels]
     * </pre>
     *
     * <code>optional int32 min_target_pixels = 2 [default = 300000];</code>
     * @return Whether the minTargetPixels field is set.
     */
    boolean hasMinTargetPixels();
    /**
     * <pre>
     * The target number of pixels will be chosen to be in the range
     * [min_target_pixels, max_target_pixels]
     * </pre>
     *
     * <code>optional int32 min_target_pixels = 2 [default = 300000];</code>
     * @return The minTargetPixels.
     */
    int getMinTargetPixels();

    /**
     * <code>optional int32 max_target_pixels = 3 [default = 500000];</code>
     * @return Whether the maxTargetPixels field is set.
     */
    boolean hasMaxTargetPixels();
    /**
     * <code>optional int32 max_target_pixels = 3 [default = 500000];</code>
     * @return The maxTargetPixels.
     */
    int getMaxTargetPixels();
  }
  /**
   * <pre>
   * Randomly shrinks image (keeping aspect ratio) to a target number of pixels.
   * If the image contains less than the chosen target number of pixels, it will
   * not be changed.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomDownscaleToTargetPixels}
   */
  public static final class RandomDownscaleToTargetPixels extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomDownscaleToTargetPixels)
      RandomDownscaleToTargetPixelsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomDownscaleToTargetPixels.newBuilder() to construct.
    private RandomDownscaleToTargetPixels(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomDownscaleToTargetPixels() {
      minTargetPixels_ = 300000;
      maxTargetPixels_ = 500000;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomDownscaleToTargetPixels();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomDownscaleToTargetPixels(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              randomCoef_ = input.readFloat();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              minTargetPixels_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              maxTargetPixels_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomDownscaleToTargetPixels_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomDownscaleToTargetPixels_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.class, object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.Builder.class);
    }

    private int bitField0_;
    public static final int RANDOM_COEF_FIELD_NUMBER = 1;
    private float randomCoef_;
    /**
     * <pre>
     * Probability of keeping the original image.
     * </pre>
     *
     * <code>optional float random_coef = 1 [default = 0];</code>
     * @return Whether the randomCoef field is set.
     */
    @java.lang.Override
    public boolean hasRandomCoef() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Probability of keeping the original image.
     * </pre>
     *
     * <code>optional float random_coef = 1 [default = 0];</code>
     * @return The randomCoef.
     */
    @java.lang.Override
    public float getRandomCoef() {
      return randomCoef_;
    }

    public static final int MIN_TARGET_PIXELS_FIELD_NUMBER = 2;
    private int minTargetPixels_;
    /**
     * <pre>
     * The target number of pixels will be chosen to be in the range
     * [min_target_pixels, max_target_pixels]
     * </pre>
     *
     * <code>optional int32 min_target_pixels = 2 [default = 300000];</code>
     * @return Whether the minTargetPixels field is set.
     */
    @java.lang.Override
    public boolean hasMinTargetPixels() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The target number of pixels will be chosen to be in the range
     * [min_target_pixels, max_target_pixels]
     * </pre>
     *
     * <code>optional int32 min_target_pixels = 2 [default = 300000];</code>
     * @return The minTargetPixels.
     */
    @java.lang.Override
    public int getMinTargetPixels() {
      return minTargetPixels_;
    }

    public static final int MAX_TARGET_PIXELS_FIELD_NUMBER = 3;
    private int maxTargetPixels_;
    /**
     * <code>optional int32 max_target_pixels = 3 [default = 500000];</code>
     * @return Whether the maxTargetPixels field is set.
     */
    @java.lang.Override
    public boolean hasMaxTargetPixels() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int32 max_target_pixels = 3 [default = 500000];</code>
     * @return The maxTargetPixels.
     */
    @java.lang.Override
    public int getMaxTargetPixels() {
      return maxTargetPixels_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, randomCoef_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, minTargetPixels_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, maxTargetPixels_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, randomCoef_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, minTargetPixels_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, maxTargetPixels_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels other = (object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels) obj;

      if (hasRandomCoef() != other.hasRandomCoef()) return false;
      if (hasRandomCoef()) {
        if (java.lang.Float.floatToIntBits(getRandomCoef())
            != java.lang.Float.floatToIntBits(
                other.getRandomCoef())) return false;
      }
      if (hasMinTargetPixels() != other.hasMinTargetPixels()) return false;
      if (hasMinTargetPixels()) {
        if (getMinTargetPixels()
            != other.getMinTargetPixels()) return false;
      }
      if (hasMaxTargetPixels() != other.hasMaxTargetPixels()) return false;
      if (hasMaxTargetPixels()) {
        if (getMaxTargetPixels()
            != other.getMaxTargetPixels()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRandomCoef()) {
        hash = (37 * hash) + RANDOM_COEF_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRandomCoef());
      }
      if (hasMinTargetPixels()) {
        hash = (37 * hash) + MIN_TARGET_PIXELS_FIELD_NUMBER;
        hash = (53 * hash) + getMinTargetPixels();
      }
      if (hasMaxTargetPixels()) {
        hash = (37 * hash) + MAX_TARGET_PIXELS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxTargetPixels();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly shrinks image (keeping aspect ratio) to a target number of pixels.
     * If the image contains less than the chosen target number of pixels, it will
     * not be changed.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomDownscaleToTargetPixels}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomDownscaleToTargetPixels)
        object_detection.protos.Preprocessor.RandomDownscaleToTargetPixelsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomDownscaleToTargetPixels_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomDownscaleToTargetPixels_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.class, object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        randomCoef_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        minTargetPixels_ = 300000;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxTargetPixels_ = 500000;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomDownscaleToTargetPixels_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels build() {
        object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels buildPartial() {
        object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels result = new object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.randomCoef_ = randomCoef_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minTargetPixels_ = minTargetPixels_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxTargetPixels_ = maxTargetPixels_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels other) {
        if (other == object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels.getDefaultInstance()) return this;
        if (other.hasRandomCoef()) {
          setRandomCoef(other.getRandomCoef());
        }
        if (other.hasMinTargetPixels()) {
          setMinTargetPixels(other.getMinTargetPixels());
        }
        if (other.hasMaxTargetPixels()) {
          setMaxTargetPixels(other.getMaxTargetPixels());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float randomCoef_ ;
      /**
       * <pre>
       * Probability of keeping the original image.
       * </pre>
       *
       * <code>optional float random_coef = 1 [default = 0];</code>
       * @return Whether the randomCoef field is set.
       */
      @java.lang.Override
      public boolean hasRandomCoef() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Probability of keeping the original image.
       * </pre>
       *
       * <code>optional float random_coef = 1 [default = 0];</code>
       * @return The randomCoef.
       */
      @java.lang.Override
      public float getRandomCoef() {
        return randomCoef_;
      }
      /**
       * <pre>
       * Probability of keeping the original image.
       * </pre>
       *
       * <code>optional float random_coef = 1 [default = 0];</code>
       * @param value The randomCoef to set.
       * @return This builder for chaining.
       */
      public Builder setRandomCoef(float value) {
        bitField0_ |= 0x00000001;
        randomCoef_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Probability of keeping the original image.
       * </pre>
       *
       * <code>optional float random_coef = 1 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearRandomCoef() {
        bitField0_ = (bitField0_ & ~0x00000001);
        randomCoef_ = 0F;
        onChanged();
        return this;
      }

      private int minTargetPixels_ = 300000;
      /**
       * <pre>
       * The target number of pixels will be chosen to be in the range
       * [min_target_pixels, max_target_pixels]
       * </pre>
       *
       * <code>optional int32 min_target_pixels = 2 [default = 300000];</code>
       * @return Whether the minTargetPixels field is set.
       */
      @java.lang.Override
      public boolean hasMinTargetPixels() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The target number of pixels will be chosen to be in the range
       * [min_target_pixels, max_target_pixels]
       * </pre>
       *
       * <code>optional int32 min_target_pixels = 2 [default = 300000];</code>
       * @return The minTargetPixels.
       */
      @java.lang.Override
      public int getMinTargetPixels() {
        return minTargetPixels_;
      }
      /**
       * <pre>
       * The target number of pixels will be chosen to be in the range
       * [min_target_pixels, max_target_pixels]
       * </pre>
       *
       * <code>optional int32 min_target_pixels = 2 [default = 300000];</code>
       * @param value The minTargetPixels to set.
       * @return This builder for chaining.
       */
      public Builder setMinTargetPixels(int value) {
        bitField0_ |= 0x00000002;
        minTargetPixels_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The target number of pixels will be chosen to be in the range
       * [min_target_pixels, max_target_pixels]
       * </pre>
       *
       * <code>optional int32 min_target_pixels = 2 [default = 300000];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinTargetPixels() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minTargetPixels_ = 300000;
        onChanged();
        return this;
      }

      private int maxTargetPixels_ = 500000;
      /**
       * <code>optional int32 max_target_pixels = 3 [default = 500000];</code>
       * @return Whether the maxTargetPixels field is set.
       */
      @java.lang.Override
      public boolean hasMaxTargetPixels() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 max_target_pixels = 3 [default = 500000];</code>
       * @return The maxTargetPixels.
       */
      @java.lang.Override
      public int getMaxTargetPixels() {
        return maxTargetPixels_;
      }
      /**
       * <code>optional int32 max_target_pixels = 3 [default = 500000];</code>
       * @param value The maxTargetPixels to set.
       * @return This builder for chaining.
       */
      public Builder setMaxTargetPixels(int value) {
        bitField0_ |= 0x00000004;
        maxTargetPixels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_target_pixels = 3 [default = 500000];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxTargetPixels() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxTargetPixels_ = 500000;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomDownscaleToTargetPixels)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomDownscaleToTargetPixels)
    private static final object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels();
    }

    public static object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomDownscaleToTargetPixels>
        PARSER = new com.google.protobuf.AbstractParser<RandomDownscaleToTargetPixels>() {
      @java.lang.Override
      public RandomDownscaleToTargetPixels parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomDownscaleToTargetPixels(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomDownscaleToTargetPixels> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomDownscaleToTargetPixels> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomDownscaleToTargetPixels getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomPatchGaussianOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomPatchGaussian)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Probability of keeping the original image.
     * </pre>
     *
     * <code>optional float random_coef = 1 [default = 0];</code>
     * @return Whether the randomCoef field is set.
     */
    boolean hasRandomCoef();
    /**
     * <pre>
     * Probability of keeping the original image.
     * </pre>
     *
     * <code>optional float random_coef = 1 [default = 0];</code>
     * @return The randomCoef.
     */
    float getRandomCoef();

    /**
     * <pre>
     * The patch size will be chosen to be in the range
     * [min_patch_size, max_patch_size).
     * </pre>
     *
     * <code>optional int32 min_patch_size = 2 [default = 1];</code>
     * @return Whether the minPatchSize field is set.
     */
    boolean hasMinPatchSize();
    /**
     * <pre>
     * The patch size will be chosen to be in the range
     * [min_patch_size, max_patch_size).
     * </pre>
     *
     * <code>optional int32 min_patch_size = 2 [default = 1];</code>
     * @return The minPatchSize.
     */
    int getMinPatchSize();

    /**
     * <code>optional int32 max_patch_size = 3 [default = 250];</code>
     * @return Whether the maxPatchSize field is set.
     */
    boolean hasMaxPatchSize();
    /**
     * <code>optional int32 max_patch_size = 3 [default = 250];</code>
     * @return The maxPatchSize.
     */
    int getMaxPatchSize();

    /**
     * <pre>
     * The standard deviation of the gaussian noise applied within the patch will
     * be chosen to be in the range [min_gaussian_stddev, max_gaussian_stddev).
     * </pre>
     *
     * <code>optional float min_gaussian_stddev = 4 [default = 0];</code>
     * @return Whether the minGaussianStddev field is set.
     */
    boolean hasMinGaussianStddev();
    /**
     * <pre>
     * The standard deviation of the gaussian noise applied within the patch will
     * be chosen to be in the range [min_gaussian_stddev, max_gaussian_stddev).
     * </pre>
     *
     * <code>optional float min_gaussian_stddev = 4 [default = 0];</code>
     * @return The minGaussianStddev.
     */
    float getMinGaussianStddev();

    /**
     * <code>optional float max_gaussian_stddev = 5 [default = 1];</code>
     * @return Whether the maxGaussianStddev field is set.
     */
    boolean hasMaxGaussianStddev();
    /**
     * <code>optional float max_gaussian_stddev = 5 [default = 1];</code>
     * @return The maxGaussianStddev.
     */
    float getMaxGaussianStddev();
  }
  /**
   * Protobuf type {@code object_detection.protos.RandomPatchGaussian}
   */
  public static final class RandomPatchGaussian extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomPatchGaussian)
      RandomPatchGaussianOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomPatchGaussian.newBuilder() to construct.
    private RandomPatchGaussian(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomPatchGaussian() {
      minPatchSize_ = 1;
      maxPatchSize_ = 250;
      maxGaussianStddev_ = 1F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomPatchGaussian();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomPatchGaussian(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              randomCoef_ = input.readFloat();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              minPatchSize_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              maxPatchSize_ = input.readInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              minGaussianStddev_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              maxGaussianStddev_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomPatchGaussian_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomPatchGaussian_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomPatchGaussian.class, object_detection.protos.Preprocessor.RandomPatchGaussian.Builder.class);
    }

    private int bitField0_;
    public static final int RANDOM_COEF_FIELD_NUMBER = 1;
    private float randomCoef_;
    /**
     * <pre>
     * Probability of keeping the original image.
     * </pre>
     *
     * <code>optional float random_coef = 1 [default = 0];</code>
     * @return Whether the randomCoef field is set.
     */
    @java.lang.Override
    public boolean hasRandomCoef() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Probability of keeping the original image.
     * </pre>
     *
     * <code>optional float random_coef = 1 [default = 0];</code>
     * @return The randomCoef.
     */
    @java.lang.Override
    public float getRandomCoef() {
      return randomCoef_;
    }

    public static final int MIN_PATCH_SIZE_FIELD_NUMBER = 2;
    private int minPatchSize_;
    /**
     * <pre>
     * The patch size will be chosen to be in the range
     * [min_patch_size, max_patch_size).
     * </pre>
     *
     * <code>optional int32 min_patch_size = 2 [default = 1];</code>
     * @return Whether the minPatchSize field is set.
     */
    @java.lang.Override
    public boolean hasMinPatchSize() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The patch size will be chosen to be in the range
     * [min_patch_size, max_patch_size).
     * </pre>
     *
     * <code>optional int32 min_patch_size = 2 [default = 1];</code>
     * @return The minPatchSize.
     */
    @java.lang.Override
    public int getMinPatchSize() {
      return minPatchSize_;
    }

    public static final int MAX_PATCH_SIZE_FIELD_NUMBER = 3;
    private int maxPatchSize_;
    /**
     * <code>optional int32 max_patch_size = 3 [default = 250];</code>
     * @return Whether the maxPatchSize field is set.
     */
    @java.lang.Override
    public boolean hasMaxPatchSize() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int32 max_patch_size = 3 [default = 250];</code>
     * @return The maxPatchSize.
     */
    @java.lang.Override
    public int getMaxPatchSize() {
      return maxPatchSize_;
    }

    public static final int MIN_GAUSSIAN_STDDEV_FIELD_NUMBER = 4;
    private float minGaussianStddev_;
    /**
     * <pre>
     * The standard deviation of the gaussian noise applied within the patch will
     * be chosen to be in the range [min_gaussian_stddev, max_gaussian_stddev).
     * </pre>
     *
     * <code>optional float min_gaussian_stddev = 4 [default = 0];</code>
     * @return Whether the minGaussianStddev field is set.
     */
    @java.lang.Override
    public boolean hasMinGaussianStddev() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The standard deviation of the gaussian noise applied within the patch will
     * be chosen to be in the range [min_gaussian_stddev, max_gaussian_stddev).
     * </pre>
     *
     * <code>optional float min_gaussian_stddev = 4 [default = 0];</code>
     * @return The minGaussianStddev.
     */
    @java.lang.Override
    public float getMinGaussianStddev() {
      return minGaussianStddev_;
    }

    public static final int MAX_GAUSSIAN_STDDEV_FIELD_NUMBER = 5;
    private float maxGaussianStddev_;
    /**
     * <code>optional float max_gaussian_stddev = 5 [default = 1];</code>
     * @return Whether the maxGaussianStddev field is set.
     */
    @java.lang.Override
    public boolean hasMaxGaussianStddev() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional float max_gaussian_stddev = 5 [default = 1];</code>
     * @return The maxGaussianStddev.
     */
    @java.lang.Override
    public float getMaxGaussianStddev() {
      return maxGaussianStddev_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, randomCoef_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, minPatchSize_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, maxPatchSize_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeFloat(4, minGaussianStddev_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeFloat(5, maxGaussianStddev_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, randomCoef_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, minPatchSize_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, maxPatchSize_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, minGaussianStddev_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, maxGaussianStddev_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomPatchGaussian)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomPatchGaussian other = (object_detection.protos.Preprocessor.RandomPatchGaussian) obj;

      if (hasRandomCoef() != other.hasRandomCoef()) return false;
      if (hasRandomCoef()) {
        if (java.lang.Float.floatToIntBits(getRandomCoef())
            != java.lang.Float.floatToIntBits(
                other.getRandomCoef())) return false;
      }
      if (hasMinPatchSize() != other.hasMinPatchSize()) return false;
      if (hasMinPatchSize()) {
        if (getMinPatchSize()
            != other.getMinPatchSize()) return false;
      }
      if (hasMaxPatchSize() != other.hasMaxPatchSize()) return false;
      if (hasMaxPatchSize()) {
        if (getMaxPatchSize()
            != other.getMaxPatchSize()) return false;
      }
      if (hasMinGaussianStddev() != other.hasMinGaussianStddev()) return false;
      if (hasMinGaussianStddev()) {
        if (java.lang.Float.floatToIntBits(getMinGaussianStddev())
            != java.lang.Float.floatToIntBits(
                other.getMinGaussianStddev())) return false;
      }
      if (hasMaxGaussianStddev() != other.hasMaxGaussianStddev()) return false;
      if (hasMaxGaussianStddev()) {
        if (java.lang.Float.floatToIntBits(getMaxGaussianStddev())
            != java.lang.Float.floatToIntBits(
                other.getMaxGaussianStddev())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRandomCoef()) {
        hash = (37 * hash) + RANDOM_COEF_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRandomCoef());
      }
      if (hasMinPatchSize()) {
        hash = (37 * hash) + MIN_PATCH_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getMinPatchSize();
      }
      if (hasMaxPatchSize()) {
        hash = (37 * hash) + MAX_PATCH_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getMaxPatchSize();
      }
      if (hasMinGaussianStddev()) {
        hash = (37 * hash) + MIN_GAUSSIAN_STDDEV_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMinGaussianStddev());
      }
      if (hasMaxGaussianStddev()) {
        hash = (37 * hash) + MAX_GAUSSIAN_STDDEV_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMaxGaussianStddev());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomPatchGaussian parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomPatchGaussian parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomPatchGaussian parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomPatchGaussian parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomPatchGaussian parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomPatchGaussian parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomPatchGaussian parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomPatchGaussian parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomPatchGaussian parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomPatchGaussian parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomPatchGaussian parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomPatchGaussian parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomPatchGaussian prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code object_detection.protos.RandomPatchGaussian}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomPatchGaussian)
        object_detection.protos.Preprocessor.RandomPatchGaussianOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomPatchGaussian_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomPatchGaussian_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomPatchGaussian.class, object_detection.protos.Preprocessor.RandomPatchGaussian.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomPatchGaussian.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        randomCoef_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        minPatchSize_ = 1;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxPatchSize_ = 250;
        bitField0_ = (bitField0_ & ~0x00000004);
        minGaussianStddev_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxGaussianStddev_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomPatchGaussian_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomPatchGaussian getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomPatchGaussian.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomPatchGaussian build() {
        object_detection.protos.Preprocessor.RandomPatchGaussian result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomPatchGaussian buildPartial() {
        object_detection.protos.Preprocessor.RandomPatchGaussian result = new object_detection.protos.Preprocessor.RandomPatchGaussian(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.randomCoef_ = randomCoef_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minPatchSize_ = minPatchSize_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxPatchSize_ = maxPatchSize_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.minGaussianStddev_ = minGaussianStddev_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxGaussianStddev_ = maxGaussianStddev_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomPatchGaussian) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomPatchGaussian)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomPatchGaussian other) {
        if (other == object_detection.protos.Preprocessor.RandomPatchGaussian.getDefaultInstance()) return this;
        if (other.hasRandomCoef()) {
          setRandomCoef(other.getRandomCoef());
        }
        if (other.hasMinPatchSize()) {
          setMinPatchSize(other.getMinPatchSize());
        }
        if (other.hasMaxPatchSize()) {
          setMaxPatchSize(other.getMaxPatchSize());
        }
        if (other.hasMinGaussianStddev()) {
          setMinGaussianStddev(other.getMinGaussianStddev());
        }
        if (other.hasMaxGaussianStddev()) {
          setMaxGaussianStddev(other.getMaxGaussianStddev());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomPatchGaussian parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomPatchGaussian) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float randomCoef_ ;
      /**
       * <pre>
       * Probability of keeping the original image.
       * </pre>
       *
       * <code>optional float random_coef = 1 [default = 0];</code>
       * @return Whether the randomCoef field is set.
       */
      @java.lang.Override
      public boolean hasRandomCoef() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Probability of keeping the original image.
       * </pre>
       *
       * <code>optional float random_coef = 1 [default = 0];</code>
       * @return The randomCoef.
       */
      @java.lang.Override
      public float getRandomCoef() {
        return randomCoef_;
      }
      /**
       * <pre>
       * Probability of keeping the original image.
       * </pre>
       *
       * <code>optional float random_coef = 1 [default = 0];</code>
       * @param value The randomCoef to set.
       * @return This builder for chaining.
       */
      public Builder setRandomCoef(float value) {
        bitField0_ |= 0x00000001;
        randomCoef_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Probability of keeping the original image.
       * </pre>
       *
       * <code>optional float random_coef = 1 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearRandomCoef() {
        bitField0_ = (bitField0_ & ~0x00000001);
        randomCoef_ = 0F;
        onChanged();
        return this;
      }

      private int minPatchSize_ = 1;
      /**
       * <pre>
       * The patch size will be chosen to be in the range
       * [min_patch_size, max_patch_size).
       * </pre>
       *
       * <code>optional int32 min_patch_size = 2 [default = 1];</code>
       * @return Whether the minPatchSize field is set.
       */
      @java.lang.Override
      public boolean hasMinPatchSize() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The patch size will be chosen to be in the range
       * [min_patch_size, max_patch_size).
       * </pre>
       *
       * <code>optional int32 min_patch_size = 2 [default = 1];</code>
       * @return The minPatchSize.
       */
      @java.lang.Override
      public int getMinPatchSize() {
        return minPatchSize_;
      }
      /**
       * <pre>
       * The patch size will be chosen to be in the range
       * [min_patch_size, max_patch_size).
       * </pre>
       *
       * <code>optional int32 min_patch_size = 2 [default = 1];</code>
       * @param value The minPatchSize to set.
       * @return This builder for chaining.
       */
      public Builder setMinPatchSize(int value) {
        bitField0_ |= 0x00000002;
        minPatchSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The patch size will be chosen to be in the range
       * [min_patch_size, max_patch_size).
       * </pre>
       *
       * <code>optional int32 min_patch_size = 2 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinPatchSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minPatchSize_ = 1;
        onChanged();
        return this;
      }

      private int maxPatchSize_ = 250;
      /**
       * <code>optional int32 max_patch_size = 3 [default = 250];</code>
       * @return Whether the maxPatchSize field is set.
       */
      @java.lang.Override
      public boolean hasMaxPatchSize() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 max_patch_size = 3 [default = 250];</code>
       * @return The maxPatchSize.
       */
      @java.lang.Override
      public int getMaxPatchSize() {
        return maxPatchSize_;
      }
      /**
       * <code>optional int32 max_patch_size = 3 [default = 250];</code>
       * @param value The maxPatchSize to set.
       * @return This builder for chaining.
       */
      public Builder setMaxPatchSize(int value) {
        bitField0_ |= 0x00000004;
        maxPatchSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 max_patch_size = 3 [default = 250];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxPatchSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxPatchSize_ = 250;
        onChanged();
        return this;
      }

      private float minGaussianStddev_ ;
      /**
       * <pre>
       * The standard deviation of the gaussian noise applied within the patch will
       * be chosen to be in the range [min_gaussian_stddev, max_gaussian_stddev).
       * </pre>
       *
       * <code>optional float min_gaussian_stddev = 4 [default = 0];</code>
       * @return Whether the minGaussianStddev field is set.
       */
      @java.lang.Override
      public boolean hasMinGaussianStddev() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The standard deviation of the gaussian noise applied within the patch will
       * be chosen to be in the range [min_gaussian_stddev, max_gaussian_stddev).
       * </pre>
       *
       * <code>optional float min_gaussian_stddev = 4 [default = 0];</code>
       * @return The minGaussianStddev.
       */
      @java.lang.Override
      public float getMinGaussianStddev() {
        return minGaussianStddev_;
      }
      /**
       * <pre>
       * The standard deviation of the gaussian noise applied within the patch will
       * be chosen to be in the range [min_gaussian_stddev, max_gaussian_stddev).
       * </pre>
       *
       * <code>optional float min_gaussian_stddev = 4 [default = 0];</code>
       * @param value The minGaussianStddev to set.
       * @return This builder for chaining.
       */
      public Builder setMinGaussianStddev(float value) {
        bitField0_ |= 0x00000008;
        minGaussianStddev_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The standard deviation of the gaussian noise applied within the patch will
       * be chosen to be in the range [min_gaussian_stddev, max_gaussian_stddev).
       * </pre>
       *
       * <code>optional float min_gaussian_stddev = 4 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearMinGaussianStddev() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minGaussianStddev_ = 0F;
        onChanged();
        return this;
      }

      private float maxGaussianStddev_ = 1F;
      /**
       * <code>optional float max_gaussian_stddev = 5 [default = 1];</code>
       * @return Whether the maxGaussianStddev field is set.
       */
      @java.lang.Override
      public boolean hasMaxGaussianStddev() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional float max_gaussian_stddev = 5 [default = 1];</code>
       * @return The maxGaussianStddev.
       */
      @java.lang.Override
      public float getMaxGaussianStddev() {
        return maxGaussianStddev_;
      }
      /**
       * <code>optional float max_gaussian_stddev = 5 [default = 1];</code>
       * @param value The maxGaussianStddev to set.
       * @return This builder for chaining.
       */
      public Builder setMaxGaussianStddev(float value) {
        bitField0_ |= 0x00000010;
        maxGaussianStddev_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_gaussian_stddev = 5 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxGaussianStddev() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxGaussianStddev_ = 1F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomPatchGaussian)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomPatchGaussian)
    private static final object_detection.protos.Preprocessor.RandomPatchGaussian DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomPatchGaussian();
    }

    public static object_detection.protos.Preprocessor.RandomPatchGaussian getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomPatchGaussian>
        PARSER = new com.google.protobuf.AbstractParser<RandomPatchGaussian>() {
      @java.lang.Override
      public RandomPatchGaussian parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomPatchGaussian(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomPatchGaussian> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomPatchGaussian> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomPatchGaussian getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomSquareCropByScaleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomSquareCropByScale)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The maximum size of the border. The border defines distance in pixels to
     * the image boundaries that will not be considered as a center of a crop.
     * To make sure that the border does not go over the center of the image,
     * we chose the border value by computing the minimum k, such that
     * (max_border / (2**k)) &lt; image_dimension/2
     * </pre>
     *
     * <code>optional int32 max_border = 1 [default = 128];</code>
     * @return Whether the maxBorder field is set.
     */
    boolean hasMaxBorder();
    /**
     * <pre>
     * The maximum size of the border. The border defines distance in pixels to
     * the image boundaries that will not be considered as a center of a crop.
     * To make sure that the border does not go over the center of the image,
     * we chose the border value by computing the minimum k, such that
     * (max_border / (2**k)) &lt; image_dimension/2
     * </pre>
     *
     * <code>optional int32 max_border = 1 [default = 128];</code>
     * @return The maxBorder.
     */
    int getMaxBorder();

    /**
     * <pre>
     * The minimum and maximum values of scale.
     * </pre>
     *
     * <code>optional float scale_min = 2 [default = 0.6];</code>
     * @return Whether the scaleMin field is set.
     */
    boolean hasScaleMin();
    /**
     * <pre>
     * The minimum and maximum values of scale.
     * </pre>
     *
     * <code>optional float scale_min = 2 [default = 0.6];</code>
     * @return The scaleMin.
     */
    float getScaleMin();

    /**
     * <code>optional float scale_max = 3 [default = 1.3];</code>
     * @return Whether the scaleMax field is set.
     */
    boolean hasScaleMax();
    /**
     * <code>optional float scale_max = 3 [default = 1.3];</code>
     * @return The scaleMax.
     */
    float getScaleMax();

    /**
     * <pre>
     * The number of discrete scale values to randomly sample between
     * [min_scale, max_scale]
     * </pre>
     *
     * <code>optional int32 num_scales = 4 [default = 8];</code>
     * @return Whether the numScales field is set.
     */
    boolean hasNumScales();
    /**
     * <pre>
     * The number of discrete scale values to randomly sample between
     * [min_scale, max_scale]
     * </pre>
     *
     * <code>optional int32 num_scales = 4 [default = 8];</code>
     * @return The numScales.
     */
    int getNumScales();
  }
  /**
   * <pre>
   * Extract a square sized crop from an image whose side length is sampled by
   * randomly scaling the maximum spatial dimension of the image. If part of the
   * crop falls outside the image, it is filled with zeros.
   * The augmentation is borrowed from [1]
   * [1]: https://arxiv.org/abs/1904.07850
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomSquareCropByScale}
   */
  public static final class RandomSquareCropByScale extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomSquareCropByScale)
      RandomSquareCropByScaleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomSquareCropByScale.newBuilder() to construct.
    private RandomSquareCropByScale(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomSquareCropByScale() {
      maxBorder_ = 128;
      scaleMin_ = 0.6F;
      scaleMax_ = 1.3F;
      numScales_ = 8;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomSquareCropByScale();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomSquareCropByScale(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              maxBorder_ = input.readInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              scaleMin_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              scaleMax_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              numScales_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomSquareCropByScale_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomSquareCropByScale_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomSquareCropByScale.class, object_detection.protos.Preprocessor.RandomSquareCropByScale.Builder.class);
    }

    private int bitField0_;
    public static final int MAX_BORDER_FIELD_NUMBER = 1;
    private int maxBorder_;
    /**
     * <pre>
     * The maximum size of the border. The border defines distance in pixels to
     * the image boundaries that will not be considered as a center of a crop.
     * To make sure that the border does not go over the center of the image,
     * we chose the border value by computing the minimum k, such that
     * (max_border / (2**k)) &lt; image_dimension/2
     * </pre>
     *
     * <code>optional int32 max_border = 1 [default = 128];</code>
     * @return Whether the maxBorder field is set.
     */
    @java.lang.Override
    public boolean hasMaxBorder() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The maximum size of the border. The border defines distance in pixels to
     * the image boundaries that will not be considered as a center of a crop.
     * To make sure that the border does not go over the center of the image,
     * we chose the border value by computing the minimum k, such that
     * (max_border / (2**k)) &lt; image_dimension/2
     * </pre>
     *
     * <code>optional int32 max_border = 1 [default = 128];</code>
     * @return The maxBorder.
     */
    @java.lang.Override
    public int getMaxBorder() {
      return maxBorder_;
    }

    public static final int SCALE_MIN_FIELD_NUMBER = 2;
    private float scaleMin_;
    /**
     * <pre>
     * The minimum and maximum values of scale.
     * </pre>
     *
     * <code>optional float scale_min = 2 [default = 0.6];</code>
     * @return Whether the scaleMin field is set.
     */
    @java.lang.Override
    public boolean hasScaleMin() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The minimum and maximum values of scale.
     * </pre>
     *
     * <code>optional float scale_min = 2 [default = 0.6];</code>
     * @return The scaleMin.
     */
    @java.lang.Override
    public float getScaleMin() {
      return scaleMin_;
    }

    public static final int SCALE_MAX_FIELD_NUMBER = 3;
    private float scaleMax_;
    /**
     * <code>optional float scale_max = 3 [default = 1.3];</code>
     * @return Whether the scaleMax field is set.
     */
    @java.lang.Override
    public boolean hasScaleMax() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional float scale_max = 3 [default = 1.3];</code>
     * @return The scaleMax.
     */
    @java.lang.Override
    public float getScaleMax() {
      return scaleMax_;
    }

    public static final int NUM_SCALES_FIELD_NUMBER = 4;
    private int numScales_;
    /**
     * <pre>
     * The number of discrete scale values to randomly sample between
     * [min_scale, max_scale]
     * </pre>
     *
     * <code>optional int32 num_scales = 4 [default = 8];</code>
     * @return Whether the numScales field is set.
     */
    @java.lang.Override
    public boolean hasNumScales() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The number of discrete scale values to randomly sample between
     * [min_scale, max_scale]
     * </pre>
     *
     * <code>optional int32 num_scales = 4 [default = 8];</code>
     * @return The numScales.
     */
    @java.lang.Override
    public int getNumScales() {
      return numScales_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, maxBorder_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, scaleMin_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, scaleMax_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, numScales_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, maxBorder_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, scaleMin_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, scaleMax_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, numScales_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomSquareCropByScale)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomSquareCropByScale other = (object_detection.protos.Preprocessor.RandomSquareCropByScale) obj;

      if (hasMaxBorder() != other.hasMaxBorder()) return false;
      if (hasMaxBorder()) {
        if (getMaxBorder()
            != other.getMaxBorder()) return false;
      }
      if (hasScaleMin() != other.hasScaleMin()) return false;
      if (hasScaleMin()) {
        if (java.lang.Float.floatToIntBits(getScaleMin())
            != java.lang.Float.floatToIntBits(
                other.getScaleMin())) return false;
      }
      if (hasScaleMax() != other.hasScaleMax()) return false;
      if (hasScaleMax()) {
        if (java.lang.Float.floatToIntBits(getScaleMax())
            != java.lang.Float.floatToIntBits(
                other.getScaleMax())) return false;
      }
      if (hasNumScales() != other.hasNumScales()) return false;
      if (hasNumScales()) {
        if (getNumScales()
            != other.getNumScales()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMaxBorder()) {
        hash = (37 * hash) + MAX_BORDER_FIELD_NUMBER;
        hash = (53 * hash) + getMaxBorder();
      }
      if (hasScaleMin()) {
        hash = (37 * hash) + SCALE_MIN_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getScaleMin());
      }
      if (hasScaleMax()) {
        hash = (37 * hash) + SCALE_MAX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getScaleMax());
      }
      if (hasNumScales()) {
        hash = (37 * hash) + NUM_SCALES_FIELD_NUMBER;
        hash = (53 * hash) + getNumScales();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomSquareCropByScale parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomSquareCropByScale parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomSquareCropByScale parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomSquareCropByScale parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomSquareCropByScale parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomSquareCropByScale parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomSquareCropByScale parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomSquareCropByScale parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomSquareCropByScale parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomSquareCropByScale parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomSquareCropByScale parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomSquareCropByScale parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomSquareCropByScale prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Extract a square sized crop from an image whose side length is sampled by
     * randomly scaling the maximum spatial dimension of the image. If part of the
     * crop falls outside the image, it is filled with zeros.
     * The augmentation is borrowed from [1]
     * [1]: https://arxiv.org/abs/1904.07850
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomSquareCropByScale}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomSquareCropByScale)
        object_detection.protos.Preprocessor.RandomSquareCropByScaleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomSquareCropByScale_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomSquareCropByScale_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomSquareCropByScale.class, object_detection.protos.Preprocessor.RandomSquareCropByScale.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomSquareCropByScale.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        maxBorder_ = 128;
        bitField0_ = (bitField0_ & ~0x00000001);
        scaleMin_ = 0.6F;
        bitField0_ = (bitField0_ & ~0x00000002);
        scaleMax_ = 1.3F;
        bitField0_ = (bitField0_ & ~0x00000004);
        numScales_ = 8;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomSquareCropByScale_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomSquareCropByScale getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomSquareCropByScale.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomSquareCropByScale build() {
        object_detection.protos.Preprocessor.RandomSquareCropByScale result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomSquareCropByScale buildPartial() {
        object_detection.protos.Preprocessor.RandomSquareCropByScale result = new object_detection.protos.Preprocessor.RandomSquareCropByScale(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.maxBorder_ = maxBorder_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.scaleMin_ = scaleMin_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.scaleMax_ = scaleMax_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.numScales_ = numScales_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomSquareCropByScale) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomSquareCropByScale)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomSquareCropByScale other) {
        if (other == object_detection.protos.Preprocessor.RandomSquareCropByScale.getDefaultInstance()) return this;
        if (other.hasMaxBorder()) {
          setMaxBorder(other.getMaxBorder());
        }
        if (other.hasScaleMin()) {
          setScaleMin(other.getScaleMin());
        }
        if (other.hasScaleMax()) {
          setScaleMax(other.getScaleMax());
        }
        if (other.hasNumScales()) {
          setNumScales(other.getNumScales());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomSquareCropByScale parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomSquareCropByScale) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int maxBorder_ = 128;
      /**
       * <pre>
       * The maximum size of the border. The border defines distance in pixels to
       * the image boundaries that will not be considered as a center of a crop.
       * To make sure that the border does not go over the center of the image,
       * we chose the border value by computing the minimum k, such that
       * (max_border / (2**k)) &lt; image_dimension/2
       * </pre>
       *
       * <code>optional int32 max_border = 1 [default = 128];</code>
       * @return Whether the maxBorder field is set.
       */
      @java.lang.Override
      public boolean hasMaxBorder() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The maximum size of the border. The border defines distance in pixels to
       * the image boundaries that will not be considered as a center of a crop.
       * To make sure that the border does not go over the center of the image,
       * we chose the border value by computing the minimum k, such that
       * (max_border / (2**k)) &lt; image_dimension/2
       * </pre>
       *
       * <code>optional int32 max_border = 1 [default = 128];</code>
       * @return The maxBorder.
       */
      @java.lang.Override
      public int getMaxBorder() {
        return maxBorder_;
      }
      /**
       * <pre>
       * The maximum size of the border. The border defines distance in pixels to
       * the image boundaries that will not be considered as a center of a crop.
       * To make sure that the border does not go over the center of the image,
       * we chose the border value by computing the minimum k, such that
       * (max_border / (2**k)) &lt; image_dimension/2
       * </pre>
       *
       * <code>optional int32 max_border = 1 [default = 128];</code>
       * @param value The maxBorder to set.
       * @return This builder for chaining.
       */
      public Builder setMaxBorder(int value) {
        bitField0_ |= 0x00000001;
        maxBorder_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The maximum size of the border. The border defines distance in pixels to
       * the image boundaries that will not be considered as a center of a crop.
       * To make sure that the border does not go over the center of the image,
       * we chose the border value by computing the minimum k, such that
       * (max_border / (2**k)) &lt; image_dimension/2
       * </pre>
       *
       * <code>optional int32 max_border = 1 [default = 128];</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxBorder() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxBorder_ = 128;
        onChanged();
        return this;
      }

      private float scaleMin_ = 0.6F;
      /**
       * <pre>
       * The minimum and maximum values of scale.
       * </pre>
       *
       * <code>optional float scale_min = 2 [default = 0.6];</code>
       * @return Whether the scaleMin field is set.
       */
      @java.lang.Override
      public boolean hasScaleMin() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The minimum and maximum values of scale.
       * </pre>
       *
       * <code>optional float scale_min = 2 [default = 0.6];</code>
       * @return The scaleMin.
       */
      @java.lang.Override
      public float getScaleMin() {
        return scaleMin_;
      }
      /**
       * <pre>
       * The minimum and maximum values of scale.
       * </pre>
       *
       * <code>optional float scale_min = 2 [default = 0.6];</code>
       * @param value The scaleMin to set.
       * @return This builder for chaining.
       */
      public Builder setScaleMin(float value) {
        bitField0_ |= 0x00000002;
        scaleMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The minimum and maximum values of scale.
       * </pre>
       *
       * <code>optional float scale_min = 2 [default = 0.6];</code>
       * @return This builder for chaining.
       */
      public Builder clearScaleMin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        scaleMin_ = 0.6F;
        onChanged();
        return this;
      }

      private float scaleMax_ = 1.3F;
      /**
       * <code>optional float scale_max = 3 [default = 1.3];</code>
       * @return Whether the scaleMax field is set.
       */
      @java.lang.Override
      public boolean hasScaleMax() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional float scale_max = 3 [default = 1.3];</code>
       * @return The scaleMax.
       */
      @java.lang.Override
      public float getScaleMax() {
        return scaleMax_;
      }
      /**
       * <code>optional float scale_max = 3 [default = 1.3];</code>
       * @param value The scaleMax to set.
       * @return This builder for chaining.
       */
      public Builder setScaleMax(float value) {
        bitField0_ |= 0x00000004;
        scaleMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float scale_max = 3 [default = 1.3];</code>
       * @return This builder for chaining.
       */
      public Builder clearScaleMax() {
        bitField0_ = (bitField0_ & ~0x00000004);
        scaleMax_ = 1.3F;
        onChanged();
        return this;
      }

      private int numScales_ = 8;
      /**
       * <pre>
       * The number of discrete scale values to randomly sample between
       * [min_scale, max_scale]
       * </pre>
       *
       * <code>optional int32 num_scales = 4 [default = 8];</code>
       * @return Whether the numScales field is set.
       */
      @java.lang.Override
      public boolean hasNumScales() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The number of discrete scale values to randomly sample between
       * [min_scale, max_scale]
       * </pre>
       *
       * <code>optional int32 num_scales = 4 [default = 8];</code>
       * @return The numScales.
       */
      @java.lang.Override
      public int getNumScales() {
        return numScales_;
      }
      /**
       * <pre>
       * The number of discrete scale values to randomly sample between
       * [min_scale, max_scale]
       * </pre>
       *
       * <code>optional int32 num_scales = 4 [default = 8];</code>
       * @param value The numScales to set.
       * @return This builder for chaining.
       */
      public Builder setNumScales(int value) {
        bitField0_ |= 0x00000008;
        numScales_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of discrete scale values to randomly sample between
       * [min_scale, max_scale]
       * </pre>
       *
       * <code>optional int32 num_scales = 4 [default = 8];</code>
       * @return This builder for chaining.
       */
      public Builder clearNumScales() {
        bitField0_ = (bitField0_ & ~0x00000008);
        numScales_ = 8;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomSquareCropByScale)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomSquareCropByScale)
    private static final object_detection.protos.Preprocessor.RandomSquareCropByScale DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomSquareCropByScale();
    }

    public static object_detection.protos.Preprocessor.RandomSquareCropByScale getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomSquareCropByScale>
        PARSER = new com.google.protobuf.AbstractParser<RandomSquareCropByScale>() {
      @java.lang.Override
      public RandomSquareCropByScale parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomSquareCropByScale(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomSquareCropByScale> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomSquareCropByScale> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomSquareCropByScale getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RandomScaleCropAndPadToSquareOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.RandomScaleCropAndPadToSquare)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The (square) output image size
     * </pre>
     *
     * <code>optional int32 output_size = 1 [default = 512];</code>
     * @return Whether the outputSize field is set.
     */
    boolean hasOutputSize();
    /**
     * <pre>
     * The (square) output image size
     * </pre>
     *
     * <code>optional int32 output_size = 1 [default = 512];</code>
     * @return The outputSize.
     */
    int getOutputSize();

    /**
     * <pre>
     * The minimum and maximum values from which to sample the random scale.
     * </pre>
     *
     * <code>optional float scale_min = 2 [default = 0.1];</code>
     * @return Whether the scaleMin field is set.
     */
    boolean hasScaleMin();
    /**
     * <pre>
     * The minimum and maximum values from which to sample the random scale.
     * </pre>
     *
     * <code>optional float scale_min = 2 [default = 0.1];</code>
     * @return The scaleMin.
     */
    float getScaleMin();

    /**
     * <code>optional float scale_max = 3 [default = 2];</code>
     * @return Whether the scaleMax field is set.
     */
    boolean hasScaleMax();
    /**
     * <code>optional float scale_max = 3 [default = 2];</code>
     * @return The scaleMax.
     */
    float getScaleMax();
  }
  /**
   * <pre>
   * Randomly scale, crop, and then pad an image to the desired square output
   * dimensions. Specifically, this method first samples a random_scale factor
   * from a uniform distribution between scale_min and scale_max, and then resizes
   * the image such that it's maximum dimension is (output_size * random_scale).
   * Secondly, a square output_size crop is extracted from the resized image, and
   * finally the cropped region is padded to the desired square output_size.
   * The augmentation is borrowed from [1]
   * [1]: https://arxiv.org/abs/1911.09070
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.RandomScaleCropAndPadToSquare}
   */
  public static final class RandomScaleCropAndPadToSquare extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.RandomScaleCropAndPadToSquare)
      RandomScaleCropAndPadToSquareOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RandomScaleCropAndPadToSquare.newBuilder() to construct.
    private RandomScaleCropAndPadToSquare(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RandomScaleCropAndPadToSquare() {
      outputSize_ = 512;
      scaleMin_ = 0.1F;
      scaleMax_ = 2F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RandomScaleCropAndPadToSquare();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RandomScaleCropAndPadToSquare(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              outputSize_ = input.readInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              scaleMin_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              scaleMax_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomScaleCropAndPadToSquare_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomScaleCropAndPadToSquare_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.class, object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.Builder.class);
    }

    private int bitField0_;
    public static final int OUTPUT_SIZE_FIELD_NUMBER = 1;
    private int outputSize_;
    /**
     * <pre>
     * The (square) output image size
     * </pre>
     *
     * <code>optional int32 output_size = 1 [default = 512];</code>
     * @return Whether the outputSize field is set.
     */
    @java.lang.Override
    public boolean hasOutputSize() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The (square) output image size
     * </pre>
     *
     * <code>optional int32 output_size = 1 [default = 512];</code>
     * @return The outputSize.
     */
    @java.lang.Override
    public int getOutputSize() {
      return outputSize_;
    }

    public static final int SCALE_MIN_FIELD_NUMBER = 2;
    private float scaleMin_;
    /**
     * <pre>
     * The minimum and maximum values from which to sample the random scale.
     * </pre>
     *
     * <code>optional float scale_min = 2 [default = 0.1];</code>
     * @return Whether the scaleMin field is set.
     */
    @java.lang.Override
    public boolean hasScaleMin() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The minimum and maximum values from which to sample the random scale.
     * </pre>
     *
     * <code>optional float scale_min = 2 [default = 0.1];</code>
     * @return The scaleMin.
     */
    @java.lang.Override
    public float getScaleMin() {
      return scaleMin_;
    }

    public static final int SCALE_MAX_FIELD_NUMBER = 3;
    private float scaleMax_;
    /**
     * <code>optional float scale_max = 3 [default = 2];</code>
     * @return Whether the scaleMax field is set.
     */
    @java.lang.Override
    public boolean hasScaleMax() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional float scale_max = 3 [default = 2];</code>
     * @return The scaleMax.
     */
    @java.lang.Override
    public float getScaleMax() {
      return scaleMax_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, outputSize_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, scaleMin_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, scaleMax_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, outputSize_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, scaleMin_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, scaleMax_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare other = (object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare) obj;

      if (hasOutputSize() != other.hasOutputSize()) return false;
      if (hasOutputSize()) {
        if (getOutputSize()
            != other.getOutputSize()) return false;
      }
      if (hasScaleMin() != other.hasScaleMin()) return false;
      if (hasScaleMin()) {
        if (java.lang.Float.floatToIntBits(getScaleMin())
            != java.lang.Float.floatToIntBits(
                other.getScaleMin())) return false;
      }
      if (hasScaleMax() != other.hasScaleMax()) return false;
      if (hasScaleMax()) {
        if (java.lang.Float.floatToIntBits(getScaleMax())
            != java.lang.Float.floatToIntBits(
                other.getScaleMax())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOutputSize()) {
        hash = (37 * hash) + OUTPUT_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getOutputSize();
      }
      if (hasScaleMin()) {
        hash = (37 * hash) + SCALE_MIN_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getScaleMin());
      }
      if (hasScaleMax()) {
        hash = (37 * hash) + SCALE_MAX_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getScaleMax());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Randomly scale, crop, and then pad an image to the desired square output
     * dimensions. Specifically, this method first samples a random_scale factor
     * from a uniform distribution between scale_min and scale_max, and then resizes
     * the image such that it's maximum dimension is (output_size * random_scale).
     * Secondly, a square output_size crop is extracted from the resized image, and
     * finally the cropped region is padded to the desired square output_size.
     * The augmentation is borrowed from [1]
     * [1]: https://arxiv.org/abs/1911.09070
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.RandomScaleCropAndPadToSquare}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.RandomScaleCropAndPadToSquare)
        object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquareOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomScaleCropAndPadToSquare_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomScaleCropAndPadToSquare_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.class, object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        outputSize_ = 512;
        bitField0_ = (bitField0_ & ~0x00000001);
        scaleMin_ = 0.1F;
        bitField0_ = (bitField0_ & ~0x00000002);
        scaleMax_ = 2F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_RandomScaleCropAndPadToSquare_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare build() {
        object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare buildPartial() {
        object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare result = new object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.outputSize_ = outputSize_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.scaleMin_ = scaleMin_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.scaleMax_ = scaleMax_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare) {
          return mergeFrom((object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare other) {
        if (other == object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare.getDefaultInstance()) return this;
        if (other.hasOutputSize()) {
          setOutputSize(other.getOutputSize());
        }
        if (other.hasScaleMin()) {
          setScaleMin(other.getScaleMin());
        }
        if (other.hasScaleMax()) {
          setScaleMax(other.getScaleMax());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int outputSize_ = 512;
      /**
       * <pre>
       * The (square) output image size
       * </pre>
       *
       * <code>optional int32 output_size = 1 [default = 512];</code>
       * @return Whether the outputSize field is set.
       */
      @java.lang.Override
      public boolean hasOutputSize() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The (square) output image size
       * </pre>
       *
       * <code>optional int32 output_size = 1 [default = 512];</code>
       * @return The outputSize.
       */
      @java.lang.Override
      public int getOutputSize() {
        return outputSize_;
      }
      /**
       * <pre>
       * The (square) output image size
       * </pre>
       *
       * <code>optional int32 output_size = 1 [default = 512];</code>
       * @param value The outputSize to set.
       * @return This builder for chaining.
       */
      public Builder setOutputSize(int value) {
        bitField0_ |= 0x00000001;
        outputSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The (square) output image size
       * </pre>
       *
       * <code>optional int32 output_size = 1 [default = 512];</code>
       * @return This builder for chaining.
       */
      public Builder clearOutputSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        outputSize_ = 512;
        onChanged();
        return this;
      }

      private float scaleMin_ = 0.1F;
      /**
       * <pre>
       * The minimum and maximum values from which to sample the random scale.
       * </pre>
       *
       * <code>optional float scale_min = 2 [default = 0.1];</code>
       * @return Whether the scaleMin field is set.
       */
      @java.lang.Override
      public boolean hasScaleMin() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The minimum and maximum values from which to sample the random scale.
       * </pre>
       *
       * <code>optional float scale_min = 2 [default = 0.1];</code>
       * @return The scaleMin.
       */
      @java.lang.Override
      public float getScaleMin() {
        return scaleMin_;
      }
      /**
       * <pre>
       * The minimum and maximum values from which to sample the random scale.
       * </pre>
       *
       * <code>optional float scale_min = 2 [default = 0.1];</code>
       * @param value The scaleMin to set.
       * @return This builder for chaining.
       */
      public Builder setScaleMin(float value) {
        bitField0_ |= 0x00000002;
        scaleMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The minimum and maximum values from which to sample the random scale.
       * </pre>
       *
       * <code>optional float scale_min = 2 [default = 0.1];</code>
       * @return This builder for chaining.
       */
      public Builder clearScaleMin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        scaleMin_ = 0.1F;
        onChanged();
        return this;
      }

      private float scaleMax_ = 2F;
      /**
       * <code>optional float scale_max = 3 [default = 2];</code>
       * @return Whether the scaleMax field is set.
       */
      @java.lang.Override
      public boolean hasScaleMax() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional float scale_max = 3 [default = 2];</code>
       * @return The scaleMax.
       */
      @java.lang.Override
      public float getScaleMax() {
        return scaleMax_;
      }
      /**
       * <code>optional float scale_max = 3 [default = 2];</code>
       * @param value The scaleMax to set.
       * @return This builder for chaining.
       */
      public Builder setScaleMax(float value) {
        bitField0_ |= 0x00000004;
        scaleMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float scale_max = 3 [default = 2];</code>
       * @return This builder for chaining.
       */
      public Builder clearScaleMax() {
        bitField0_ = (bitField0_ & ~0x00000004);
        scaleMax_ = 2F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.RandomScaleCropAndPadToSquare)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.RandomScaleCropAndPadToSquare)
    private static final object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare();
    }

    public static object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RandomScaleCropAndPadToSquare>
        PARSER = new com.google.protobuf.AbstractParser<RandomScaleCropAndPadToSquare>() {
      @java.lang.Override
      public RandomScaleCropAndPadToSquare parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RandomScaleCropAndPadToSquare(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RandomScaleCropAndPadToSquare> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RandomScaleCropAndPadToSquare> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.RandomScaleCropAndPadToSquare getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AdjustGammaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:object_detection.protos.AdjustGamma)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional float gamma = 1 [default = 1];</code>
     * @return Whether the gamma field is set.
     */
    boolean hasGamma();
    /**
     * <code>optional float gamma = 1 [default = 1];</code>
     * @return The gamma.
     */
    float getGamma();

    /**
     * <code>optional float gain = 2 [default = 1];</code>
     * @return Whether the gain field is set.
     */
    boolean hasGain();
    /**
     * <code>optional float gain = 2 [default = 1];</code>
     * @return The gain.
     */
    float getGain();
  }
  /**
   * <pre>
   * Adjusts the gamma of the image using the specified gamma and gain values.
   * </pre>
   *
   * Protobuf type {@code object_detection.protos.AdjustGamma}
   */
  public static final class AdjustGamma extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:object_detection.protos.AdjustGamma)
      AdjustGammaOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AdjustGamma.newBuilder() to construct.
    private AdjustGamma(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AdjustGamma() {
      gamma_ = 1F;
      gain_ = 1F;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AdjustGamma();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AdjustGamma(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              gamma_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              gain_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_AdjustGamma_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return object_detection.protos.Preprocessor.internal_static_object_detection_protos_AdjustGamma_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              object_detection.protos.Preprocessor.AdjustGamma.class, object_detection.protos.Preprocessor.AdjustGamma.Builder.class);
    }

    private int bitField0_;
    public static final int GAMMA_FIELD_NUMBER = 1;
    private float gamma_;
    /**
     * <code>optional float gamma = 1 [default = 1];</code>
     * @return Whether the gamma field is set.
     */
    @java.lang.Override
    public boolean hasGamma() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional float gamma = 1 [default = 1];</code>
     * @return The gamma.
     */
    @java.lang.Override
    public float getGamma() {
      return gamma_;
    }

    public static final int GAIN_FIELD_NUMBER = 2;
    private float gain_;
    /**
     * <code>optional float gain = 2 [default = 1];</code>
     * @return Whether the gain field is set.
     */
    @java.lang.Override
    public boolean hasGain() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional float gain = 2 [default = 1];</code>
     * @return The gain.
     */
    @java.lang.Override
    public float getGain() {
      return gain_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFloat(1, gamma_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, gain_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, gamma_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, gain_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof object_detection.protos.Preprocessor.AdjustGamma)) {
        return super.equals(obj);
      }
      object_detection.protos.Preprocessor.AdjustGamma other = (object_detection.protos.Preprocessor.AdjustGamma) obj;

      if (hasGamma() != other.hasGamma()) return false;
      if (hasGamma()) {
        if (java.lang.Float.floatToIntBits(getGamma())
            != java.lang.Float.floatToIntBits(
                other.getGamma())) return false;
      }
      if (hasGain() != other.hasGain()) return false;
      if (hasGain()) {
        if (java.lang.Float.floatToIntBits(getGain())
            != java.lang.Float.floatToIntBits(
                other.getGain())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasGamma()) {
        hash = (37 * hash) + GAMMA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getGamma());
      }
      if (hasGain()) {
        hash = (37 * hash) + GAIN_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getGain());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static object_detection.protos.Preprocessor.AdjustGamma parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.AdjustGamma parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.AdjustGamma parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.AdjustGamma parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.AdjustGamma parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static object_detection.protos.Preprocessor.AdjustGamma parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.AdjustGamma parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.AdjustGamma parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.AdjustGamma parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.AdjustGamma parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static object_detection.protos.Preprocessor.AdjustGamma parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static object_detection.protos.Preprocessor.AdjustGamma parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(object_detection.protos.Preprocessor.AdjustGamma prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Adjusts the gamma of the image using the specified gamma and gain values.
     * </pre>
     *
     * Protobuf type {@code object_detection.protos.AdjustGamma}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:object_detection.protos.AdjustGamma)
        object_detection.protos.Preprocessor.AdjustGammaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_AdjustGamma_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_AdjustGamma_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                object_detection.protos.Preprocessor.AdjustGamma.class, object_detection.protos.Preprocessor.AdjustGamma.Builder.class);
      }

      // Construct using object_detection.protos.Preprocessor.AdjustGamma.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        gamma_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000001);
        gain_ = 1F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return object_detection.protos.Preprocessor.internal_static_object_detection_protos_AdjustGamma_descriptor;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.AdjustGamma getDefaultInstanceForType() {
        return object_detection.protos.Preprocessor.AdjustGamma.getDefaultInstance();
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.AdjustGamma build() {
        object_detection.protos.Preprocessor.AdjustGamma result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public object_detection.protos.Preprocessor.AdjustGamma buildPartial() {
        object_detection.protos.Preprocessor.AdjustGamma result = new object_detection.protos.Preprocessor.AdjustGamma(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gamma_ = gamma_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gain_ = gain_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof object_detection.protos.Preprocessor.AdjustGamma) {
          return mergeFrom((object_detection.protos.Preprocessor.AdjustGamma)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(object_detection.protos.Preprocessor.AdjustGamma other) {
        if (other == object_detection.protos.Preprocessor.AdjustGamma.getDefaultInstance()) return this;
        if (other.hasGamma()) {
          setGamma(other.getGamma());
        }
        if (other.hasGain()) {
          setGain(other.getGain());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        object_detection.protos.Preprocessor.AdjustGamma parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (object_detection.protos.Preprocessor.AdjustGamma) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float gamma_ = 1F;
      /**
       * <code>optional float gamma = 1 [default = 1];</code>
       * @return Whether the gamma field is set.
       */
      @java.lang.Override
      public boolean hasGamma() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional float gamma = 1 [default = 1];</code>
       * @return The gamma.
       */
      @java.lang.Override
      public float getGamma() {
        return gamma_;
      }
      /**
       * <code>optional float gamma = 1 [default = 1];</code>
       * @param value The gamma to set.
       * @return This builder for chaining.
       */
      public Builder setGamma(float value) {
        bitField0_ |= 0x00000001;
        gamma_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float gamma = 1 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearGamma() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gamma_ = 1F;
        onChanged();
        return this;
      }

      private float gain_ = 1F;
      /**
       * <code>optional float gain = 2 [default = 1];</code>
       * @return Whether the gain field is set.
       */
      @java.lang.Override
      public boolean hasGain() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional float gain = 2 [default = 1];</code>
       * @return The gain.
       */
      @java.lang.Override
      public float getGain() {
        return gain_;
      }
      /**
       * <code>optional float gain = 2 [default = 1];</code>
       * @param value The gain to set.
       * @return This builder for chaining.
       */
      public Builder setGain(float value) {
        bitField0_ |= 0x00000002;
        gain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float gain = 2 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearGain() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gain_ = 1F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:object_detection.protos.AdjustGamma)
    }

    // @@protoc_insertion_point(class_scope:object_detection.protos.AdjustGamma)
    private static final object_detection.protos.Preprocessor.AdjustGamma DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new object_detection.protos.Preprocessor.AdjustGamma();
    }

    public static object_detection.protos.Preprocessor.AdjustGamma getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<AdjustGamma>
        PARSER = new com.google.protobuf.AbstractParser<AdjustGamma>() {
      @java.lang.Override
      public AdjustGamma parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AdjustGamma(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AdjustGamma> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AdjustGamma> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public object_detection.protos.Preprocessor.AdjustGamma getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_PreprocessingStep_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_PreprocessingStep_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_NormalizeImage_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_NormalizeImage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomHorizontalFlip_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomHorizontalFlip_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomVerticalFlip_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomVerticalFlip_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomRotation90_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomRotation90_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomPixelValueScale_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomPixelValueScale_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomImageScale_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomImageScale_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomRGBtoGray_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomRGBtoGray_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomAdjustBrightness_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomAdjustBrightness_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomAdjustContrast_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomAdjustContrast_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomAdjustHue_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomAdjustHue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomAdjustSaturation_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomAdjustSaturation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomDistortColor_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomDistortColor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomJitterBoxes_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomJitterBoxes_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomCropImage_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomCropImage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomPadImage_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomPadImage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomAbsolutePadImage_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomAbsolutePadImage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomCropPadImage_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomCropPadImage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomCropToAspectRatio_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomCropToAspectRatio_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomBlackPatches_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomBlackPatches_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomResizeMethod_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomResizeMethod_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RGBtoGray_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RGBtoGray_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_ScaleBoxesToPixelCoordinates_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_ScaleBoxesToPixelCoordinates_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_ResizeImage_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_ResizeImage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_SubtractChannelMean_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_SubtractChannelMean_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_SSDRandomCropOperation_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_SSDRandomCropOperation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_SSDRandomCrop_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_SSDRandomCrop_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_SSDRandomCropPadOperation_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_SSDRandomCropPadOperation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_SSDRandomCropPad_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_SSDRandomCropPad_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_SSDRandomCropFixedAspectRatioOperation_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_SSDRandomCropFixedAspectRatioOperation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_SSDRandomCropFixedAspectRatio_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_SSDRandomCropFixedAspectRatio_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatioOperation_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatioOperation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatio_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatio_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_ConvertClassLogitsToSoftmax_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_ConvertClassLogitsToSoftmax_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomSelfConcatImage_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomSelfConcatImage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_AutoAugmentImage_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_AutoAugmentImage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_DropLabelProbabilistically_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_DropLabelProbabilistically_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RemapLabels_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RemapLabels_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomJpegQuality_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomJpegQuality_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomDownscaleToTargetPixels_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomDownscaleToTargetPixels_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomPatchGaussian_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomPatchGaussian_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomSquareCropByScale_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomSquareCropByScale_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_RandomScaleCropAndPadToSquare_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_RandomScaleCropAndPadToSquare_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_object_detection_protos_AdjustGamma_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_object_detection_protos_AdjustGamma_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*object_detection/protos/preprocessor.p" +
      "roto\022\027object_detection.protos\"\325\030\n\021Prepro" +
      "cessingStep\022B\n\017normalize_image\030\001 \001(\0132\'.o" +
      "bject_detection.protos.NormalizeImageH\000\022" +
      "O\n\026random_horizontal_flip\030\002 \001(\0132-.object" +
      "_detection.protos.RandomHorizontalFlipH\000" +
      "\022R\n\030random_pixel_value_scale\030\003 \001(\0132..obj" +
      "ect_detection.protos.RandomPixelValueSca" +
      "leH\000\022G\n\022random_image_scale\030\004 \001(\0132).objec" +
      "t_detection.protos.RandomImageScaleH\000\022F\n" +
      "\022random_rgb_to_gray\030\005 \001(\0132(.object_detec" +
      "tion.protos.RandomRGBtoGrayH\000\022S\n\030random_" +
      "adjust_brightness\030\006 \001(\0132/.object_detecti" +
      "on.protos.RandomAdjustBrightnessH\000\022O\n\026ra" +
      "ndom_adjust_contrast\030\007 \001(\0132-.object_dete" +
      "ction.protos.RandomAdjustContrastH\000\022E\n\021r" +
      "andom_adjust_hue\030\010 \001(\0132(.object_detectio" +
      "n.protos.RandomAdjustHueH\000\022S\n\030random_adj" +
      "ust_saturation\030\t \001(\0132/.object_detection." +
      "protos.RandomAdjustSaturationH\000\022K\n\024rando" +
      "m_distort_color\030\n \001(\0132+.object_detection" +
      ".protos.RandomDistortColorH\000\022I\n\023random_j" +
      "itter_boxes\030\013 \001(\0132*.object_detection.pro" +
      "tos.RandomJitterBoxesH\000\022E\n\021random_crop_i" +
      "mage\030\014 \001(\0132(.object_detection.protos.Ran" +
      "domCropImageH\000\022C\n\020random_pad_image\030\r \001(\013" +
      "2\'.object_detection.protos.RandomPadImag" +
      "eH\000\022L\n\025random_crop_pad_image\030\016 \001(\0132+.obj" +
      "ect_detection.protos.RandomCropPadImageH" +
      "\000\022W\n\033random_crop_to_aspect_ratio\030\017 \001(\01320" +
      ".object_detection.protos.RandomCropToAsp" +
      "ectRatioH\000\022K\n\024random_black_patches\030\020 \001(\013" +
      "2+.object_detection.protos.RandomBlackPa" +
      "tchesH\000\022K\n\024random_resize_method\030\021 \001(\0132+." +
      "object_detection.protos.RandomResizeMeth" +
      "odH\000\022a\n scale_boxes_to_pixel_coordinates" +
      "\030\022 \001(\01325.object_detection.protos.ScaleBo" +
      "xesToPixelCoordinatesH\000\022<\n\014resize_image\030" +
      "\023 \001(\0132$.object_detection.protos.ResizeIm" +
      "ageH\000\022M\n\025subtract_channel_mean\030\024 \001(\0132,.o" +
      "bject_detection.protos.SubtractChannelMe" +
      "anH\000\022A\n\017ssd_random_crop\030\025 \001(\0132&.object_d" +
      "etection.protos.SSDRandomCropH\000\022H\n\023ssd_r" +
      "andom_crop_pad\030\026 \001(\0132).object_detection." +
      "protos.SSDRandomCropPadH\000\022d\n\"ssd_random_" +
      "crop_fixed_aspect_ratio\030\027 \001(\01326.object_d" +
      "etection.protos.SSDRandomCropFixedAspect" +
      "RatioH\000\022k\n&ssd_random_crop_pad_fixed_asp" +
      "ect_ratio\030\030 \001(\01329.object_detection.proto" +
      "s.SSDRandomCropPadFixedAspectRatioH\000\022K\n\024" +
      "random_vertical_flip\030\031 \001(\0132+.object_dete" +
      "ction.protos.RandomVerticalFlipH\000\022F\n\021ran" +
      "dom_rotation90\030\032 \001(\0132).object_detection." +
      "protos.RandomRotation90H\000\0229\n\013rgb_to_gray" +
      "\030\033 \001(\0132\".object_detection.protos.RGBtoGr" +
      "ayH\000\022_\n\037convert_class_logits_to_softmax\030" +
      "\034 \001(\01324.object_detection.protos.ConvertC" +
      "lassLogitsToSoftmaxH\000\022T\n\031random_absolute" +
      "_pad_image\030\035 \001(\0132/.object_detection.prot" +
      "os.RandomAbsolutePadImageH\000\022R\n\030random_se" +
      "lf_concat_image\030\036 \001(\0132..object_detection" +
      ".protos.RandomSelfConcatImageH\000\022F\n\021autoa" +
      "ugment_image\030\037 \001(\0132).object_detection.pr" +
      "otos.AutoAugmentImageH\000\022[\n\034drop_label_pr" +
      "obabilistically\030  \001(\01323.object_detection" +
      ".protos.DropLabelProbabilisticallyH\000\022<\n\014" +
      "remap_labels\030! \001(\0132$.object_detection.pr" +
      "otos.RemapLabelsH\000\022I\n\023random_jpeg_qualit" +
      "y\030\" \001(\0132*.object_detection.protos.Random" +
      "JpegQualityH\000\022c\n!random_downscale_to_tar" +
      "get_pixels\030# \001(\01326.object_detection.prot" +
      "os.RandomDownscaleToTargetPixelsH\000\022M\n\025ra" +
      "ndom_patch_gaussian\030$ \001(\0132,.object_detec" +
      "tion.protos.RandomPatchGaussianH\000\022W\n\033ran" +
      "dom_square_crop_by_scale\030% \001(\01320.object_" +
      "detection.protos.RandomSquareCropByScale" +
      "H\000\022e\n#random_scale_crop_and_pad_to_squar" +
      "e\030& \001(\01326.object_detection.protos.Random" +
      "ScaleCropAndPadToSquareH\000\022<\n\014adjust_gamm" +
      "a\030\' \001(\0132$.object_detection.protos.Adjust" +
      "GammaH\000B\024\n\022preprocessing_step\"v\n\016Normali" +
      "zeImage\022\027\n\017original_minval\030\001 \001(\002\022\027\n\017orig" +
      "inal_maxval\030\002 \001(\002\022\030\n\rtarget_minval\030\003 \001(\002" +
      ":\0010\022\030\n\rtarget_maxval\030\004 \001(\002:\0011\"S\n\024RandomH" +
      "orizontalFlip\022!\n\031keypoint_flip_permutati" +
      "on\030\001 \003(\005\022\030\n\013probability\030\002 \001(\002:\0030.5\"Q\n\022Ra" +
      "ndomVerticalFlip\022!\n\031keypoint_flip_permut" +
      "ation\030\001 \003(\005\022\030\n\013probability\030\002 \001(\002:\0030.5\"N\n" +
      "\020RandomRotation90\022 \n\030keypoint_rot_permut" +
      "ation\030\001 \003(\005\022\030\n\013probability\030\002 \001(\002:\0030.5\"A\n" +
      "\025RandomPixelValueScale\022\023\n\006minval\030\001 \001(\002:\003" +
      "0.9\022\023\n\006maxval\030\002 \001(\002:\0031.1\"L\n\020RandomImageS" +
      "cale\022\034\n\017min_scale_ratio\030\001 \001(\002:\0030.5\022\032\n\017ma" +
      "x_scale_ratio\030\002 \001(\002:\0012\"+\n\017RandomRGBtoGra" +
      "y\022\030\n\013probability\030\001 \001(\002:\0030.1\"0\n\026RandomAdj" +
      "ustBrightness\022\026\n\tmax_delta\030\001 \001(\002:\0030.2\"G\n" +
      "\024RandomAdjustContrast\022\026\n\tmin_delta\030\001 \001(\002" +
      ":\0030.8\022\027\n\tmax_delta\030\002 \001(\002:\0041.25\"*\n\017Random" +
      "AdjustHue\022\027\n\tmax_delta\030\001 \001(\002:\0040.02\"I\n\026Ra" +
      "ndomAdjustSaturation\022\026\n\tmin_delta\030\001 \001(\002:" +
      "\0030.8\022\027\n\tmax_delta\030\002 \001(\002:\0041.25\",\n\022RandomD" +
      "istortColor\022\026\n\016color_ordering\030\001 \001(\005\"(\n\021R" +
      "andomJitterBoxes\022\023\n\005ratio\030\001 \001(\002:\0040.05\"\353\001" +
      "\n\017RandomCropImage\022\035\n\022min_object_covered\030" +
      "\001 \001(\002:\0011\022\036\n\020min_aspect_ratio\030\002 \001(\002:\0040.75" +
      "\022\036\n\020max_aspect_ratio\030\003 \001(\002:\0041.33\022\025\n\010min_" +
      "area\030\004 \001(\002:\0030.1\022\023\n\010max_area\030\005 \001(\002:\0011\022\033\n\016" +
      "overlap_thresh\030\006 \001(\002:\0030.3\022\030\n\nclip_boxes\030" +
      "\010 \001(\010:\004true\022\026\n\013random_coef\030\007 \001(\002:\0010\"\211\001\n\016" +
      "RandomPadImage\022\030\n\020min_image_height\030\001 \001(\005" +
      "\022\027\n\017min_image_width\030\002 \001(\005\022\030\n\020max_image_h" +
      "eight\030\003 \001(\005\022\027\n\017max_image_width\030\004 \001(\005\022\021\n\t" +
      "pad_color\030\005 \003(\002\"b\n\026RandomAbsolutePadImag" +
      "e\022\032\n\022max_height_padding\030\001 \001(\005\022\031\n\021max_wid" +
      "th_padding\030\002 \001(\005\022\021\n\tpad_color\030\003 \003(\002\"\277\002\n\022" +
      "RandomCropPadImage\022\035\n\022min_object_covered" +
      "\030\001 \001(\002:\0011\022\036\n\020min_aspect_ratio\030\002 \001(\002:\0040.7" +
      "5\022\036\n\020max_aspect_ratio\030\003 \001(\002:\0041.33\022\025\n\010min" +
      "_area\030\004 \001(\002:\0030.1\022\023\n\010max_area\030\005 \001(\002:\0011\022\033\n" +
      "\016overlap_thresh\030\006 \001(\002:\0030.3\022\030\n\nclip_boxes" +
      "\030\013 \001(\010:\004true\022\026\n\013random_coef\030\007 \001(\002:\0010\022\035\n\025" +
      "min_padded_size_ratio\030\010 \003(\002\022\035\n\025max_padde" +
      "d_size_ratio\030\t \003(\002\022\021\n\tpad_color\030\n \003(\002\"i\n" +
      "\027RandomCropToAspectRatio\022\027\n\014aspect_ratio" +
      "\030\001 \001(\002:\0011\022\033\n\016overlap_thresh\030\002 \001(\002:\0030.3\022\030" +
      "\n\nclip_boxes\030\003 \001(\010:\004true\"o\n\022RandomBlackP" +
      "atches\022\035\n\021max_black_patches\030\001 \001(\005:\00210\022\030\n" +
      "\013probability\030\002 \001(\002:\0030.5\022 \n\023size_to_image" +
      "_ratio\030\003 \001(\002:\0030.1\"A\n\022RandomResizeMethod\022" +
      "\025\n\rtarget_height\030\001 \001(\005\022\024\n\014target_width\030\002" +
      " \001(\005\"\013\n\tRGBtoGray\"\036\n\034ScaleBoxesToPixelCo" +
      "ordinates\"\300\001\n\013ResizeImage\022\022\n\nnew_height\030" +
      "\001 \001(\005\022\021\n\tnew_width\030\002 \001(\005\022E\n\006method\030\003 \001(\016" +
      "2+.object_detection.protos.ResizeImage.M" +
      "ethod:\010BILINEAR\"C\n\006Method\022\010\n\004AREA\020\001\022\013\n\007B" +
      "ICUBIC\020\002\022\014\n\010BILINEAR\020\003\022\024\n\020NEAREST_NEIGHB" +
      "OR\020\004\"$\n\023SubtractChannelMean\022\r\n\005means\030\001 \003" +
      "(\002\"\323\001\n\026SSDRandomCropOperation\022\032\n\022min_obj" +
      "ect_covered\030\001 \001(\002\022\030\n\020min_aspect_ratio\030\002 " +
      "\001(\002\022\030\n\020max_aspect_ratio\030\003 \001(\002\022\020\n\010min_are" +
      "a\030\004 \001(\002\022\020\n\010max_area\030\005 \001(\002\022\026\n\016overlap_thr" +
      "esh\030\006 \001(\002\022\030\n\nclip_boxes\030\010 \001(\010:\004true\022\023\n\013r" +
      "andom_coef\030\007 \001(\002\"T\n\rSSDRandomCrop\022C\n\nope" +
      "rations\030\001 \003(\0132/.object_detection.protos." +
      "SSDRandomCropOperation\"\323\002\n\031SSDRandomCrop" +
      "PadOperation\022\032\n\022min_object_covered\030\001 \001(\002" +
      "\022\030\n\020min_aspect_ratio\030\002 \001(\002\022\030\n\020max_aspect" +
      "_ratio\030\003 \001(\002\022\020\n\010min_area\030\004 \001(\002\022\020\n\010max_ar" +
      "ea\030\005 \001(\002\022\026\n\016overlap_thresh\030\006 \001(\002\022\030\n\nclip" +
      "_boxes\030\r \001(\010:\004true\022\023\n\013random_coef\030\007 \001(\002\022" +
      "\035\n\025min_padded_size_ratio\030\010 \003(\002\022\035\n\025max_pa" +
      "dded_size_ratio\030\t \003(\002\022\023\n\013pad_color_r\030\n \001" +
      "(\002\022\023\n\013pad_color_g\030\013 \001(\002\022\023\n\013pad_color_b\030\014" +
      " \001(\002\"Z\n\020SSDRandomCropPad\022F\n\noperations\030\001" +
      " \003(\01322.object_detection.protos.SSDRandom" +
      "CropPadOperation\"\257\001\n&SSDRandomCropFixedA" +
      "spectRatioOperation\022\032\n\022min_object_covere" +
      "d\030\001 \001(\002\022\020\n\010min_area\030\004 \001(\002\022\020\n\010max_area\030\005 " +
      "\001(\002\022\026\n\016overlap_thresh\030\006 \001(\002\022\030\n\nclip_boxe" +
      "s\030\010 \001(\010:\004true\022\023\n\013random_coef\030\007 \001(\002\"\215\001\n\035S" +
      "SDRandomCropFixedAspectRatio\022S\n\noperatio" +
      "ns\030\001 \003(\0132?.object_detection.protos.SSDRa" +
      "ndomCropFixedAspectRatioOperation\022\027\n\014asp" +
      "ect_ratio\030\002 \001(\002:\0011\"\346\001\n)SSDRandomCropPadF" +
      "ixedAspectRatioOperation\022\032\n\022min_object_c" +
      "overed\030\001 \001(\002\022\030\n\020min_aspect_ratio\030\002 \001(\002\022\030" +
      "\n\020max_aspect_ratio\030\003 \001(\002\022\020\n\010min_area\030\004 \001" +
      "(\002\022\020\n\010max_area\030\005 \001(\002\022\026\n\016overlap_thresh\030\006" +
      " \001(\002\022\030\n\nclip_boxes\030\010 \001(\010:\004true\022\023\n\013random" +
      "_coef\030\007 \001(\002\"\321\001\n SSDRandomCropPadFixedAsp" +
      "ectRatio\022V\n\noperations\030\001 \003(\0132B.object_de" +
      "tection.protos.SSDRandomCropPadFixedAspe" +
      "ctRatioOperation\022\027\n\014aspect_ratio\030\002 \001(\002:\001" +
      "1\022\035\n\025min_padded_size_ratio\030\003 \003(\002\022\035\n\025max_" +
      "padded_size_ratio\030\004 \003(\002\"5\n\033ConvertClassL" +
      "ogitsToSoftmax\022\026\n\013temperature\030\001 \001(\002:\0011\"m" +
      "\n\025RandomSelfConcatImage\022(\n\033concat_vertic" +
      "al_probability\030\001 \001(\002:\0030.1\022*\n\035concat_hori" +
      "zontal_probability\030\002 \001(\002:\0030.1\"+\n\020AutoAug" +
      "mentImage\022\027\n\013policy_name\030\001 \001(\t:\002v0\"H\n\032Dr" +
      "opLabelProbabilistically\022\r\n\005label\030\001 \001(\005\022" +
      "\033\n\020drop_probability\030\002 \001(\002:\0011\"9\n\013RemapLab" +
      "els\022\027\n\017original_labels\030\001 \003(\005\022\021\n\tnew_labe" +
      "l\030\002 \001(\005\"g\n\021RandomJpegQuality\022\026\n\013random_c" +
      "oef\030\001 \001(\002:\0010\022\033\n\020min_jpeg_quality\030\002 \001(\005:\001" +
      "0\022\035\n\020max_jpeg_quality\030\003 \001(\005:\003100\"}\n\035Rand" +
      "omDownscaleToTargetPixels\022\026\n\013random_coef" +
      "\030\001 \001(\002:\0010\022!\n\021min_target_pixels\030\002 \001(\005:\00630" +
      "0000\022!\n\021max_target_pixels\030\003 \001(\005:\006500000\"" +
      "\245\001\n\023RandomPatchGaussian\022\026\n\013random_coef\030\001" +
      " \001(\002:\0010\022\031\n\016min_patch_size\030\002 \001(\005:\0011\022\033\n\016ma" +
      "x_patch_size\030\003 \001(\005:\003250\022\036\n\023min_gaussian_" +
      "stddev\030\004 \001(\002:\0010\022\036\n\023max_gaussian_stddev\030\005" +
      " \001(\002:\0011\"y\n\027RandomSquareCropByScale\022\027\n\nma" +
      "x_border\030\001 \001(\005:\003128\022\026\n\tscale_min\030\002 \001(\002:\003" +
      "0.6\022\026\n\tscale_max\030\003 \001(\002:\0031.3\022\025\n\nnum_scale" +
      "s\030\004 \001(\005:\0018\"g\n\035RandomScaleCropAndPadToSqu" +
      "are\022\030\n\013output_size\030\001 \001(\005:\003512\022\026\n\tscale_m" +
      "in\030\002 \001(\002:\0030.1\022\024\n\tscale_max\030\003 \001(\002:\0012\"0\n\013A" +
      "djustGamma\022\020\n\005gamma\030\001 \001(\002:\0011\022\017\n\004gain\030\002 \001" +
      "(\002:\0011"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_object_detection_protos_PreprocessingStep_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_object_detection_protos_PreprocessingStep_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_PreprocessingStep_descriptor,
        new java.lang.String[] { "NormalizeImage", "RandomHorizontalFlip", "RandomPixelValueScale", "RandomImageScale", "RandomRgbToGray", "RandomAdjustBrightness", "RandomAdjustContrast", "RandomAdjustHue", "RandomAdjustSaturation", "RandomDistortColor", "RandomJitterBoxes", "RandomCropImage", "RandomPadImage", "RandomCropPadImage", "RandomCropToAspectRatio", "RandomBlackPatches", "RandomResizeMethod", "ScaleBoxesToPixelCoordinates", "ResizeImage", "SubtractChannelMean", "SsdRandomCrop", "SsdRandomCropPad", "SsdRandomCropFixedAspectRatio", "SsdRandomCropPadFixedAspectRatio", "RandomVerticalFlip", "RandomRotation90", "RgbToGray", "ConvertClassLogitsToSoftmax", "RandomAbsolutePadImage", "RandomSelfConcatImage", "AutoaugmentImage", "DropLabelProbabilistically", "RemapLabels", "RandomJpegQuality", "RandomDownscaleToTargetPixels", "RandomPatchGaussian", "RandomSquareCropByScale", "RandomScaleCropAndPadToSquare", "AdjustGamma", "PreprocessingStep", });
    internal_static_object_detection_protos_NormalizeImage_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_object_detection_protos_NormalizeImage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_NormalizeImage_descriptor,
        new java.lang.String[] { "OriginalMinval", "OriginalMaxval", "TargetMinval", "TargetMaxval", });
    internal_static_object_detection_protos_RandomHorizontalFlip_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_object_detection_protos_RandomHorizontalFlip_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomHorizontalFlip_descriptor,
        new java.lang.String[] { "KeypointFlipPermutation", "Probability", });
    internal_static_object_detection_protos_RandomVerticalFlip_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_object_detection_protos_RandomVerticalFlip_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomVerticalFlip_descriptor,
        new java.lang.String[] { "KeypointFlipPermutation", "Probability", });
    internal_static_object_detection_protos_RandomRotation90_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_object_detection_protos_RandomRotation90_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomRotation90_descriptor,
        new java.lang.String[] { "KeypointRotPermutation", "Probability", });
    internal_static_object_detection_protos_RandomPixelValueScale_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_object_detection_protos_RandomPixelValueScale_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomPixelValueScale_descriptor,
        new java.lang.String[] { "Minval", "Maxval", });
    internal_static_object_detection_protos_RandomImageScale_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_object_detection_protos_RandomImageScale_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomImageScale_descriptor,
        new java.lang.String[] { "MinScaleRatio", "MaxScaleRatio", });
    internal_static_object_detection_protos_RandomRGBtoGray_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_object_detection_protos_RandomRGBtoGray_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomRGBtoGray_descriptor,
        new java.lang.String[] { "Probability", });
    internal_static_object_detection_protos_RandomAdjustBrightness_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_object_detection_protos_RandomAdjustBrightness_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomAdjustBrightness_descriptor,
        new java.lang.String[] { "MaxDelta", });
    internal_static_object_detection_protos_RandomAdjustContrast_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_object_detection_protos_RandomAdjustContrast_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomAdjustContrast_descriptor,
        new java.lang.String[] { "MinDelta", "MaxDelta", });
    internal_static_object_detection_protos_RandomAdjustHue_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_object_detection_protos_RandomAdjustHue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomAdjustHue_descriptor,
        new java.lang.String[] { "MaxDelta", });
    internal_static_object_detection_protos_RandomAdjustSaturation_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_object_detection_protos_RandomAdjustSaturation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomAdjustSaturation_descriptor,
        new java.lang.String[] { "MinDelta", "MaxDelta", });
    internal_static_object_detection_protos_RandomDistortColor_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_object_detection_protos_RandomDistortColor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomDistortColor_descriptor,
        new java.lang.String[] { "ColorOrdering", });
    internal_static_object_detection_protos_RandomJitterBoxes_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_object_detection_protos_RandomJitterBoxes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomJitterBoxes_descriptor,
        new java.lang.String[] { "Ratio", });
    internal_static_object_detection_protos_RandomCropImage_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_object_detection_protos_RandomCropImage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomCropImage_descriptor,
        new java.lang.String[] { "MinObjectCovered", "MinAspectRatio", "MaxAspectRatio", "MinArea", "MaxArea", "OverlapThresh", "ClipBoxes", "RandomCoef", });
    internal_static_object_detection_protos_RandomPadImage_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_object_detection_protos_RandomPadImage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomPadImage_descriptor,
        new java.lang.String[] { "MinImageHeight", "MinImageWidth", "MaxImageHeight", "MaxImageWidth", "PadColor", });
    internal_static_object_detection_protos_RandomAbsolutePadImage_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_object_detection_protos_RandomAbsolutePadImage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomAbsolutePadImage_descriptor,
        new java.lang.String[] { "MaxHeightPadding", "MaxWidthPadding", "PadColor", });
    internal_static_object_detection_protos_RandomCropPadImage_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_object_detection_protos_RandomCropPadImage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomCropPadImage_descriptor,
        new java.lang.String[] { "MinObjectCovered", "MinAspectRatio", "MaxAspectRatio", "MinArea", "MaxArea", "OverlapThresh", "ClipBoxes", "RandomCoef", "MinPaddedSizeRatio", "MaxPaddedSizeRatio", "PadColor", });
    internal_static_object_detection_protos_RandomCropToAspectRatio_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_object_detection_protos_RandomCropToAspectRatio_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomCropToAspectRatio_descriptor,
        new java.lang.String[] { "AspectRatio", "OverlapThresh", "ClipBoxes", });
    internal_static_object_detection_protos_RandomBlackPatches_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_object_detection_protos_RandomBlackPatches_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomBlackPatches_descriptor,
        new java.lang.String[] { "MaxBlackPatches", "Probability", "SizeToImageRatio", });
    internal_static_object_detection_protos_RandomResizeMethod_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_object_detection_protos_RandomResizeMethod_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomResizeMethod_descriptor,
        new java.lang.String[] { "TargetHeight", "TargetWidth", });
    internal_static_object_detection_protos_RGBtoGray_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_object_detection_protos_RGBtoGray_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RGBtoGray_descriptor,
        new java.lang.String[] { });
    internal_static_object_detection_protos_ScaleBoxesToPixelCoordinates_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_object_detection_protos_ScaleBoxesToPixelCoordinates_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_ScaleBoxesToPixelCoordinates_descriptor,
        new java.lang.String[] { });
    internal_static_object_detection_protos_ResizeImage_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_object_detection_protos_ResizeImage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_ResizeImage_descriptor,
        new java.lang.String[] { "NewHeight", "NewWidth", "Method", });
    internal_static_object_detection_protos_SubtractChannelMean_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_object_detection_protos_SubtractChannelMean_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_SubtractChannelMean_descriptor,
        new java.lang.String[] { "Means", });
    internal_static_object_detection_protos_SSDRandomCropOperation_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_object_detection_protos_SSDRandomCropOperation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_SSDRandomCropOperation_descriptor,
        new java.lang.String[] { "MinObjectCovered", "MinAspectRatio", "MaxAspectRatio", "MinArea", "MaxArea", "OverlapThresh", "ClipBoxes", "RandomCoef", });
    internal_static_object_detection_protos_SSDRandomCrop_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_object_detection_protos_SSDRandomCrop_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_SSDRandomCrop_descriptor,
        new java.lang.String[] { "Operations", });
    internal_static_object_detection_protos_SSDRandomCropPadOperation_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_object_detection_protos_SSDRandomCropPadOperation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_SSDRandomCropPadOperation_descriptor,
        new java.lang.String[] { "MinObjectCovered", "MinAspectRatio", "MaxAspectRatio", "MinArea", "MaxArea", "OverlapThresh", "ClipBoxes", "RandomCoef", "MinPaddedSizeRatio", "MaxPaddedSizeRatio", "PadColorR", "PadColorG", "PadColorB", });
    internal_static_object_detection_protos_SSDRandomCropPad_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_object_detection_protos_SSDRandomCropPad_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_SSDRandomCropPad_descriptor,
        new java.lang.String[] { "Operations", });
    internal_static_object_detection_protos_SSDRandomCropFixedAspectRatioOperation_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_object_detection_protos_SSDRandomCropFixedAspectRatioOperation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_SSDRandomCropFixedAspectRatioOperation_descriptor,
        new java.lang.String[] { "MinObjectCovered", "MinArea", "MaxArea", "OverlapThresh", "ClipBoxes", "RandomCoef", });
    internal_static_object_detection_protos_SSDRandomCropFixedAspectRatio_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_object_detection_protos_SSDRandomCropFixedAspectRatio_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_SSDRandomCropFixedAspectRatio_descriptor,
        new java.lang.String[] { "Operations", "AspectRatio", });
    internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatioOperation_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatioOperation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatioOperation_descriptor,
        new java.lang.String[] { "MinObjectCovered", "MinAspectRatio", "MaxAspectRatio", "MinArea", "MaxArea", "OverlapThresh", "ClipBoxes", "RandomCoef", });
    internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatio_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatio_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_SSDRandomCropPadFixedAspectRatio_descriptor,
        new java.lang.String[] { "Operations", "AspectRatio", "MinPaddedSizeRatio", "MaxPaddedSizeRatio", });
    internal_static_object_detection_protos_ConvertClassLogitsToSoftmax_descriptor =
      getDescriptor().getMessageTypes().get(33);
    internal_static_object_detection_protos_ConvertClassLogitsToSoftmax_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_ConvertClassLogitsToSoftmax_descriptor,
        new java.lang.String[] { "Temperature", });
    internal_static_object_detection_protos_RandomSelfConcatImage_descriptor =
      getDescriptor().getMessageTypes().get(34);
    internal_static_object_detection_protos_RandomSelfConcatImage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomSelfConcatImage_descriptor,
        new java.lang.String[] { "ConcatVerticalProbability", "ConcatHorizontalProbability", });
    internal_static_object_detection_protos_AutoAugmentImage_descriptor =
      getDescriptor().getMessageTypes().get(35);
    internal_static_object_detection_protos_AutoAugmentImage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_AutoAugmentImage_descriptor,
        new java.lang.String[] { "PolicyName", });
    internal_static_object_detection_protos_DropLabelProbabilistically_descriptor =
      getDescriptor().getMessageTypes().get(36);
    internal_static_object_detection_protos_DropLabelProbabilistically_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_DropLabelProbabilistically_descriptor,
        new java.lang.String[] { "Label", "DropProbability", });
    internal_static_object_detection_protos_RemapLabels_descriptor =
      getDescriptor().getMessageTypes().get(37);
    internal_static_object_detection_protos_RemapLabels_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RemapLabels_descriptor,
        new java.lang.String[] { "OriginalLabels", "NewLabel", });
    internal_static_object_detection_protos_RandomJpegQuality_descriptor =
      getDescriptor().getMessageTypes().get(38);
    internal_static_object_detection_protos_RandomJpegQuality_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomJpegQuality_descriptor,
        new java.lang.String[] { "RandomCoef", "MinJpegQuality", "MaxJpegQuality", });
    internal_static_object_detection_protos_RandomDownscaleToTargetPixels_descriptor =
      getDescriptor().getMessageTypes().get(39);
    internal_static_object_detection_protos_RandomDownscaleToTargetPixels_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomDownscaleToTargetPixels_descriptor,
        new java.lang.String[] { "RandomCoef", "MinTargetPixels", "MaxTargetPixels", });
    internal_static_object_detection_protos_RandomPatchGaussian_descriptor =
      getDescriptor().getMessageTypes().get(40);
    internal_static_object_detection_protos_RandomPatchGaussian_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomPatchGaussian_descriptor,
        new java.lang.String[] { "RandomCoef", "MinPatchSize", "MaxPatchSize", "MinGaussianStddev", "MaxGaussianStddev", });
    internal_static_object_detection_protos_RandomSquareCropByScale_descriptor =
      getDescriptor().getMessageTypes().get(41);
    internal_static_object_detection_protos_RandomSquareCropByScale_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomSquareCropByScale_descriptor,
        new java.lang.String[] { "MaxBorder", "ScaleMin", "ScaleMax", "NumScales", });
    internal_static_object_detection_protos_RandomScaleCropAndPadToSquare_descriptor =
      getDescriptor().getMessageTypes().get(42);
    internal_static_object_detection_protos_RandomScaleCropAndPadToSquare_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_RandomScaleCropAndPadToSquare_descriptor,
        new java.lang.String[] { "OutputSize", "ScaleMin", "ScaleMax", });
    internal_static_object_detection_protos_AdjustGamma_descriptor =
      getDescriptor().getMessageTypes().get(43);
    internal_static_object_detection_protos_AdjustGamma_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_object_detection_protos_AdjustGamma_descriptor,
        new java.lang.String[] { "Gamma", "Gain", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
